/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
)

// checks if the CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner{}

// CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner struct for CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner
type CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner struct {
	// Unique identifier of the tax, created by Lago.
	LagoTaxId *string `json:"lago_tax_id,omitempty"`
	// Name of the tax.
	TaxName *string `json:"tax_name,omitempty"`
	// Unique code used to identify the tax associated with the API request.
	TaxCode *string `json:"tax_code,omitempty"`
	// The percentage rate of the tax
	TaxRate *float32 `json:"tax_rate,omitempty"`
	// Internal description of the taxe
	TaxDescription *string `json:"tax_description,omitempty"`
	BaseAmountCents *int32 `json:"base_amount_cents,omitempty"`
	// Amount of the tax
	AmountCents *int32 `json:"amount_cents,omitempty"`
	AmountCurrency *Currency `json:"amount_currency,omitempty"`
}

// NewCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner instantiates a new CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner() *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner {
	this := CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner{}
	return &this
}

// NewCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInnerWithDefaults instantiates a new CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInnerWithDefaults() *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner {
	this := CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner{}
	return &this
}

// GetLagoTaxId returns the LagoTaxId field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetLagoTaxId() string {
	if o == nil || IsNil(o.LagoTaxId) {
		var ret string
		return ret
	}
	return *o.LagoTaxId
}

// GetLagoTaxIdOk returns a tuple with the LagoTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetLagoTaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.LagoTaxId) {
		return nil, false
	}
	return o.LagoTaxId, true
}

// HasLagoTaxId returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasLagoTaxId() bool {
	if o != nil && !IsNil(o.LagoTaxId) {
		return true
	}

	return false
}

// SetLagoTaxId gets a reference to the given string and assigns it to the LagoTaxId field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetLagoTaxId(v string) {
	o.LagoTaxId = &v
}

// GetTaxName returns the TaxName field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxName() string {
	if o == nil || IsNil(o.TaxName) {
		var ret string
		return ret
	}
	return *o.TaxName
}

// GetTaxNameOk returns a tuple with the TaxName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaxName) {
		return nil, false
	}
	return o.TaxName, true
}

// HasTaxName returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasTaxName() bool {
	if o != nil && !IsNil(o.TaxName) {
		return true
	}

	return false
}

// SetTaxName gets a reference to the given string and assigns it to the TaxName field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetTaxName(v string) {
	o.TaxName = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxRate() float32 {
	if o == nil || IsNil(o.TaxRate) {
		var ret float32
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxRateOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasTaxRate() bool {
	if o != nil && !IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given float32 and assigns it to the TaxRate field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetTaxRate(v float32) {
	o.TaxRate = &v
}

// GetTaxDescription returns the TaxDescription field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxDescription() string {
	if o == nil || IsNil(o.TaxDescription) {
		var ret string
		return ret
	}
	return *o.TaxDescription
}

// GetTaxDescriptionOk returns a tuple with the TaxDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetTaxDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TaxDescription) {
		return nil, false
	}
	return o.TaxDescription, true
}

// HasTaxDescription returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasTaxDescription() bool {
	if o != nil && !IsNil(o.TaxDescription) {
		return true
	}

	return false
}

// SetTaxDescription gets a reference to the given string and assigns it to the TaxDescription field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetTaxDescription(v string) {
	o.TaxDescription = &v
}

// GetBaseAmountCents returns the BaseAmountCents field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetBaseAmountCents() int32 {
	if o == nil || IsNil(o.BaseAmountCents) {
		var ret int32
		return ret
	}
	return *o.BaseAmountCents
}

// GetBaseAmountCentsOk returns a tuple with the BaseAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetBaseAmountCentsOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAmountCents) {
		return nil, false
	}
	return o.BaseAmountCents, true
}

// HasBaseAmountCents returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasBaseAmountCents() bool {
	if o != nil && !IsNil(o.BaseAmountCents) {
		return true
	}

	return false
}

// SetBaseAmountCents gets a reference to the given int32 and assigns it to the BaseAmountCents field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetBaseAmountCents(v int32) {
	o.BaseAmountCents = &v
}

// GetAmountCents returns the AmountCents field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetAmountCents() int32 {
	if o == nil || IsNil(o.AmountCents) {
		var ret int32
		return ret
	}
	return *o.AmountCents
}

// GetAmountCentsOk returns a tuple with the AmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetAmountCentsOk() (*int32, bool) {
	if o == nil || IsNil(o.AmountCents) {
		return nil, false
	}
	return o.AmountCents, true
}

// HasAmountCents returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasAmountCents() bool {
	if o != nil && !IsNil(o.AmountCents) {
		return true
	}

	return false
}

// SetAmountCents gets a reference to the given int32 and assigns it to the AmountCents field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetAmountCents(v int32) {
	o.AmountCents = &v
}

// GetAmountCurrency returns the AmountCurrency field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetAmountCurrency() Currency {
	if o == nil || IsNil(o.AmountCurrency) {
		var ret Currency
		return ret
	}
	return *o.AmountCurrency
}

// GetAmountCurrencyOk returns a tuple with the AmountCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) GetAmountCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.AmountCurrency) {
		return nil, false
	}
	return o.AmountCurrency, true
}

// HasAmountCurrency returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) HasAmountCurrency() bool {
	if o != nil && !IsNil(o.AmountCurrency) {
		return true
	}

	return false
}

// SetAmountCurrency gets a reference to the given Currency and assigns it to the AmountCurrency field.
func (o *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) SetAmountCurrency(v Currency) {
	o.AmountCurrency = &v
}

func (o CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LagoTaxId) {
		toSerialize["lago_tax_id"] = o.LagoTaxId
	}
	if !IsNil(o.TaxName) {
		toSerialize["tax_name"] = o.TaxName
	}
	if !IsNil(o.TaxCode) {
		toSerialize["tax_code"] = o.TaxCode
	}
	if !IsNil(o.TaxRate) {
		toSerialize["tax_rate"] = o.TaxRate
	}
	if !IsNil(o.TaxDescription) {
		toSerialize["tax_description"] = o.TaxDescription
	}
	if !IsNil(o.BaseAmountCents) {
		toSerialize["base_amount_cents"] = o.BaseAmountCents
	}
	if !IsNil(o.AmountCents) {
		toSerialize["amount_cents"] = o.AmountCents
	}
	if !IsNil(o.AmountCurrency) {
		toSerialize["amount_currency"] = o.AmountCurrency
	}
	return toSerialize, nil
}

type NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner struct {
	value *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner
	isSet bool
}

func (v NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) Get() *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner {
	return v.value
}

func (v *NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) Set(val *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner(val *CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) *NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner {
	return &NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner{value: val, isSet: true}
}

func (v NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


