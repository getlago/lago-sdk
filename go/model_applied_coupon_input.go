/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AppliedCouponInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppliedCouponInput{}

// AppliedCouponInput struct for AppliedCouponInput
type AppliedCouponInput struct {
	AppliedCoupon AppliedCouponInputAppliedCoupon `json:"applied_coupon"`
}

type _AppliedCouponInput AppliedCouponInput

// NewAppliedCouponInput instantiates a new AppliedCouponInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppliedCouponInput(appliedCoupon AppliedCouponInputAppliedCoupon) *AppliedCouponInput {
	this := AppliedCouponInput{}
	this.AppliedCoupon = appliedCoupon
	return &this
}

// NewAppliedCouponInputWithDefaults instantiates a new AppliedCouponInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppliedCouponInputWithDefaults() *AppliedCouponInput {
	this := AppliedCouponInput{}
	return &this
}

// GetAppliedCoupon returns the AppliedCoupon field value
func (o *AppliedCouponInput) GetAppliedCoupon() AppliedCouponInputAppliedCoupon {
	if o == nil {
		var ret AppliedCouponInputAppliedCoupon
		return ret
	}

	return o.AppliedCoupon
}

// GetAppliedCouponOk returns a tuple with the AppliedCoupon field value
// and a boolean to check if the value has been set.
func (o *AppliedCouponInput) GetAppliedCouponOk() (*AppliedCouponInputAppliedCoupon, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppliedCoupon, true
}

// SetAppliedCoupon sets field value
func (o *AppliedCouponInput) SetAppliedCoupon(v AppliedCouponInputAppliedCoupon) {
	o.AppliedCoupon = v
}

func (o AppliedCouponInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppliedCouponInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["applied_coupon"] = o.AppliedCoupon
	return toSerialize, nil
}

func (o *AppliedCouponInput) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"applied_coupon",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppliedCouponInput := _AppliedCouponInput{}

	err = json.Unmarshal(bytes, &varAppliedCouponInput)

	if err != nil {
		return err
	}

	*o = AppliedCouponInput(varAppliedCouponInput)

	return err
}

type NullableAppliedCouponInput struct {
	value *AppliedCouponInput
	isSet bool
}

func (v NullableAppliedCouponInput) Get() *AppliedCouponInput {
	return v.value
}

func (v *NullableAppliedCouponInput) Set(val *AppliedCouponInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAppliedCouponInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAppliedCouponInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppliedCouponInput(val *AppliedCouponInput) *NullableAppliedCouponInput {
	return &NullableAppliedCouponInput{value: val, isSet: true}
}

func (v NullableAppliedCouponInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppliedCouponInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


