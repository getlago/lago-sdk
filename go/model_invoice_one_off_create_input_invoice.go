/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the InvoiceOneOffCreateInputInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceOneOffCreateInputInvoice{}

// InvoiceOneOffCreateInputInvoice struct for InvoiceOneOffCreateInputInvoice
type InvoiceOneOffCreateInputInvoice struct {
	// Unique identifier assigned to the customer in your application.
	ExternalCustomerId string `json:"external_customer_id"`
	Currency *Currency `json:"currency,omitempty"`
	Fees []InvoiceOneOffCreateInputInvoiceFeesInner `json:"fees"`
}

type _InvoiceOneOffCreateInputInvoice InvoiceOneOffCreateInputInvoice

// NewInvoiceOneOffCreateInputInvoice instantiates a new InvoiceOneOffCreateInputInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceOneOffCreateInputInvoice(externalCustomerId string, fees []InvoiceOneOffCreateInputInvoiceFeesInner) *InvoiceOneOffCreateInputInvoice {
	this := InvoiceOneOffCreateInputInvoice{}
	this.ExternalCustomerId = externalCustomerId
	this.Fees = fees
	return &this
}

// NewInvoiceOneOffCreateInputInvoiceWithDefaults instantiates a new InvoiceOneOffCreateInputInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceOneOffCreateInputInvoiceWithDefaults() *InvoiceOneOffCreateInputInvoice {
	this := InvoiceOneOffCreateInputInvoice{}
	return &this
}

// GetExternalCustomerId returns the ExternalCustomerId field value
func (o *InvoiceOneOffCreateInputInvoice) GetExternalCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalCustomerId
}

// GetExternalCustomerIdOk returns a tuple with the ExternalCustomerId field value
// and a boolean to check if the value has been set.
func (o *InvoiceOneOffCreateInputInvoice) GetExternalCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalCustomerId, true
}

// SetExternalCustomerId sets field value
func (o *InvoiceOneOffCreateInputInvoice) SetExternalCustomerId(v string) {
	o.ExternalCustomerId = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *InvoiceOneOffCreateInputInvoice) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceOneOffCreateInputInvoice) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *InvoiceOneOffCreateInputInvoice) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *InvoiceOneOffCreateInputInvoice) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetFees returns the Fees field value
func (o *InvoiceOneOffCreateInputInvoice) GetFees() []InvoiceOneOffCreateInputInvoiceFeesInner {
	if o == nil {
		var ret []InvoiceOneOffCreateInputInvoiceFeesInner
		return ret
	}

	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value
// and a boolean to check if the value has been set.
func (o *InvoiceOneOffCreateInputInvoice) GetFeesOk() ([]InvoiceOneOffCreateInputInvoiceFeesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fees, true
}

// SetFees sets field value
func (o *InvoiceOneOffCreateInputInvoice) SetFees(v []InvoiceOneOffCreateInputInvoiceFeesInner) {
	o.Fees = v
}

func (o InvoiceOneOffCreateInputInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceOneOffCreateInputInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["external_customer_id"] = o.ExternalCustomerId
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	toSerialize["fees"] = o.Fees
	return toSerialize, nil
}

func (o *InvoiceOneOffCreateInputInvoice) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_customer_id",
		"fees",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceOneOffCreateInputInvoice := _InvoiceOneOffCreateInputInvoice{}

	err = json.Unmarshal(bytes, &varInvoiceOneOffCreateInputInvoice)

	if err != nil {
		return err
	}

	*o = InvoiceOneOffCreateInputInvoice(varInvoiceOneOffCreateInputInvoice)

	return err
}

type NullableInvoiceOneOffCreateInputInvoice struct {
	value *InvoiceOneOffCreateInputInvoice
	isSet bool
}

func (v NullableInvoiceOneOffCreateInputInvoice) Get() *InvoiceOneOffCreateInputInvoice {
	return v.value
}

func (v *NullableInvoiceOneOffCreateInputInvoice) Set(val *InvoiceOneOffCreateInputInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceOneOffCreateInputInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceOneOffCreateInputInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceOneOffCreateInputInvoice(val *InvoiceOneOffCreateInputInvoice) *NullableInvoiceOneOffCreateInputInvoice {
	return &NullableInvoiceOneOffCreateInputInvoice{value: val, isSet: true}
}

func (v NullableInvoiceOneOffCreateInputInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceOneOffCreateInputInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


