/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"time"
)

// checks if the CreditNoteAppliedTaxObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNoteAppliedTaxObject{}

// CreditNoteAppliedTaxObject struct for CreditNoteAppliedTaxObject
type CreditNoteAppliedTaxObject struct {
	// Unique identifier of the credit note, created by Lago.
	LagoCreditNoteId *string `json:"lago_credit_note_id,omitempty"`
	BaseAmountCents *int32 `json:"base_amount_cents,omitempty"`
	// Unique identifier of the applied tax, created by Lago.
	LagoId *string `json:"lago_id,omitempty"`
	// Unique identifier of the tax, created by Lago.
	LagoTaxId *string `json:"lago_tax_id,omitempty"`
	// Name of the tax.
	TaxName *string `json:"tax_name,omitempty"`
	// Unique code used to identify the tax associated with the API request.
	TaxCode *string `json:"tax_code,omitempty"`
	// The percentage rate of the tax
	TaxRate *float32 `json:"tax_rate,omitempty"`
	// Internal description of the taxe
	TaxDescription *string `json:"tax_description,omitempty"`
	// Amount of the tax
	AmountCents *int32 `json:"amount_cents,omitempty"`
	AmountCurrency *Currency `json:"amount_currency,omitempty"`
	// The date and time when the applied tax was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the applied tax was initially created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewCreditNoteAppliedTaxObject instantiates a new CreditNoteAppliedTaxObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteAppliedTaxObject() *CreditNoteAppliedTaxObject {
	this := CreditNoteAppliedTaxObject{}
	return &this
}

// NewCreditNoteAppliedTaxObjectWithDefaults instantiates a new CreditNoteAppliedTaxObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteAppliedTaxObjectWithDefaults() *CreditNoteAppliedTaxObject {
	this := CreditNoteAppliedTaxObject{}
	return &this
}

// GetLagoCreditNoteId returns the LagoCreditNoteId field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetLagoCreditNoteId() string {
	if o == nil || IsNil(o.LagoCreditNoteId) {
		var ret string
		return ret
	}
	return *o.LagoCreditNoteId
}

// GetLagoCreditNoteIdOk returns a tuple with the LagoCreditNoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetLagoCreditNoteIdOk() (*string, bool) {
	if o == nil || IsNil(o.LagoCreditNoteId) {
		return nil, false
	}
	return o.LagoCreditNoteId, true
}

// HasLagoCreditNoteId returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasLagoCreditNoteId() bool {
	if o != nil && !IsNil(o.LagoCreditNoteId) {
		return true
	}

	return false
}

// SetLagoCreditNoteId gets a reference to the given string and assigns it to the LagoCreditNoteId field.
func (o *CreditNoteAppliedTaxObject) SetLagoCreditNoteId(v string) {
	o.LagoCreditNoteId = &v
}

// GetBaseAmountCents returns the BaseAmountCents field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetBaseAmountCents() int32 {
	if o == nil || IsNil(o.BaseAmountCents) {
		var ret int32
		return ret
	}
	return *o.BaseAmountCents
}

// GetBaseAmountCentsOk returns a tuple with the BaseAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetBaseAmountCentsOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAmountCents) {
		return nil, false
	}
	return o.BaseAmountCents, true
}

// HasBaseAmountCents returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasBaseAmountCents() bool {
	if o != nil && !IsNil(o.BaseAmountCents) {
		return true
	}

	return false
}

// SetBaseAmountCents gets a reference to the given int32 and assigns it to the BaseAmountCents field.
func (o *CreditNoteAppliedTaxObject) SetBaseAmountCents(v int32) {
	o.BaseAmountCents = &v
}

// GetLagoId returns the LagoId field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetLagoId() string {
	if o == nil || IsNil(o.LagoId) {
		var ret string
		return ret
	}
	return *o.LagoId
}

// GetLagoIdOk returns a tuple with the LagoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetLagoIdOk() (*string, bool) {
	if o == nil || IsNil(o.LagoId) {
		return nil, false
	}
	return o.LagoId, true
}

// HasLagoId returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasLagoId() bool {
	if o != nil && !IsNil(o.LagoId) {
		return true
	}

	return false
}

// SetLagoId gets a reference to the given string and assigns it to the LagoId field.
func (o *CreditNoteAppliedTaxObject) SetLagoId(v string) {
	o.LagoId = &v
}

// GetLagoTaxId returns the LagoTaxId field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetLagoTaxId() string {
	if o == nil || IsNil(o.LagoTaxId) {
		var ret string
		return ret
	}
	return *o.LagoTaxId
}

// GetLagoTaxIdOk returns a tuple with the LagoTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetLagoTaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.LagoTaxId) {
		return nil, false
	}
	return o.LagoTaxId, true
}

// HasLagoTaxId returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasLagoTaxId() bool {
	if o != nil && !IsNil(o.LagoTaxId) {
		return true
	}

	return false
}

// SetLagoTaxId gets a reference to the given string and assigns it to the LagoTaxId field.
func (o *CreditNoteAppliedTaxObject) SetLagoTaxId(v string) {
	o.LagoTaxId = &v
}

// GetTaxName returns the TaxName field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetTaxName() string {
	if o == nil || IsNil(o.TaxName) {
		var ret string
		return ret
	}
	return *o.TaxName
}

// GetTaxNameOk returns a tuple with the TaxName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetTaxNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaxName) {
		return nil, false
	}
	return o.TaxName, true
}

// HasTaxName returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasTaxName() bool {
	if o != nil && !IsNil(o.TaxName) {
		return true
	}

	return false
}

// SetTaxName gets a reference to the given string and assigns it to the TaxName field.
func (o *CreditNoteAppliedTaxObject) SetTaxName(v string) {
	o.TaxName = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *CreditNoteAppliedTaxObject) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetTaxRate() float32 {
	if o == nil || IsNil(o.TaxRate) {
		var ret float32
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetTaxRateOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasTaxRate() bool {
	if o != nil && !IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given float32 and assigns it to the TaxRate field.
func (o *CreditNoteAppliedTaxObject) SetTaxRate(v float32) {
	o.TaxRate = &v
}

// GetTaxDescription returns the TaxDescription field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetTaxDescription() string {
	if o == nil || IsNil(o.TaxDescription) {
		var ret string
		return ret
	}
	return *o.TaxDescription
}

// GetTaxDescriptionOk returns a tuple with the TaxDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetTaxDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TaxDescription) {
		return nil, false
	}
	return o.TaxDescription, true
}

// HasTaxDescription returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasTaxDescription() bool {
	if o != nil && !IsNil(o.TaxDescription) {
		return true
	}

	return false
}

// SetTaxDescription gets a reference to the given string and assigns it to the TaxDescription field.
func (o *CreditNoteAppliedTaxObject) SetTaxDescription(v string) {
	o.TaxDescription = &v
}

// GetAmountCents returns the AmountCents field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetAmountCents() int32 {
	if o == nil || IsNil(o.AmountCents) {
		var ret int32
		return ret
	}
	return *o.AmountCents
}

// GetAmountCentsOk returns a tuple with the AmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetAmountCentsOk() (*int32, bool) {
	if o == nil || IsNil(o.AmountCents) {
		return nil, false
	}
	return o.AmountCents, true
}

// HasAmountCents returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasAmountCents() bool {
	if o != nil && !IsNil(o.AmountCents) {
		return true
	}

	return false
}

// SetAmountCents gets a reference to the given int32 and assigns it to the AmountCents field.
func (o *CreditNoteAppliedTaxObject) SetAmountCents(v int32) {
	o.AmountCents = &v
}

// GetAmountCurrency returns the AmountCurrency field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetAmountCurrency() Currency {
	if o == nil || IsNil(o.AmountCurrency) {
		var ret Currency
		return ret
	}
	return *o.AmountCurrency
}

// GetAmountCurrencyOk returns a tuple with the AmountCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetAmountCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.AmountCurrency) {
		return nil, false
	}
	return o.AmountCurrency, true
}

// HasAmountCurrency returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasAmountCurrency() bool {
	if o != nil && !IsNil(o.AmountCurrency) {
		return true
	}

	return false
}

// SetAmountCurrency gets a reference to the given Currency and assigns it to the AmountCurrency field.
func (o *CreditNoteAppliedTaxObject) SetAmountCurrency(v Currency) {
	o.AmountCurrency = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CreditNoteAppliedTaxObject) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteAppliedTaxObject) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CreditNoteAppliedTaxObject) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CreditNoteAppliedTaxObject) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o CreditNoteAppliedTaxObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNoteAppliedTaxObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LagoCreditNoteId) {
		toSerialize["lago_credit_note_id"] = o.LagoCreditNoteId
	}
	if !IsNil(o.BaseAmountCents) {
		toSerialize["base_amount_cents"] = o.BaseAmountCents
	}
	if !IsNil(o.LagoId) {
		toSerialize["lago_id"] = o.LagoId
	}
	if !IsNil(o.LagoTaxId) {
		toSerialize["lago_tax_id"] = o.LagoTaxId
	}
	if !IsNil(o.TaxName) {
		toSerialize["tax_name"] = o.TaxName
	}
	if !IsNil(o.TaxCode) {
		toSerialize["tax_code"] = o.TaxCode
	}
	if !IsNil(o.TaxRate) {
		toSerialize["tax_rate"] = o.TaxRate
	}
	if !IsNil(o.TaxDescription) {
		toSerialize["tax_description"] = o.TaxDescription
	}
	if !IsNil(o.AmountCents) {
		toSerialize["amount_cents"] = o.AmountCents
	}
	if !IsNil(o.AmountCurrency) {
		toSerialize["amount_currency"] = o.AmountCurrency
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableCreditNoteAppliedTaxObject struct {
	value *CreditNoteAppliedTaxObject
	isSet bool
}

func (v NullableCreditNoteAppliedTaxObject) Get() *CreditNoteAppliedTaxObject {
	return v.value
}

func (v *NullableCreditNoteAppliedTaxObject) Set(val *CreditNoteAppliedTaxObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteAppliedTaxObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteAppliedTaxObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteAppliedTaxObject(val *CreditNoteAppliedTaxObject) *NullableCreditNoteAppliedTaxObject {
	return &NullableCreditNoteAppliedTaxObject{value: val, isSet: true}
}

func (v NullableCreditNoteAppliedTaxObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteAppliedTaxObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


