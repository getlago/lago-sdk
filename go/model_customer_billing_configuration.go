/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
)

// checks if the CustomerBillingConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerBillingConfiguration{}

// CustomerBillingConfiguration Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer.
type CustomerBillingConfiguration struct {
	// The grace period, expressed in days, for the invoice. This period refers to the additional time granted to the customer beyond the invoice due date to adjust usage and line items
	InvoiceGracePeriod *int32 `json:"invoice_grace_period,omitempty"`
	// The payment provider utilized to initiate payments for invoices issued by Lago. Accepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`.
	PaymentProvider *string `json:"payment_provider,omitempty"`
	// The customer ID within the payment provider's system. If this field is not provided, Lago has the option to create a new customer record within the payment provider's system on behalf of the customer
	ProviderCustomerId *string `json:"provider_customer_id,omitempty"`
	// Set this field to `true` if you want to create the customer in the payment provider synchronously with the customer creation process in Lago. This option is applicable only when the `provider_customer_id` is `null` and the customer is automatically created in the payment provider through Lago. By default, the value is set to `false`
	Sync *bool `json:"sync,omitempty"`
	// Set this field to `true` if you want to create a customer record in the payment provider's system. This option is applicable only when the `provider_customer_id` is null and the `sync_with_provider` field is set to `true`. By default, the value is set to `false`
	SyncWithProvider *bool `json:"sync_with_provider,omitempty"`
	// The document locale, specified in the ISO 639-1 format. This field represents the language or locale used for the documents issued by Lago
	DocumentLocale *string `json:"document_locale,omitempty"`
	// Specifies the available payment methods that can be used for this customer when `payment_provider` is set to `stripe`. The `provider_payment_methods` field is an array that allows multiple payment options to be defined. If this field is not explicitly set, all the payment methods are selected. For now, possible values are `card` and `sepa_debit`.
	ProviderPaymentMethods []string `json:"provider_payment_methods,omitempty"`
}

// NewCustomerBillingConfiguration instantiates a new CustomerBillingConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerBillingConfiguration() *CustomerBillingConfiguration {
	this := CustomerBillingConfiguration{}
	return &this
}

// NewCustomerBillingConfigurationWithDefaults instantiates a new CustomerBillingConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerBillingConfigurationWithDefaults() *CustomerBillingConfiguration {
	this := CustomerBillingConfiguration{}
	return &this
}

// GetInvoiceGracePeriod returns the InvoiceGracePeriod field value if set, zero value otherwise.
func (o *CustomerBillingConfiguration) GetInvoiceGracePeriod() int32 {
	if o == nil || IsNil(o.InvoiceGracePeriod) {
		var ret int32
		return ret
	}
	return *o.InvoiceGracePeriod
}

// GetInvoiceGracePeriodOk returns a tuple with the InvoiceGracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingConfiguration) GetInvoiceGracePeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceGracePeriod) {
		return nil, false
	}
	return o.InvoiceGracePeriod, true
}

// HasInvoiceGracePeriod returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasInvoiceGracePeriod() bool {
	if o != nil && !IsNil(o.InvoiceGracePeriod) {
		return true
	}

	return false
}

// SetInvoiceGracePeriod gets a reference to the given int32 and assigns it to the InvoiceGracePeriod field.
func (o *CustomerBillingConfiguration) SetInvoiceGracePeriod(v int32) {
	o.InvoiceGracePeriod = &v
}

// GetPaymentProvider returns the PaymentProvider field value if set, zero value otherwise.
func (o *CustomerBillingConfiguration) GetPaymentProvider() string {
	if o == nil || IsNil(o.PaymentProvider) {
		var ret string
		return ret
	}
	return *o.PaymentProvider
}

// GetPaymentProviderOk returns a tuple with the PaymentProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingConfiguration) GetPaymentProviderOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentProvider) {
		return nil, false
	}
	return o.PaymentProvider, true
}

// HasPaymentProvider returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasPaymentProvider() bool {
	if o != nil && !IsNil(o.PaymentProvider) {
		return true
	}

	return false
}

// SetPaymentProvider gets a reference to the given string and assigns it to the PaymentProvider field.
func (o *CustomerBillingConfiguration) SetPaymentProvider(v string) {
	o.PaymentProvider = &v
}

// GetProviderCustomerId returns the ProviderCustomerId field value if set, zero value otherwise.
func (o *CustomerBillingConfiguration) GetProviderCustomerId() string {
	if o == nil || IsNil(o.ProviderCustomerId) {
		var ret string
		return ret
	}
	return *o.ProviderCustomerId
}

// GetProviderCustomerIdOk returns a tuple with the ProviderCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingConfiguration) GetProviderCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderCustomerId) {
		return nil, false
	}
	return o.ProviderCustomerId, true
}

// HasProviderCustomerId returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasProviderCustomerId() bool {
	if o != nil && !IsNil(o.ProviderCustomerId) {
		return true
	}

	return false
}

// SetProviderCustomerId gets a reference to the given string and assigns it to the ProviderCustomerId field.
func (o *CustomerBillingConfiguration) SetProviderCustomerId(v string) {
	o.ProviderCustomerId = &v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *CustomerBillingConfiguration) GetSync() bool {
	if o == nil || IsNil(o.Sync) {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingConfiguration) GetSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.Sync) {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasSync() bool {
	if o != nil && !IsNil(o.Sync) {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *CustomerBillingConfiguration) SetSync(v bool) {
	o.Sync = &v
}

// GetSyncWithProvider returns the SyncWithProvider field value if set, zero value otherwise.
func (o *CustomerBillingConfiguration) GetSyncWithProvider() bool {
	if o == nil || IsNil(o.SyncWithProvider) {
		var ret bool
		return ret
	}
	return *o.SyncWithProvider
}

// GetSyncWithProviderOk returns a tuple with the SyncWithProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingConfiguration) GetSyncWithProviderOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncWithProvider) {
		return nil, false
	}
	return o.SyncWithProvider, true
}

// HasSyncWithProvider returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasSyncWithProvider() bool {
	if o != nil && !IsNil(o.SyncWithProvider) {
		return true
	}

	return false
}

// SetSyncWithProvider gets a reference to the given bool and assigns it to the SyncWithProvider field.
func (o *CustomerBillingConfiguration) SetSyncWithProvider(v bool) {
	o.SyncWithProvider = &v
}

// GetDocumentLocale returns the DocumentLocale field value if set, zero value otherwise.
func (o *CustomerBillingConfiguration) GetDocumentLocale() string {
	if o == nil || IsNil(o.DocumentLocale) {
		var ret string
		return ret
	}
	return *o.DocumentLocale
}

// GetDocumentLocaleOk returns a tuple with the DocumentLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingConfiguration) GetDocumentLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentLocale) {
		return nil, false
	}
	return o.DocumentLocale, true
}

// HasDocumentLocale returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasDocumentLocale() bool {
	if o != nil && !IsNil(o.DocumentLocale) {
		return true
	}

	return false
}

// SetDocumentLocale gets a reference to the given string and assigns it to the DocumentLocale field.
func (o *CustomerBillingConfiguration) SetDocumentLocale(v string) {
	o.DocumentLocale = &v
}

// GetProviderPaymentMethods returns the ProviderPaymentMethods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerBillingConfiguration) GetProviderPaymentMethods() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProviderPaymentMethods
}

// GetProviderPaymentMethodsOk returns a tuple with the ProviderPaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerBillingConfiguration) GetProviderPaymentMethodsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProviderPaymentMethods) {
		return nil, false
	}
	return o.ProviderPaymentMethods, true
}

// HasProviderPaymentMethods returns a boolean if a field has been set.
func (o *CustomerBillingConfiguration) HasProviderPaymentMethods() bool {
	if o != nil && IsNil(o.ProviderPaymentMethods) {
		return true
	}

	return false
}

// SetProviderPaymentMethods gets a reference to the given []string and assigns it to the ProviderPaymentMethods field.
func (o *CustomerBillingConfiguration) SetProviderPaymentMethods(v []string) {
	o.ProviderPaymentMethods = v
}

func (o CustomerBillingConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerBillingConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InvoiceGracePeriod) {
		toSerialize["invoice_grace_period"] = o.InvoiceGracePeriod
	}
	if !IsNil(o.PaymentProvider) {
		toSerialize["payment_provider"] = o.PaymentProvider
	}
	if !IsNil(o.ProviderCustomerId) {
		toSerialize["provider_customer_id"] = o.ProviderCustomerId
	}
	if !IsNil(o.Sync) {
		toSerialize["sync"] = o.Sync
	}
	if !IsNil(o.SyncWithProvider) {
		toSerialize["sync_with_provider"] = o.SyncWithProvider
	}
	if !IsNil(o.DocumentLocale) {
		toSerialize["document_locale"] = o.DocumentLocale
	}
	if o.ProviderPaymentMethods != nil {
		toSerialize["provider_payment_methods"] = o.ProviderPaymentMethods
	}
	return toSerialize, nil
}

type NullableCustomerBillingConfiguration struct {
	value *CustomerBillingConfiguration
	isSet bool
}

func (v NullableCustomerBillingConfiguration) Get() *CustomerBillingConfiguration {
	return v.value
}

func (v *NullableCustomerBillingConfiguration) Set(val *CustomerBillingConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerBillingConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerBillingConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerBillingConfiguration(val *CustomerBillingConfiguration) *NullableCustomerBillingConfiguration {
	return &NullableCustomerBillingConfiguration{value: val, isSet: true}
}

func (v NullableCustomerBillingConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerBillingConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


