/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the InvoiceOneOffCreateInputInvoiceFeesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceOneOffCreateInputInvoiceFeesInner{}

// InvoiceOneOffCreateInputInvoiceFeesInner struct for InvoiceOneOffCreateInputInvoiceFeesInner
type InvoiceOneOffCreateInputInvoiceFeesInner struct {
	// The code of the add-on used as invoice item.
	AddOnCode string `json:"add_on_code"`
	// Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name.
	InvoiceDisplayName *string `json:"invoice_display_name,omitempty"`
	// The amount of the fee per unit, expressed in cents. By default, the amount of the add-on is used.
	UnitAmountCents NullableInt32 `json:"unit_amount_cents,omitempty"`
	// The quantity of units associated with the fee. By default, only 1 unit is added to the invoice.
	Units NullableString `json:"units,omitempty"`
	// This is a description
	Description NullableString `json:"description,omitempty"`
	// List of unique code used to identify the taxes.
	TaxCodes []string `json:"tax_codes,omitempty"`
}

type _InvoiceOneOffCreateInputInvoiceFeesInner InvoiceOneOffCreateInputInvoiceFeesInner

// NewInvoiceOneOffCreateInputInvoiceFeesInner instantiates a new InvoiceOneOffCreateInputInvoiceFeesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceOneOffCreateInputInvoiceFeesInner(addOnCode string) *InvoiceOneOffCreateInputInvoiceFeesInner {
	this := InvoiceOneOffCreateInputInvoiceFeesInner{}
	this.AddOnCode = addOnCode
	return &this
}

// NewInvoiceOneOffCreateInputInvoiceFeesInnerWithDefaults instantiates a new InvoiceOneOffCreateInputInvoiceFeesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceOneOffCreateInputInvoiceFeesInnerWithDefaults() *InvoiceOneOffCreateInputInvoiceFeesInner {
	this := InvoiceOneOffCreateInputInvoiceFeesInner{}
	return &this
}

// GetAddOnCode returns the AddOnCode field value
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetAddOnCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddOnCode
}

// GetAddOnCodeOk returns a tuple with the AddOnCode field value
// and a boolean to check if the value has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetAddOnCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddOnCode, true
}

// SetAddOnCode sets field value
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetAddOnCode(v string) {
	o.AddOnCode = v
}

// GetInvoiceDisplayName returns the InvoiceDisplayName field value if set, zero value otherwise.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetInvoiceDisplayName() string {
	if o == nil || IsNil(o.InvoiceDisplayName) {
		var ret string
		return ret
	}
	return *o.InvoiceDisplayName
}

// GetInvoiceDisplayNameOk returns a tuple with the InvoiceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetInvoiceDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceDisplayName) {
		return nil, false
	}
	return o.InvoiceDisplayName, true
}

// HasInvoiceDisplayName returns a boolean if a field has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) HasInvoiceDisplayName() bool {
	if o != nil && !IsNil(o.InvoiceDisplayName) {
		return true
	}

	return false
}

// SetInvoiceDisplayName gets a reference to the given string and assigns it to the InvoiceDisplayName field.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetInvoiceDisplayName(v string) {
	o.InvoiceDisplayName = &v
}

// GetUnitAmountCents returns the UnitAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetUnitAmountCents() int32 {
	if o == nil || IsNil(o.UnitAmountCents.Get()) {
		var ret int32
		return ret
	}
	return *o.UnitAmountCents.Get()
}

// GetUnitAmountCentsOk returns a tuple with the UnitAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetUnitAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitAmountCents.Get(), o.UnitAmountCents.IsSet()
}

// HasUnitAmountCents returns a boolean if a field has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) HasUnitAmountCents() bool {
	if o != nil && o.UnitAmountCents.IsSet() {
		return true
	}

	return false
}

// SetUnitAmountCents gets a reference to the given NullableInt32 and assigns it to the UnitAmountCents field.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetUnitAmountCents(v int32) {
	o.UnitAmountCents.Set(&v)
}
// SetUnitAmountCentsNil sets the value for UnitAmountCents to be an explicit nil
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetUnitAmountCentsNil() {
	o.UnitAmountCents.Set(nil)
}

// UnsetUnitAmountCents ensures that no value is present for UnitAmountCents, not even an explicit nil
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) UnsetUnitAmountCents() {
	o.UnitAmountCents.Unset()
}

// GetUnits returns the Units field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetUnits() string {
	if o == nil || IsNil(o.Units.Get()) {
		var ret string
		return ret
	}
	return *o.Units.Get()
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Units.Get(), o.Units.IsSet()
}

// HasUnits returns a boolean if a field has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) HasUnits() bool {
	if o != nil && o.Units.IsSet() {
		return true
	}

	return false
}

// SetUnits gets a reference to the given NullableString and assigns it to the Units field.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetUnits(v string) {
	o.Units.Set(&v)
}
// SetUnitsNil sets the value for Units to be an explicit nil
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetUnitsNil() {
	o.Units.Set(nil)
}

// UnsetUnits ensures that no value is present for Units, not even an explicit nil
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) UnsetUnits() {
	o.Units.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) UnsetDescription() {
	o.Description.Unset()
}

// GetTaxCodes returns the TaxCodes field value if set, zero value otherwise.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetTaxCodes() []string {
	if o == nil || IsNil(o.TaxCodes) {
		var ret []string
		return ret
	}
	return o.TaxCodes
}

// GetTaxCodesOk returns a tuple with the TaxCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) GetTaxCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.TaxCodes) {
		return nil, false
	}
	return o.TaxCodes, true
}

// HasTaxCodes returns a boolean if a field has been set.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) HasTaxCodes() bool {
	if o != nil && !IsNil(o.TaxCodes) {
		return true
	}

	return false
}

// SetTaxCodes gets a reference to the given []string and assigns it to the TaxCodes field.
func (o *InvoiceOneOffCreateInputInvoiceFeesInner) SetTaxCodes(v []string) {
	o.TaxCodes = v
}

func (o InvoiceOneOffCreateInputInvoiceFeesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceOneOffCreateInputInvoiceFeesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["add_on_code"] = o.AddOnCode
	if !IsNil(o.InvoiceDisplayName) {
		toSerialize["invoice_display_name"] = o.InvoiceDisplayName
	}
	if o.UnitAmountCents.IsSet() {
		toSerialize["unit_amount_cents"] = o.UnitAmountCents.Get()
	}
	if o.Units.IsSet() {
		toSerialize["units"] = o.Units.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.TaxCodes) {
		toSerialize["tax_codes"] = o.TaxCodes
	}
	return toSerialize, nil
}

func (o *InvoiceOneOffCreateInputInvoiceFeesInner) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"add_on_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceOneOffCreateInputInvoiceFeesInner := _InvoiceOneOffCreateInputInvoiceFeesInner{}

	err = json.Unmarshal(bytes, &varInvoiceOneOffCreateInputInvoiceFeesInner)

	if err != nil {
		return err
	}

	*o = InvoiceOneOffCreateInputInvoiceFeesInner(varInvoiceOneOffCreateInputInvoiceFeesInner)

	return err
}

type NullableInvoiceOneOffCreateInputInvoiceFeesInner struct {
	value *InvoiceOneOffCreateInputInvoiceFeesInner
	isSet bool
}

func (v NullableInvoiceOneOffCreateInputInvoiceFeesInner) Get() *InvoiceOneOffCreateInputInvoiceFeesInner {
	return v.value
}

func (v *NullableInvoiceOneOffCreateInputInvoiceFeesInner) Set(val *InvoiceOneOffCreateInputInvoiceFeesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceOneOffCreateInputInvoiceFeesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceOneOffCreateInputInvoiceFeesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceOneOffCreateInputInvoiceFeesInner(val *InvoiceOneOffCreateInputInvoiceFeesInner) *NullableInvoiceOneOffCreateInputInvoiceFeesInner {
	return &NullableInvoiceOneOffCreateInputInvoiceFeesInner{value: val, isSet: true}
}

func (v NullableInvoiceOneOffCreateInputInvoiceFeesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceOneOffCreateInputInvoiceFeesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


