/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CustomerObjectExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerObjectExtended{}

// CustomerObjectExtended struct for CustomerObjectExtended
type CustomerObjectExtended struct {
	// Unique identifier assigned to the customer within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the customer's record within the Lago system
	LagoId string `json:"lago_id"`
	// The unique identifier assigned to the customer within the organization's scope. This identifier is used to track and reference the customer's order of creation within the organization's system. It ensures that each customer has a distinct `sequential_id`` associated with them, allowing for easy identification and sorting based on the order of creation
	SequentialId int32 `json:"sequential_id"`
	// A concise and unique identifier for the customer, formed by combining the Organization's `name`, `id`, and customer's `sequential_id`
	Slug string `json:"slug"`
	// The customer external unique identifier (provided by your own application)
	ExternalId string `json:"external_id"`
	// The first line of the billing address
	AddressLine1 NullableString `json:"address_line1,omitempty"`
	// The second line of the billing address
	AddressLine2 NullableString `json:"address_line2,omitempty"`
	ApplicableTimezone Timezone `json:"applicable_timezone"`
	// The city of the customer's billing address
	City NullableString `json:"city,omitempty"`
	Country *Country `json:"country,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// The email of the customer
	Email NullableString `json:"email,omitempty"`
	// The legal company name of the customer
	LegalName NullableString `json:"legal_name,omitempty"`
	// The legal company number of the customer
	LegalNumber NullableString `json:"legal_number,omitempty"`
	// The logo URL of the customer
	LogoUrl NullableString `json:"logo_url,omitempty"`
	// The full name of the customer
	Name NullableString `json:"name,omitempty"`
	// The phone number of the customer
	Phone NullableString `json:"phone,omitempty"`
	// The state of the customer's billing address
	State NullableString `json:"state,omitempty"`
	// The tax identification number of the customer
	TaxIdentificationNumber NullableString `json:"tax_identification_number,omitempty"`
	Timezone *Timezone `json:"timezone,omitempty"`
	// The custom website URL of the customer
	Url NullableString `json:"url,omitempty"`
	// The zipcode of the customer's billing address
	Zipcode NullableString `json:"zipcode,omitempty"`
	// The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized.
	NetPaymentTerm NullableInt32 `json:"net_payment_term,omitempty"`
	// The date of the customer creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the customer object was created
	CreatedAt time.Time `json:"created_at"`
	// The date of the customer update, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The update_date provides a standardized and internationally recognized timestamp for when the customer object was updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	BillingConfiguration *CustomerBillingConfiguration `json:"billing_configuration,omitempty"`
	Metadata []CustomerMetadata `json:"metadata,omitempty"`
	// List of customer taxes
	Taxes []TaxObject `json:"taxes,omitempty"`
}

type _CustomerObjectExtended CustomerObjectExtended

// NewCustomerObjectExtended instantiates a new CustomerObjectExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerObjectExtended(lagoId string, sequentialId int32, slug string, externalId string, applicableTimezone Timezone, createdAt time.Time) *CustomerObjectExtended {
	this := CustomerObjectExtended{}
	this.LagoId = lagoId
	this.SequentialId = sequentialId
	this.Slug = slug
	this.ExternalId = externalId
	this.ApplicableTimezone = applicableTimezone
	this.CreatedAt = createdAt
	return &this
}

// NewCustomerObjectExtendedWithDefaults instantiates a new CustomerObjectExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerObjectExtendedWithDefaults() *CustomerObjectExtended {
	this := CustomerObjectExtended{}
	return &this
}

// GetLagoId returns the LagoId field value
func (o *CustomerObjectExtended) GetLagoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LagoId
}

// GetLagoIdOk returns a tuple with the LagoId field value
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetLagoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LagoId, true
}

// SetLagoId sets field value
func (o *CustomerObjectExtended) SetLagoId(v string) {
	o.LagoId = v
}

// GetSequentialId returns the SequentialId field value
func (o *CustomerObjectExtended) GetSequentialId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SequentialId
}

// GetSequentialIdOk returns a tuple with the SequentialId field value
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetSequentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SequentialId, true
}

// SetSequentialId sets field value
func (o *CustomerObjectExtended) SetSequentialId(v int32) {
	o.SequentialId = v
}

// GetSlug returns the Slug field value
func (o *CustomerObjectExtended) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *CustomerObjectExtended) SetSlug(v string) {
	o.Slug = v
}

// GetExternalId returns the ExternalId field value
func (o *CustomerObjectExtended) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *CustomerObjectExtended) SetExternalId(v string) {
	o.ExternalId = v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *CustomerObjectExtended) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *CustomerObjectExtended) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *CustomerObjectExtended) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *CustomerObjectExtended) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *CustomerObjectExtended) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *CustomerObjectExtended) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetApplicableTimezone returns the ApplicableTimezone field value
func (o *CustomerObjectExtended) GetApplicableTimezone() Timezone {
	if o == nil {
		var ret Timezone
		return ret
	}

	return o.ApplicableTimezone
}

// GetApplicableTimezoneOk returns a tuple with the ApplicableTimezone field value
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetApplicableTimezoneOk() (*Timezone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicableTimezone, true
}

// SetApplicableTimezone sets field value
func (o *CustomerObjectExtended) SetApplicableTimezone(v Timezone) {
	o.ApplicableTimezone = v
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *CustomerObjectExtended) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *CustomerObjectExtended) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *CustomerObjectExtended) UnsetCity() {
	o.City.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetCountry() Country {
	if o == nil || IsNil(o.Country) {
		var ret Country
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetCountryOk() (*Country, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given Country and assigns it to the Country field.
func (o *CustomerObjectExtended) SetCountry(v Country) {
	o.Country = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *CustomerObjectExtended) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *CustomerObjectExtended) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *CustomerObjectExtended) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *CustomerObjectExtended) UnsetEmail() {
	o.Email.Unset()
}

// GetLegalName returns the LegalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetLegalName() string {
	if o == nil || IsNil(o.LegalName.Get()) {
		var ret string
		return ret
	}
	return *o.LegalName.Get()
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetLegalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LegalName.Get(), o.LegalName.IsSet()
}

// HasLegalName returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasLegalName() bool {
	if o != nil && o.LegalName.IsSet() {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given NullableString and assigns it to the LegalName field.
func (o *CustomerObjectExtended) SetLegalName(v string) {
	o.LegalName.Set(&v)
}
// SetLegalNameNil sets the value for LegalName to be an explicit nil
func (o *CustomerObjectExtended) SetLegalNameNil() {
	o.LegalName.Set(nil)
}

// UnsetLegalName ensures that no value is present for LegalName, not even an explicit nil
func (o *CustomerObjectExtended) UnsetLegalName() {
	o.LegalName.Unset()
}

// GetLegalNumber returns the LegalNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetLegalNumber() string {
	if o == nil || IsNil(o.LegalNumber.Get()) {
		var ret string
		return ret
	}
	return *o.LegalNumber.Get()
}

// GetLegalNumberOk returns a tuple with the LegalNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetLegalNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LegalNumber.Get(), o.LegalNumber.IsSet()
}

// HasLegalNumber returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasLegalNumber() bool {
	if o != nil && o.LegalNumber.IsSet() {
		return true
	}

	return false
}

// SetLegalNumber gets a reference to the given NullableString and assigns it to the LegalNumber field.
func (o *CustomerObjectExtended) SetLegalNumber(v string) {
	o.LegalNumber.Set(&v)
}
// SetLegalNumberNil sets the value for LegalNumber to be an explicit nil
func (o *CustomerObjectExtended) SetLegalNumberNil() {
	o.LegalNumber.Set(nil)
}

// UnsetLegalNumber ensures that no value is present for LegalNumber, not even an explicit nil
func (o *CustomerObjectExtended) UnsetLegalNumber() {
	o.LegalNumber.Unset()
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LogoUrl.Get()
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetLogoUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogoUrl.Get(), o.LogoUrl.IsSet()
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasLogoUrl() bool {
	if o != nil && o.LogoUrl.IsSet() {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given NullableString and assigns it to the LogoUrl field.
func (o *CustomerObjectExtended) SetLogoUrl(v string) {
	o.LogoUrl.Set(&v)
}
// SetLogoUrlNil sets the value for LogoUrl to be an explicit nil
func (o *CustomerObjectExtended) SetLogoUrlNil() {
	o.LogoUrl.Set(nil)
}

// UnsetLogoUrl ensures that no value is present for LogoUrl, not even an explicit nil
func (o *CustomerObjectExtended) UnsetLogoUrl() {
	o.LogoUrl.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CustomerObjectExtended) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CustomerObjectExtended) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CustomerObjectExtended) UnsetName() {
	o.Name.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *CustomerObjectExtended) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *CustomerObjectExtended) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *CustomerObjectExtended) UnsetPhone() {
	o.Phone.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *CustomerObjectExtended) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *CustomerObjectExtended) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *CustomerObjectExtended) UnsetState() {
	o.State.Unset()
}

// GetTaxIdentificationNumber returns the TaxIdentificationNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetTaxIdentificationNumber() string {
	if o == nil || IsNil(o.TaxIdentificationNumber.Get()) {
		var ret string
		return ret
	}
	return *o.TaxIdentificationNumber.Get()
}

// GetTaxIdentificationNumberOk returns a tuple with the TaxIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetTaxIdentificationNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxIdentificationNumber.Get(), o.TaxIdentificationNumber.IsSet()
}

// HasTaxIdentificationNumber returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasTaxIdentificationNumber() bool {
	if o != nil && o.TaxIdentificationNumber.IsSet() {
		return true
	}

	return false
}

// SetTaxIdentificationNumber gets a reference to the given NullableString and assigns it to the TaxIdentificationNumber field.
func (o *CustomerObjectExtended) SetTaxIdentificationNumber(v string) {
	o.TaxIdentificationNumber.Set(&v)
}
// SetTaxIdentificationNumberNil sets the value for TaxIdentificationNumber to be an explicit nil
func (o *CustomerObjectExtended) SetTaxIdentificationNumberNil() {
	o.TaxIdentificationNumber.Set(nil)
}

// UnsetTaxIdentificationNumber ensures that no value is present for TaxIdentificationNumber, not even an explicit nil
func (o *CustomerObjectExtended) UnsetTaxIdentificationNumber() {
	o.TaxIdentificationNumber.Unset()
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetTimezone() Timezone {
	if o == nil || IsNil(o.Timezone) {
		var ret Timezone
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetTimezoneOk() (*Timezone, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given Timezone and assigns it to the Timezone field.
func (o *CustomerObjectExtended) SetTimezone(v Timezone) {
	o.Timezone = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *CustomerObjectExtended) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *CustomerObjectExtended) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *CustomerObjectExtended) UnsetUrl() {
	o.Url.Unset()
}

// GetZipcode returns the Zipcode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetZipcode() string {
	if o == nil || IsNil(o.Zipcode.Get()) {
		var ret string
		return ret
	}
	return *o.Zipcode.Get()
}

// GetZipcodeOk returns a tuple with the Zipcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetZipcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zipcode.Get(), o.Zipcode.IsSet()
}

// HasZipcode returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasZipcode() bool {
	if o != nil && o.Zipcode.IsSet() {
		return true
	}

	return false
}

// SetZipcode gets a reference to the given NullableString and assigns it to the Zipcode field.
func (o *CustomerObjectExtended) SetZipcode(v string) {
	o.Zipcode.Set(&v)
}
// SetZipcodeNil sets the value for Zipcode to be an explicit nil
func (o *CustomerObjectExtended) SetZipcodeNil() {
	o.Zipcode.Set(nil)
}

// UnsetZipcode ensures that no value is present for Zipcode, not even an explicit nil
func (o *CustomerObjectExtended) UnsetZipcode() {
	o.Zipcode.Unset()
}

// GetNetPaymentTerm returns the NetPaymentTerm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerObjectExtended) GetNetPaymentTerm() int32 {
	if o == nil || IsNil(o.NetPaymentTerm.Get()) {
		var ret int32
		return ret
	}
	return *o.NetPaymentTerm.Get()
}

// GetNetPaymentTermOk returns a tuple with the NetPaymentTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerObjectExtended) GetNetPaymentTermOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetPaymentTerm.Get(), o.NetPaymentTerm.IsSet()
}

// HasNetPaymentTerm returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasNetPaymentTerm() bool {
	if o != nil && o.NetPaymentTerm.IsSet() {
		return true
	}

	return false
}

// SetNetPaymentTerm gets a reference to the given NullableInt32 and assigns it to the NetPaymentTerm field.
func (o *CustomerObjectExtended) SetNetPaymentTerm(v int32) {
	o.NetPaymentTerm.Set(&v)
}
// SetNetPaymentTermNil sets the value for NetPaymentTerm to be an explicit nil
func (o *CustomerObjectExtended) SetNetPaymentTermNil() {
	o.NetPaymentTerm.Set(nil)
}

// UnsetNetPaymentTerm ensures that no value is present for NetPaymentTerm, not even an explicit nil
func (o *CustomerObjectExtended) UnsetNetPaymentTerm() {
	o.NetPaymentTerm.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *CustomerObjectExtended) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CustomerObjectExtended) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CustomerObjectExtended) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetBillingConfiguration returns the BillingConfiguration field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetBillingConfiguration() CustomerBillingConfiguration {
	if o == nil || IsNil(o.BillingConfiguration) {
		var ret CustomerBillingConfiguration
		return ret
	}
	return *o.BillingConfiguration
}

// GetBillingConfigurationOk returns a tuple with the BillingConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetBillingConfigurationOk() (*CustomerBillingConfiguration, bool) {
	if o == nil || IsNil(o.BillingConfiguration) {
		return nil, false
	}
	return o.BillingConfiguration, true
}

// HasBillingConfiguration returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasBillingConfiguration() bool {
	if o != nil && !IsNil(o.BillingConfiguration) {
		return true
	}

	return false
}

// SetBillingConfiguration gets a reference to the given CustomerBillingConfiguration and assigns it to the BillingConfiguration field.
func (o *CustomerObjectExtended) SetBillingConfiguration(v CustomerBillingConfiguration) {
	o.BillingConfiguration = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetMetadata() []CustomerMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret []CustomerMetadata
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetMetadataOk() ([]CustomerMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []CustomerMetadata and assigns it to the Metadata field.
func (o *CustomerObjectExtended) SetMetadata(v []CustomerMetadata) {
	o.Metadata = v
}

// GetTaxes returns the Taxes field value if set, zero value otherwise.
func (o *CustomerObjectExtended) GetTaxes() []TaxObject {
	if o == nil || IsNil(o.Taxes) {
		var ret []TaxObject
		return ret
	}
	return o.Taxes
}

// GetTaxesOk returns a tuple with the Taxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerObjectExtended) GetTaxesOk() ([]TaxObject, bool) {
	if o == nil || IsNil(o.Taxes) {
		return nil, false
	}
	return o.Taxes, true
}

// HasTaxes returns a boolean if a field has been set.
func (o *CustomerObjectExtended) HasTaxes() bool {
	if o != nil && !IsNil(o.Taxes) {
		return true
	}

	return false
}

// SetTaxes gets a reference to the given []TaxObject and assigns it to the Taxes field.
func (o *CustomerObjectExtended) SetTaxes(v []TaxObject) {
	o.Taxes = v
}

func (o CustomerObjectExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerObjectExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lago_id"] = o.LagoId
	toSerialize["sequential_id"] = o.SequentialId
	toSerialize["slug"] = o.Slug
	toSerialize["external_id"] = o.ExternalId
	if o.AddressLine1.IsSet() {
		toSerialize["address_line1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["address_line2"] = o.AddressLine2.Get()
	}
	toSerialize["applicable_timezone"] = o.ApplicableTimezone
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.LegalName.IsSet() {
		toSerialize["legal_name"] = o.LegalName.Get()
	}
	if o.LegalNumber.IsSet() {
		toSerialize["legal_number"] = o.LegalNumber.Get()
	}
	if o.LogoUrl.IsSet() {
		toSerialize["logo_url"] = o.LogoUrl.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.TaxIdentificationNumber.IsSet() {
		toSerialize["tax_identification_number"] = o.TaxIdentificationNumber.Get()
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Zipcode.IsSet() {
		toSerialize["zipcode"] = o.Zipcode.Get()
	}
	if o.NetPaymentTerm.IsSet() {
		toSerialize["net_payment_term"] = o.NetPaymentTerm.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.BillingConfiguration) {
		toSerialize["billing_configuration"] = o.BillingConfiguration
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Taxes) {
		toSerialize["taxes"] = o.Taxes
	}
	return toSerialize, nil
}

func (o *CustomerObjectExtended) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lago_id",
		"sequential_id",
		"slug",
		"external_id",
		"applicable_timezone",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerObjectExtended := _CustomerObjectExtended{}

	err = json.Unmarshal(bytes, &varCustomerObjectExtended)

	if err != nil {
		return err
	}

	*o = CustomerObjectExtended(varCustomerObjectExtended)

	return err
}

type NullableCustomerObjectExtended struct {
	value *CustomerObjectExtended
	isSet bool
}

func (v NullableCustomerObjectExtended) Get() *CustomerObjectExtended {
	return v.value
}

func (v *NullableCustomerObjectExtended) Set(val *CustomerObjectExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerObjectExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerObjectExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerObjectExtended(val *CustomerObjectExtended) *NullableCustomerObjectExtended {
	return &NullableCustomerObjectExtended{value: val, isSet: true}
}

func (v NullableCustomerObjectExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerObjectExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


