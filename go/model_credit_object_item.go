/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreditObjectItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditObjectItem{}

// CreditObjectItem The item attached to the credit.
type CreditObjectItem struct {
	// Unique identifier assigned to the credit item within the Lago application.
	LagoItemId string `json:"lago_item_id"`
	// The type of credit applied. Possible values are `coupon` or `credit_note`.
	Type string `json:"type"`
	// The code of the credit applied. It can be the code of the coupon attached to the credit or the credit note's number.
	Code string `json:"code"`
	// The name of the credit applied. It can be the name of the coupon attached to the credit or the initial invoice's number linked to the credit note.
	Name string `json:"name"`
}

type _CreditObjectItem CreditObjectItem

// NewCreditObjectItem instantiates a new CreditObjectItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditObjectItem(lagoItemId string, type_ string, code string, name string) *CreditObjectItem {
	this := CreditObjectItem{}
	this.LagoItemId = lagoItemId
	this.Type = type_
	this.Code = code
	this.Name = name
	return &this
}

// NewCreditObjectItemWithDefaults instantiates a new CreditObjectItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditObjectItemWithDefaults() *CreditObjectItem {
	this := CreditObjectItem{}
	return &this
}

// GetLagoItemId returns the LagoItemId field value
func (o *CreditObjectItem) GetLagoItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LagoItemId
}

// GetLagoItemIdOk returns a tuple with the LagoItemId field value
// and a boolean to check if the value has been set.
func (o *CreditObjectItem) GetLagoItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LagoItemId, true
}

// SetLagoItemId sets field value
func (o *CreditObjectItem) SetLagoItemId(v string) {
	o.LagoItemId = v
}

// GetType returns the Type field value
func (o *CreditObjectItem) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreditObjectItem) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreditObjectItem) SetType(v string) {
	o.Type = v
}

// GetCode returns the Code field value
func (o *CreditObjectItem) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *CreditObjectItem) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *CreditObjectItem) SetCode(v string) {
	o.Code = v
}

// GetName returns the Name field value
func (o *CreditObjectItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreditObjectItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreditObjectItem) SetName(v string) {
	o.Name = v
}

func (o CreditObjectItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditObjectItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lago_item_id"] = o.LagoItemId
	toSerialize["type"] = o.Type
	toSerialize["code"] = o.Code
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *CreditObjectItem) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lago_item_id",
		"type",
		"code",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditObjectItem := _CreditObjectItem{}

	err = json.Unmarshal(bytes, &varCreditObjectItem)

	if err != nil {
		return err
	}

	*o = CreditObjectItem(varCreditObjectItem)

	return err
}

type NullableCreditObjectItem struct {
	value *CreditObjectItem
	isSet bool
}

func (v NullableCreditObjectItem) Get() *CreditObjectItem {
	return v.value
}

func (v *NullableCreditObjectItem) Set(val *CreditObjectItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditObjectItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditObjectItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditObjectItem(val *CreditObjectItem) *NullableCreditObjectItem {
	return &NullableCreditObjectItem{value: val, isSet: true}
}

func (v NullableCreditObjectItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditObjectItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


