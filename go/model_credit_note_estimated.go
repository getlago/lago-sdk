/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreditNoteEstimated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNoteEstimated{}

// CreditNoteEstimated struct for CreditNoteEstimated
type CreditNoteEstimated struct {
	EstimatedCreditNote CreditNoteEstimatedEstimatedCreditNote `json:"estimated_credit_note"`
}

type _CreditNoteEstimated CreditNoteEstimated

// NewCreditNoteEstimated instantiates a new CreditNoteEstimated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteEstimated(estimatedCreditNote CreditNoteEstimatedEstimatedCreditNote) *CreditNoteEstimated {
	this := CreditNoteEstimated{}
	this.EstimatedCreditNote = estimatedCreditNote
	return &this
}

// NewCreditNoteEstimatedWithDefaults instantiates a new CreditNoteEstimated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteEstimatedWithDefaults() *CreditNoteEstimated {
	this := CreditNoteEstimated{}
	return &this
}

// GetEstimatedCreditNote returns the EstimatedCreditNote field value
func (o *CreditNoteEstimated) GetEstimatedCreditNote() CreditNoteEstimatedEstimatedCreditNote {
	if o == nil {
		var ret CreditNoteEstimatedEstimatedCreditNote
		return ret
	}

	return o.EstimatedCreditNote
}

// GetEstimatedCreditNoteOk returns a tuple with the EstimatedCreditNote field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimated) GetEstimatedCreditNoteOk() (*CreditNoteEstimatedEstimatedCreditNote, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EstimatedCreditNote, true
}

// SetEstimatedCreditNote sets field value
func (o *CreditNoteEstimated) SetEstimatedCreditNote(v CreditNoteEstimatedEstimatedCreditNote) {
	o.EstimatedCreditNote = v
}

func (o CreditNoteEstimated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNoteEstimated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["estimated_credit_note"] = o.EstimatedCreditNote
	return toSerialize, nil
}

func (o *CreditNoteEstimated) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"estimated_credit_note",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditNoteEstimated := _CreditNoteEstimated{}

	err = json.Unmarshal(bytes, &varCreditNoteEstimated)

	if err != nil {
		return err
	}

	*o = CreditNoteEstimated(varCreditNoteEstimated)

	return err
}

type NullableCreditNoteEstimated struct {
	value *CreditNoteEstimated
	isSet bool
}

func (v NullableCreditNoteEstimated) Get() *CreditNoteEstimated {
	return v.value
}

func (v *NullableCreditNoteEstimated) Set(val *CreditNoteEstimated) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteEstimated) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteEstimated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteEstimated(val *CreditNoteEstimated) *NullableCreditNoteEstimated {
	return &NullableCreditNoteEstimated{value: val, isSet: true}
}

func (v NullableCreditNoteEstimated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteEstimated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


