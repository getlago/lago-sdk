/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
)

// checks if the OrganizationUpdateInputOrganization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationUpdateInputOrganization{}

// OrganizationUpdateInputOrganization struct for OrganizationUpdateInputOrganization
type OrganizationUpdateInputOrganization struct {
	// The URL of your newest updated webhook endpoint. This URL allows your organization to receive important messages, notifications, or data from the Lago system. By configuring your webhook endpoint to this URL, you can ensure that your organization stays informed and receives relevant information in a timely manner.
	WebhookUrl NullableString `json:"webhook_url,omitempty"`
	Country *Country `json:"country,omitempty"`
	DefaultCurrency *Currency `json:"default_currency,omitempty"`
	// The first line of your organization’s billing address.
	AddressLine1 NullableString `json:"address_line1,omitempty"`
	// The second line of your organization’s billing address.
	AddressLine2 NullableString `json:"address_line2,omitempty"`
	// The state of your organization’s billing address.
	State NullableString `json:"state,omitempty"`
	// The zipcode of your organization’s billing address.
	Zipcode NullableString `json:"zipcode,omitempty"`
	// The email address of your organization used to bill your customers.
	Email NullableString `json:"email,omitempty"`
	// The city of your organization’s billing address.
	City NullableString `json:"city,omitempty"`
	// The legal name of your organization.
	LegalName NullableString `json:"legal_name,omitempty"`
	// The legal number of your organization.
	LegalNumber NullableString `json:"legal_number,omitempty"`
	// The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized.
	NetPaymentTerm *int32 `json:"net_payment_term,omitempty"`
	// The tax identification number of your organization.
	TaxIdentificationNumber NullableString `json:"tax_identification_number,omitempty"`
	Timezone *Timezone `json:"timezone,omitempty"`
	// Represents the email settings of the organization. It allows you to define which documents are sent by email. The field value determines the types of documents that trigger email notifications. Possible values for are `invoice.finalized` and `credit_note.created`. By configuring this field, you can specify whether invoices, credit notes, or both should be sent to recipients via email.
	EmailSettings []string `json:"email_settings,omitempty"`
	BillingConfiguration *OrganizationBillingConfiguration `json:"billing_configuration,omitempty"`
}

// NewOrganizationUpdateInputOrganization instantiates a new OrganizationUpdateInputOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUpdateInputOrganization() *OrganizationUpdateInputOrganization {
	this := OrganizationUpdateInputOrganization{}
	return &this
}

// NewOrganizationUpdateInputOrganizationWithDefaults instantiates a new OrganizationUpdateInputOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUpdateInputOrganizationWithDefaults() *OrganizationUpdateInputOrganization {
	this := OrganizationUpdateInputOrganization{}
	return &this
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookUrl.Get()
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookUrl.Get(), o.WebhookUrl.IsSet()
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given NullableString and assigns it to the WebhookUrl field.
func (o *OrganizationUpdateInputOrganization) SetWebhookUrl(v string) {
	o.WebhookUrl.Set(&v)
}
// SetWebhookUrlNil sets the value for WebhookUrl to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetWebhookUrlNil() {
	o.WebhookUrl.Set(nil)
}

// UnsetWebhookUrl ensures that no value is present for WebhookUrl, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetWebhookUrl() {
	o.WebhookUrl.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *OrganizationUpdateInputOrganization) GetCountry() Country {
	if o == nil || IsNil(o.Country) {
		var ret Country
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInputOrganization) GetCountryOk() (*Country, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given Country and assigns it to the Country field.
func (o *OrganizationUpdateInputOrganization) SetCountry(v Country) {
	o.Country = &v
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise.
func (o *OrganizationUpdateInputOrganization) GetDefaultCurrency() Currency {
	if o == nil || IsNil(o.DefaultCurrency) {
		var ret Currency
		return ret
	}
	return *o.DefaultCurrency
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInputOrganization) GetDefaultCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.DefaultCurrency) {
		return nil, false
	}
	return o.DefaultCurrency, true
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasDefaultCurrency() bool {
	if o != nil && !IsNil(o.DefaultCurrency) {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given Currency and assigns it to the DefaultCurrency field.
func (o *OrganizationUpdateInputOrganization) SetDefaultCurrency(v Currency) {
	o.DefaultCurrency = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *OrganizationUpdateInputOrganization) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *OrganizationUpdateInputOrganization) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *OrganizationUpdateInputOrganization) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetState() {
	o.State.Unset()
}

// GetZipcode returns the Zipcode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetZipcode() string {
	if o == nil || IsNil(o.Zipcode.Get()) {
		var ret string
		return ret
	}
	return *o.Zipcode.Get()
}

// GetZipcodeOk returns a tuple with the Zipcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetZipcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zipcode.Get(), o.Zipcode.IsSet()
}

// HasZipcode returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasZipcode() bool {
	if o != nil && o.Zipcode.IsSet() {
		return true
	}

	return false
}

// SetZipcode gets a reference to the given NullableString and assigns it to the Zipcode field.
func (o *OrganizationUpdateInputOrganization) SetZipcode(v string) {
	o.Zipcode.Set(&v)
}
// SetZipcodeNil sets the value for Zipcode to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetZipcodeNil() {
	o.Zipcode.Set(nil)
}

// UnsetZipcode ensures that no value is present for Zipcode, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetZipcode() {
	o.Zipcode.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *OrganizationUpdateInputOrganization) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetEmail() {
	o.Email.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *OrganizationUpdateInputOrganization) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetCity() {
	o.City.Unset()
}

// GetLegalName returns the LegalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetLegalName() string {
	if o == nil || IsNil(o.LegalName.Get()) {
		var ret string
		return ret
	}
	return *o.LegalName.Get()
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetLegalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LegalName.Get(), o.LegalName.IsSet()
}

// HasLegalName returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasLegalName() bool {
	if o != nil && o.LegalName.IsSet() {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given NullableString and assigns it to the LegalName field.
func (o *OrganizationUpdateInputOrganization) SetLegalName(v string) {
	o.LegalName.Set(&v)
}
// SetLegalNameNil sets the value for LegalName to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetLegalNameNil() {
	o.LegalName.Set(nil)
}

// UnsetLegalName ensures that no value is present for LegalName, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetLegalName() {
	o.LegalName.Unset()
}

// GetLegalNumber returns the LegalNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetLegalNumber() string {
	if o == nil || IsNil(o.LegalNumber.Get()) {
		var ret string
		return ret
	}
	return *o.LegalNumber.Get()
}

// GetLegalNumberOk returns a tuple with the LegalNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetLegalNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LegalNumber.Get(), o.LegalNumber.IsSet()
}

// HasLegalNumber returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasLegalNumber() bool {
	if o != nil && o.LegalNumber.IsSet() {
		return true
	}

	return false
}

// SetLegalNumber gets a reference to the given NullableString and assigns it to the LegalNumber field.
func (o *OrganizationUpdateInputOrganization) SetLegalNumber(v string) {
	o.LegalNumber.Set(&v)
}
// SetLegalNumberNil sets the value for LegalNumber to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetLegalNumberNil() {
	o.LegalNumber.Set(nil)
}

// UnsetLegalNumber ensures that no value is present for LegalNumber, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetLegalNumber() {
	o.LegalNumber.Unset()
}

// GetNetPaymentTerm returns the NetPaymentTerm field value if set, zero value otherwise.
func (o *OrganizationUpdateInputOrganization) GetNetPaymentTerm() int32 {
	if o == nil || IsNil(o.NetPaymentTerm) {
		var ret int32
		return ret
	}
	return *o.NetPaymentTerm
}

// GetNetPaymentTermOk returns a tuple with the NetPaymentTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInputOrganization) GetNetPaymentTermOk() (*int32, bool) {
	if o == nil || IsNil(o.NetPaymentTerm) {
		return nil, false
	}
	return o.NetPaymentTerm, true
}

// HasNetPaymentTerm returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasNetPaymentTerm() bool {
	if o != nil && !IsNil(o.NetPaymentTerm) {
		return true
	}

	return false
}

// SetNetPaymentTerm gets a reference to the given int32 and assigns it to the NetPaymentTerm field.
func (o *OrganizationUpdateInputOrganization) SetNetPaymentTerm(v int32) {
	o.NetPaymentTerm = &v
}

// GetTaxIdentificationNumber returns the TaxIdentificationNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationUpdateInputOrganization) GetTaxIdentificationNumber() string {
	if o == nil || IsNil(o.TaxIdentificationNumber.Get()) {
		var ret string
		return ret
	}
	return *o.TaxIdentificationNumber.Get()
}

// GetTaxIdentificationNumberOk returns a tuple with the TaxIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUpdateInputOrganization) GetTaxIdentificationNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxIdentificationNumber.Get(), o.TaxIdentificationNumber.IsSet()
}

// HasTaxIdentificationNumber returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasTaxIdentificationNumber() bool {
	if o != nil && o.TaxIdentificationNumber.IsSet() {
		return true
	}

	return false
}

// SetTaxIdentificationNumber gets a reference to the given NullableString and assigns it to the TaxIdentificationNumber field.
func (o *OrganizationUpdateInputOrganization) SetTaxIdentificationNumber(v string) {
	o.TaxIdentificationNumber.Set(&v)
}
// SetTaxIdentificationNumberNil sets the value for TaxIdentificationNumber to be an explicit nil
func (o *OrganizationUpdateInputOrganization) SetTaxIdentificationNumberNil() {
	o.TaxIdentificationNumber.Set(nil)
}

// UnsetTaxIdentificationNumber ensures that no value is present for TaxIdentificationNumber, not even an explicit nil
func (o *OrganizationUpdateInputOrganization) UnsetTaxIdentificationNumber() {
	o.TaxIdentificationNumber.Unset()
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *OrganizationUpdateInputOrganization) GetTimezone() Timezone {
	if o == nil || IsNil(o.Timezone) {
		var ret Timezone
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInputOrganization) GetTimezoneOk() (*Timezone, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given Timezone and assigns it to the Timezone field.
func (o *OrganizationUpdateInputOrganization) SetTimezone(v Timezone) {
	o.Timezone = &v
}

// GetEmailSettings returns the EmailSettings field value if set, zero value otherwise.
func (o *OrganizationUpdateInputOrganization) GetEmailSettings() []string {
	if o == nil || IsNil(o.EmailSettings) {
		var ret []string
		return ret
	}
	return o.EmailSettings
}

// GetEmailSettingsOk returns a tuple with the EmailSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInputOrganization) GetEmailSettingsOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailSettings) {
		return nil, false
	}
	return o.EmailSettings, true
}

// HasEmailSettings returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasEmailSettings() bool {
	if o != nil && !IsNil(o.EmailSettings) {
		return true
	}

	return false
}

// SetEmailSettings gets a reference to the given []string and assigns it to the EmailSettings field.
func (o *OrganizationUpdateInputOrganization) SetEmailSettings(v []string) {
	o.EmailSettings = v
}

// GetBillingConfiguration returns the BillingConfiguration field value if set, zero value otherwise.
func (o *OrganizationUpdateInputOrganization) GetBillingConfiguration() OrganizationBillingConfiguration {
	if o == nil || IsNil(o.BillingConfiguration) {
		var ret OrganizationBillingConfiguration
		return ret
	}
	return *o.BillingConfiguration
}

// GetBillingConfigurationOk returns a tuple with the BillingConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInputOrganization) GetBillingConfigurationOk() (*OrganizationBillingConfiguration, bool) {
	if o == nil || IsNil(o.BillingConfiguration) {
		return nil, false
	}
	return o.BillingConfiguration, true
}

// HasBillingConfiguration returns a boolean if a field has been set.
func (o *OrganizationUpdateInputOrganization) HasBillingConfiguration() bool {
	if o != nil && !IsNil(o.BillingConfiguration) {
		return true
	}

	return false
}

// SetBillingConfiguration gets a reference to the given OrganizationBillingConfiguration and assigns it to the BillingConfiguration field.
func (o *OrganizationUpdateInputOrganization) SetBillingConfiguration(v OrganizationBillingConfiguration) {
	o.BillingConfiguration = &v
}

func (o OrganizationUpdateInputOrganization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationUpdateInputOrganization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.WebhookUrl.IsSet() {
		toSerialize["webhook_url"] = o.WebhookUrl.Get()
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.DefaultCurrency) {
		toSerialize["default_currency"] = o.DefaultCurrency
	}
	if o.AddressLine1.IsSet() {
		toSerialize["address_line1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["address_line2"] = o.AddressLine2.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.Zipcode.IsSet() {
		toSerialize["zipcode"] = o.Zipcode.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.LegalName.IsSet() {
		toSerialize["legal_name"] = o.LegalName.Get()
	}
	if o.LegalNumber.IsSet() {
		toSerialize["legal_number"] = o.LegalNumber.Get()
	}
	if !IsNil(o.NetPaymentTerm) {
		toSerialize["net_payment_term"] = o.NetPaymentTerm
	}
	if o.TaxIdentificationNumber.IsSet() {
		toSerialize["tax_identification_number"] = o.TaxIdentificationNumber.Get()
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.EmailSettings) {
		toSerialize["email_settings"] = o.EmailSettings
	}
	if !IsNil(o.BillingConfiguration) {
		toSerialize["billing_configuration"] = o.BillingConfiguration
	}
	return toSerialize, nil
}

type NullableOrganizationUpdateInputOrganization struct {
	value *OrganizationUpdateInputOrganization
	isSet bool
}

func (v NullableOrganizationUpdateInputOrganization) Get() *OrganizationUpdateInputOrganization {
	return v.value
}

func (v *NullableOrganizationUpdateInputOrganization) Set(val *OrganizationUpdateInputOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUpdateInputOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUpdateInputOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUpdateInputOrganization(val *OrganizationUpdateInputOrganization) *NullableOrganizationUpdateInputOrganization {
	return &NullableOrganizationUpdateInputOrganization{value: val, isSet: true}
}

func (v NullableOrganizationUpdateInputOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUpdateInputOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


