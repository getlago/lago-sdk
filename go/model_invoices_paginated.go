/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the InvoicesPaginated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoicesPaginated{}

// InvoicesPaginated struct for InvoicesPaginated
type InvoicesPaginated struct {
	Invoices []InvoiceObject `json:"invoices"`
	Meta PaginationMeta `json:"meta"`
}

type _InvoicesPaginated InvoicesPaginated

// NewInvoicesPaginated instantiates a new InvoicesPaginated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoicesPaginated(invoices []InvoiceObject, meta PaginationMeta) *InvoicesPaginated {
	this := InvoicesPaginated{}
	this.Invoices = invoices
	this.Meta = meta
	return &this
}

// NewInvoicesPaginatedWithDefaults instantiates a new InvoicesPaginated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoicesPaginatedWithDefaults() *InvoicesPaginated {
	this := InvoicesPaginated{}
	return &this
}

// GetInvoices returns the Invoices field value
func (o *InvoicesPaginated) GetInvoices() []InvoiceObject {
	if o == nil {
		var ret []InvoiceObject
		return ret
	}

	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value
// and a boolean to check if the value has been set.
func (o *InvoicesPaginated) GetInvoicesOk() ([]InvoiceObject, bool) {
	if o == nil {
		return nil, false
	}
	return o.Invoices, true
}

// SetInvoices sets field value
func (o *InvoicesPaginated) SetInvoices(v []InvoiceObject) {
	o.Invoices = v
}

// GetMeta returns the Meta field value
func (o *InvoicesPaginated) GetMeta() PaginationMeta {
	if o == nil {
		var ret PaginationMeta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *InvoicesPaginated) GetMetaOk() (*PaginationMeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *InvoicesPaginated) SetMeta(v PaginationMeta) {
	o.Meta = v
}

func (o InvoicesPaginated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoicesPaginated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invoices"] = o.Invoices
	toSerialize["meta"] = o.Meta
	return toSerialize, nil
}

func (o *InvoicesPaginated) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"invoices",
		"meta",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoicesPaginated := _InvoicesPaginated{}

	err = json.Unmarshal(bytes, &varInvoicesPaginated)

	if err != nil {
		return err
	}

	*o = InvoicesPaginated(varInvoicesPaginated)

	return err
}

type NullableInvoicesPaginated struct {
	value *InvoicesPaginated
	isSet bool
}

func (v NullableInvoicesPaginated) Get() *InvoicesPaginated {
	return v.value
}

func (v *NullableInvoicesPaginated) Set(val *InvoicesPaginated) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoicesPaginated) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoicesPaginated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoicesPaginated(val *InvoicesPaginated) *NullableInvoicesPaginated {
	return &NullableInvoicesPaginated{value: val, isSet: true}
}

func (v NullableInvoicesPaginated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoicesPaginated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


