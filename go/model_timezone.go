/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// Timezone the model 'Timezone'
type Timezone string

// List of Timezone
const (
	UTC Timezone = "UTC"
	AFRICA_ALGIERS Timezone = "Africa/Algiers"
	AFRICA_CAIRO Timezone = "Africa/Cairo"
	AFRICA_CASABLANCA Timezone = "Africa/Casablanca"
	AFRICA_HARARE Timezone = "Africa/Harare"
	AFRICA_JOHANNESBURG Timezone = "Africa/Johannesburg"
	AFRICA_MONROVIA Timezone = "Africa/Monrovia"
	AFRICA_NAIROBI Timezone = "Africa/Nairobi"
	AMERICA_ARGENTINA_BUENOS_AIRES Timezone = "America/Argentina/Buenos_Aires"
	AMERICA_BOGOTA Timezone = "America/Bogota"
	AMERICA_CARACAS Timezone = "America/Caracas"
	AMERICA_CHICAGO Timezone = "America/Chicago"
	AMERICA_CHIHUAHUA Timezone = "America/Chihuahua"
	AMERICA_DENVER Timezone = "America/Denver"
	AMERICA_GODTHAB Timezone = "America/Godthab"
	AMERICA_GUATEMALA Timezone = "America/Guatemala"
	AMERICA_GUYANA Timezone = "America/Guyana"
	AMERICA_HALIFAX Timezone = "America/Halifax"
	AMERICA_INDIANA_INDIANAPOLIS Timezone = "America/Indiana/Indianapolis"
	AMERICA_JUNEAU Timezone = "America/Juneau"
	AMERICA_LA_PAZ Timezone = "America/La_Paz"
	AMERICA_LIMA Timezone = "America/Lima"
	AMERICA_LOS_ANGELES Timezone = "America/Los_Angeles"
	AMERICA_MAZATLAN Timezone = "America/Mazatlan"
	AMERICA_MEXICO_CITY Timezone = "America/Mexico_City"
	AMERICA_MONTERREY Timezone = "America/Monterrey"
	AMERICA_MONTEVIDEO Timezone = "America/Montevideo"
	AMERICA_NEW_YORK Timezone = "America/New_York"
	AMERICA_PHOENIX Timezone = "America/Phoenix"
	AMERICA_PUERTO_RICO Timezone = "America/Puerto_Rico"
	AMERICA_REGINA Timezone = "America/Regina"
	AMERICA_SANTIAGO Timezone = "America/Santiago"
	AMERICA_SAO_PAULO Timezone = "America/Sao_Paulo"
	AMERICA_ST_JOHNS Timezone = "America/St_Johns"
	AMERICA_TIJUANA Timezone = "America/Tijuana"
	ASIA_ALMATY Timezone = "Asia/Almaty"
	ASIA_BAGHDAD Timezone = "Asia/Baghdad"
	ASIA_BAKU Timezone = "Asia/Baku"
	ASIA_BANGKOK Timezone = "Asia/Bangkok"
	ASIA_CHONGQING Timezone = "Asia/Chongqing"
	ASIA_COLOMBO Timezone = "Asia/Colombo"
	ASIA_DHAKA Timezone = "Asia/Dhaka"
	ASIA_HONG_KONG Timezone = "Asia/Hong_Kong"
	ASIA_IRKUTSK Timezone = "Asia/Irkutsk"
	ASIA_JAKARTA Timezone = "Asia/Jakarta"
	ASIA_JERUSALEM Timezone = "Asia/Jerusalem"
	ASIA_KABUL Timezone = "Asia/Kabul"
	ASIA_KAMCHATKA Timezone = "Asia/Kamchatka"
	ASIA_KARACHI Timezone = "Asia/Karachi"
	ASIA_KATHMANDU Timezone = "Asia/Kathmandu"
	ASIA_KOLKATA Timezone = "Asia/Kolkata"
	ASIA_KRASNOYARSK Timezone = "Asia/Krasnoyarsk"
	ASIA_KUALA_LUMPUR Timezone = "Asia/Kuala_Lumpur"
	ASIA_KUWAIT Timezone = "Asia/Kuwait"
	ASIA_MAGADAN Timezone = "Asia/Magadan"
	ASIA_MUSCAT Timezone = "Asia/Muscat"
	ASIA_NOVOSIBIRSK Timezone = "Asia/Novosibirsk"
	ASIA_RANGOON Timezone = "Asia/Rangoon"
	ASIA_RIYADH Timezone = "Asia/Riyadh"
	ASIA_SEOUL Timezone = "Asia/Seoul"
	ASIA_SHANGHAI Timezone = "Asia/Shanghai"
	ASIA_SINGAPORE Timezone = "Asia/Singapore"
	ASIA_SREDNEKOLYMSK Timezone = "Asia/Srednekolymsk"
	ASIA_TAIPEI Timezone = "Asia/Taipei"
	ASIA_TASHKENT Timezone = "Asia/Tashkent"
	ASIA_TBILISI Timezone = "Asia/Tbilisi"
	ASIA_TEHRAN Timezone = "Asia/Tehran"
	ASIA_TOKYO Timezone = "Asia/Tokyo"
	ASIA_ULAANBAATAR Timezone = "Asia/Ulaanbaatar"
	ASIA_URUMQI Timezone = "Asia/Urumqi"
	ASIA_VLADIVOSTOK Timezone = "Asia/Vladivostok"
	ASIA_YAKUTSK Timezone = "Asia/Yakutsk"
	ASIA_YEKATERINBURG Timezone = "Asia/Yekaterinburg"
	ASIA_YEREVAN Timezone = "Asia/Yerevan"
	ATLANTIC_AZORES Timezone = "Atlantic/Azores"
	ATLANTIC_CAPE_VERDE Timezone = "Atlantic/Cape_Verde"
	ATLANTIC_SOUTH_GEORGIA Timezone = "Atlantic/South_Georgia"
	AUSTRALIA_ADELAIDE Timezone = "Australia/Adelaide"
	AUSTRALIA_BRISBANE Timezone = "Australia/Brisbane"
	AUSTRALIA_DARWIN Timezone = "Australia/Darwin"
	AUSTRALIA_HOBART Timezone = "Australia/Hobart"
	AUSTRALIA_MELBOURNE Timezone = "Australia/Melbourne"
	AUSTRALIA_PERTH Timezone = "Australia/Perth"
	AUSTRALIA_SYDNEY Timezone = "Australia/Sydney"
	EUROPE_AMSTERDAM Timezone = "Europe/Amsterdam"
	EUROPE_ATHENS Timezone = "Europe/Athens"
	EUROPE_BELGRADE Timezone = "Europe/Belgrade"
	EUROPE_BERLIN Timezone = "Europe/Berlin"
	EUROPE_BRATISLAVA Timezone = "Europe/Bratislava"
	EUROPE_BRUSSELS Timezone = "Europe/Brussels"
	EUROPE_BUCHAREST Timezone = "Europe/Bucharest"
	EUROPE_BUDAPEST Timezone = "Europe/Budapest"
	EUROPE_COPENHAGEN Timezone = "Europe/Copenhagen"
	EUROPE_DUBLIN Timezone = "Europe/Dublin"
	EUROPE_HELSINKI Timezone = "Europe/Helsinki"
	EUROPE_ISTANBUL Timezone = "Europe/Istanbul"
	EUROPE_KALININGRAD Timezone = "Europe/Kaliningrad"
	EUROPE_KIEV Timezone = "Europe/Kiev"
	EUROPE_LISBON Timezone = "Europe/Lisbon"
	EUROPE_LJUBLJANA Timezone = "Europe/Ljubljana"
	EUROPE_LONDON Timezone = "Europe/London"
	EUROPE_MADRID Timezone = "Europe/Madrid"
	EUROPE_MINSK Timezone = "Europe/Minsk"
	EUROPE_MOSCOW Timezone = "Europe/Moscow"
	EUROPE_PARIS Timezone = "Europe/Paris"
	EUROPE_PRAGUE Timezone = "Europe/Prague"
	EUROPE_RIGA Timezone = "Europe/Riga"
	EUROPE_ROME Timezone = "Europe/Rome"
	EUROPE_SAMARA Timezone = "Europe/Samara"
	EUROPE_SARAJEVO Timezone = "Europe/Sarajevo"
	EUROPE_SKOPJE Timezone = "Europe/Skopje"
	EUROPE_SOFIA Timezone = "Europe/Sofia"
	EUROPE_STOCKHOLM Timezone = "Europe/Stockholm"
	EUROPE_TALLINN Timezone = "Europe/Tallinn"
	EUROPE_VIENNA Timezone = "Europe/Vienna"
	EUROPE_VILNIUS Timezone = "Europe/Vilnius"
	EUROPE_VOLGOGRAD Timezone = "Europe/Volgograd"
	EUROPE_WARSAW Timezone = "Europe/Warsaw"
	EUROPE_ZAGREB Timezone = "Europe/Zagreb"
	EUROPE_ZURICH Timezone = "Europe/Zurich"
	GMT12 Timezone = "GMT+12"
	PACIFIC_APIA Timezone = "Pacific/Apia"
	PACIFIC_AUCKLAND Timezone = "Pacific/Auckland"
	PACIFIC_CHATHAM Timezone = "Pacific/Chatham"
	PACIFIC_FAKAOFO Timezone = "Pacific/Fakaofo"
	PACIFIC_FIJI Timezone = "Pacific/Fiji"
	PACIFIC_GUADALCANAL Timezone = "Pacific/Guadalcanal"
	PACIFIC_GUAM Timezone = "Pacific/Guam"
	PACIFIC_HONOLULU Timezone = "Pacific/Honolulu"
	PACIFIC_MAJURO Timezone = "Pacific/Majuro"
	PACIFIC_MIDWAY Timezone = "Pacific/Midway"
	PACIFIC_NOUMEA Timezone = "Pacific/Noumea"
	PACIFIC_PAGO_PAGO Timezone = "Pacific/Pago_Pago"
	PACIFIC_PORT_MORESBY Timezone = "Pacific/Port_Moresby"
	PACIFIC_TONGATAPU Timezone = "Pacific/Tongatapu"
)

// All allowed values of Timezone enum
var AllowedTimezoneEnumValues = []Timezone{
	"UTC",
	"Africa/Algiers",
	"Africa/Cairo",
	"Africa/Casablanca",
	"Africa/Harare",
	"Africa/Johannesburg",
	"Africa/Monrovia",
	"Africa/Nairobi",
	"America/Argentina/Buenos_Aires",
	"America/Bogota",
	"America/Caracas",
	"America/Chicago",
	"America/Chihuahua",
	"America/Denver",
	"America/Godthab",
	"America/Guatemala",
	"America/Guyana",
	"America/Halifax",
	"America/Indiana/Indianapolis",
	"America/Juneau",
	"America/La_Paz",
	"America/Lima",
	"America/Los_Angeles",
	"America/Mazatlan",
	"America/Mexico_City",
	"America/Monterrey",
	"America/Montevideo",
	"America/New_York",
	"America/Phoenix",
	"America/Puerto_Rico",
	"America/Regina",
	"America/Santiago",
	"America/Sao_Paulo",
	"America/St_Johns",
	"America/Tijuana",
	"Asia/Almaty",
	"Asia/Baghdad",
	"Asia/Baku",
	"Asia/Bangkok",
	"Asia/Chongqing",
	"Asia/Colombo",
	"Asia/Dhaka",
	"Asia/Hong_Kong",
	"Asia/Irkutsk",
	"Asia/Jakarta",
	"Asia/Jerusalem",
	"Asia/Kabul",
	"Asia/Kamchatka",
	"Asia/Karachi",
	"Asia/Kathmandu",
	"Asia/Kolkata",
	"Asia/Krasnoyarsk",
	"Asia/Kuala_Lumpur",
	"Asia/Kuwait",
	"Asia/Magadan",
	"Asia/Muscat",
	"Asia/Novosibirsk",
	"Asia/Rangoon",
	"Asia/Riyadh",
	"Asia/Seoul",
	"Asia/Shanghai",
	"Asia/Singapore",
	"Asia/Srednekolymsk",
	"Asia/Taipei",
	"Asia/Tashkent",
	"Asia/Tbilisi",
	"Asia/Tehran",
	"Asia/Tokyo",
	"Asia/Ulaanbaatar",
	"Asia/Urumqi",
	"Asia/Vladivostok",
	"Asia/Yakutsk",
	"Asia/Yekaterinburg",
	"Asia/Yerevan",
	"Atlantic/Azores",
	"Atlantic/Cape_Verde",
	"Atlantic/South_Georgia",
	"Australia/Adelaide",
	"Australia/Brisbane",
	"Australia/Darwin",
	"Australia/Hobart",
	"Australia/Melbourne",
	"Australia/Perth",
	"Australia/Sydney",
	"Europe/Amsterdam",
	"Europe/Athens",
	"Europe/Belgrade",
	"Europe/Berlin",
	"Europe/Bratislava",
	"Europe/Brussels",
	"Europe/Bucharest",
	"Europe/Budapest",
	"Europe/Copenhagen",
	"Europe/Dublin",
	"Europe/Helsinki",
	"Europe/Istanbul",
	"Europe/Kaliningrad",
	"Europe/Kiev",
	"Europe/Lisbon",
	"Europe/Ljubljana",
	"Europe/London",
	"Europe/Madrid",
	"Europe/Minsk",
	"Europe/Moscow",
	"Europe/Paris",
	"Europe/Prague",
	"Europe/Riga",
	"Europe/Rome",
	"Europe/Samara",
	"Europe/Sarajevo",
	"Europe/Skopje",
	"Europe/Sofia",
	"Europe/Stockholm",
	"Europe/Tallinn",
	"Europe/Vienna",
	"Europe/Vilnius",
	"Europe/Volgograd",
	"Europe/Warsaw",
	"Europe/Zagreb",
	"Europe/Zurich",
	"GMT+12",
	"Pacific/Apia",
	"Pacific/Auckland",
	"Pacific/Chatham",
	"Pacific/Fakaofo",
	"Pacific/Fiji",
	"Pacific/Guadalcanal",
	"Pacific/Guam",
	"Pacific/Honolulu",
	"Pacific/Majuro",
	"Pacific/Midway",
	"Pacific/Noumea",
	"Pacific/Pago_Pago",
	"Pacific/Port_Moresby",
	"Pacific/Tongatapu",
}

func (v *Timezone) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Timezone(value)
	for _, existing := range AllowedTimezoneEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Timezone", value)
}

// NewTimezoneFromValue returns a pointer to a valid Timezone
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTimezoneFromValue(v string) (*Timezone, error) {
	ev := Timezone(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Timezone: valid values are %v", v, AllowedTimezoneEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Timezone) IsValid() bool {
	for _, existing := range AllowedTimezoneEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Timezone value
func (v Timezone) Ptr() *Timezone {
	return &v
}

type NullableTimezone struct {
	value *Timezone
	isSet bool
}

func (v NullableTimezone) Get() *Timezone {
	return v.value
}

func (v *NullableTimezone) Set(val *Timezone) {
	v.value = val
	v.isSet = true
}

func (v NullableTimezone) IsSet() bool {
	return v.isSet
}

func (v *NullableTimezone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimezone(val *Timezone) *NullableTimezone {
	return &NullableTimezone{value: val, isSet: true}
}

func (v NullableTimezone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimezone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

