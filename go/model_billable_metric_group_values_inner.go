/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// BillableMetricGroupValuesInner - struct for BillableMetricGroupValuesInner
type BillableMetricGroupValuesInner struct {
	BillableMetricGroupValuesInnerOneOf *BillableMetricGroupValuesInnerOneOf
	String *string
}

// BillableMetricGroupValuesInnerOneOfAsBillableMetricGroupValuesInner is a convenience function that returns BillableMetricGroupValuesInnerOneOf wrapped in BillableMetricGroupValuesInner
func BillableMetricGroupValuesInnerOneOfAsBillableMetricGroupValuesInner(v *BillableMetricGroupValuesInnerOneOf) BillableMetricGroupValuesInner {
	return BillableMetricGroupValuesInner{
		BillableMetricGroupValuesInnerOneOf: v,
	}
}

// stringAsBillableMetricGroupValuesInner is a convenience function that returns string wrapped in BillableMetricGroupValuesInner
func StringAsBillableMetricGroupValuesInner(v *string) BillableMetricGroupValuesInner {
	return BillableMetricGroupValuesInner{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *BillableMetricGroupValuesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into BillableMetricGroupValuesInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.BillableMetricGroupValuesInnerOneOf)
	if err == nil {
		jsonBillableMetricGroupValuesInnerOneOf, _ := json.Marshal(dst.BillableMetricGroupValuesInnerOneOf)
		if string(jsonBillableMetricGroupValuesInnerOneOf) == "{}" { // empty struct
			dst.BillableMetricGroupValuesInnerOneOf = nil
		} else {
			match++
		}
	} else {
		dst.BillableMetricGroupValuesInnerOneOf = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BillableMetricGroupValuesInnerOneOf = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(BillableMetricGroupValuesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(BillableMetricGroupValuesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BillableMetricGroupValuesInner) MarshalJSON() ([]byte, error) {
	if src.BillableMetricGroupValuesInnerOneOf != nil {
		return json.Marshal(&src.BillableMetricGroupValuesInnerOneOf)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *BillableMetricGroupValuesInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.BillableMetricGroupValuesInnerOneOf != nil {
		return obj.BillableMetricGroupValuesInnerOneOf
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableBillableMetricGroupValuesInner struct {
	value *BillableMetricGroupValuesInner
	isSet bool
}

func (v NullableBillableMetricGroupValuesInner) Get() *BillableMetricGroupValuesInner {
	return v.value
}

func (v *NullableBillableMetricGroupValuesInner) Set(val *BillableMetricGroupValuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBillableMetricGroupValuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBillableMetricGroupValuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillableMetricGroupValuesInner(val *BillableMetricGroupValuesInner) *NullableBillableMetricGroupValuesInner {
	return &NullableBillableMetricGroupValuesInner{value: val, isSet: true}
}

func (v NullableBillableMetricGroupValuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillableMetricGroupValuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


