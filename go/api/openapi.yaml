openapi: 3.0.3
info:
  contact:
    email: tech@getlago.com
  description: Lago API allows your application to push customer information and metrics
    (events) from your application to the billing application.
  license:
    name: AGPLv3
  title: Lago API documentation
  version: 0.52.0-beta
externalDocs:
  description: Lago Github
  url: https://github.com/getlago
servers:
- url: https://api.getlago.com/api/v1
security:
- bearerAuth: []
tags:
- description: Everything about Analytics
  name: analytics
- description: Everything about Billable metric collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/billable_metrics/billable-metric-object
  name: billable_metrics
- description: Everything about Customer collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/customers/customer-object
  name: customers
- description: Everything about Plan collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/plans/plan-object
  name: plans
- description: Everything about Subscription collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/subscriptions/subscription-object
  name: subscriptions
- description: Everything about Event collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/events/event-object
  name: events
- description: Everything about Organization collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/organizations/organization-object
  name: organizations
- description: Everything about Tax collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/taxes/tax-object
  name: taxes
- description: Everything about Coupon collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/coupons/coupon-object
  name: coupons
- description: Everything about Add-on collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/add_ons/add-on-object
  name: add_ons
- description: Everything about Fees
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/invoices/invoice-object#fee-object
  name: fees
- description: Everything about Invoice collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/invoices/invoice-object
  name: invoices
- description: Everything about Wallet collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/wallets/wallet-object
  name: wallets
- description: Everything about Credit notes collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/credit_notes/credit-note-object
  name: credit_notes
- description: Everything about Webhooks
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/webhooks/message-signature#1-retrieve-the-public-key
  name: webhooks
- description: Everything about Webhook Endpoints
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/webhook_endpoints/webhook-endpoint-object
  name: webhook_endpoints
paths:
  /add_ons:
    get:
      description: This endpoint is used to list all existing add-ons.
      operationId: findAllAddOns
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnsPaginated'
          description: Add-ons
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all add-ons
      tags:
      - add_ons
    post:
      description: This endpoint is used to create an add-on that can be then attached
        to a one-off invoice.
      operationId: createAddOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnCreateInput'
        description: Add-on payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Add-on created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create an add-on
      tags:
      - add_ons
  /add_ons/{code}:
    delete:
      description: This endpoint is used to delete an existing add-on.
      operationId: destroyAddOn
      parameters:
      - description: Unique code used to identify the add-on.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: setup_fee
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Add-on deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete an add-on
      tags:
      - add_ons
    get:
      description: This endpoint is used to retrieve a specific add-on.
      operationId: findAddOn
      parameters:
      - description: Unique code used to identify the add-on.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: setup_fee
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Add-on
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve an add-on
      tags:
      - add_ons
    put:
      description: This endpoint is used to update an existing add-on.
      operationId: updateAddOn
      parameters:
      - description: Unique code used to identify the add-on.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: setup_fee
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnUpdateInput'
        description: Add-on payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Add-on updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an add-on
      tags:
      - add_ons
  /analytics/gross_revenue:
    get:
      description: Gross revenue is the sum of monthly `finalized` invoice payments
        and fees paid in advance that are not invoiceable. This total is calculated
        after deducting taxes and discounts.
      operationId: findAllGrossRevenues
      parameters:
      - description: Currency of revenue analytics. Format must be ISO 4217.
        explode: true
        in: query
        name: currency
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - example: USD
        style: form
      - description: The customer external unique identifier (provided by your own
          application). Use it to filter revenue analytics at the customer level.
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrossRevenues'
          description: Gross revenue
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List gross revenue
      tags:
      - analytics
  /analytics/invoice_collection:
    get:
      description: "Represents a monthly aggregation, detailing both the total count\
        \ and the cumulative amount of invoices that have been marked as `finalized`.\
        \ This report sorts invoices categorically based on their `payment_status`."
      operationId: findAllInvoiceCollections
      parameters:
      - description: The currency of revenue analytics. Format must be ISO 4217.
        explode: true
        in: query
        name: currency
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - example: USD
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceCollections'
          description: Finalized invoice collection
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List of finalized invoices
      tags:
      - analytics
  /analytics/invoiced_usage:
    get:
      description: "Reports a monthly analysis focused on the revenue generated from\
        \ all usage-based fees. It exclusively accounts for revenue that has been\
        \ formally invoiced. Importantly, this report does not include revenue related\
        \ to the usage in the current billing period, limiting its scope to previously\
        \ invoiced amounts."
      operationId: findAllInvoicedUsages
      parameters:
      - description: The currency of invoiced usage analytics. Format must be ISO
          4217.
        explode: true
        in: query
        name: currency
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - example: USD
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicedUsages'
          description: Invoiced usage
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List usage revenue
      tags:
      - analytics
  /analytics/mrr:
    get:
      description: This endpoint is used to list MRR.
      operationId: findAllMrrs
      parameters:
      - description: |-
          Quantifies the revenue generated from `subscription` fees on a monthly basis. This figure is calculated post-application of applicable taxes and deduction of any applicable discounts. The method of calculation varies based on the subscription billing cycle:

          - Revenue from `monthly` subscription invoices is included in the MRR for the month in which the invoice is issued.
          - Revenue from `quarterly` subscription invoices is distributed evenly over three months. This distribution applies to fees paid in advance (allocated to the next remaining months depending on calendar or anniversary billing) as well as to fees paid in arrears (allocated to the preceding months depending on calendar or anniversary billing).
          - Revenue from `yearly` subscription invoices is distributed evenly over twelve months. This allocation is applicable for fees paid in advance (spread over the next  remaining months depending on calendar or anniversary billing) and for fees paid in arrears (spread over the previous months depending on calendar or anniversary billing).
          - Revenue from `weekly` subscription invoices, the total revenue from all invoices issued within a month is summed up. This total is then divided by the number of invoices issued during that month, and the result is multiplied by 4.33, representing the average number of weeks in a month.
        explode: true
        in: query
        name: currency
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - example: USD
        style: form
      - description: Show data only for given number of months.
        explode: true
        in: query
        name: months
        required: false
        schema:
          example: 12
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mrrs'
          description: MRR
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List MRR
      tags:
      - analytics
  /applied_coupons:
    get:
      description: This endpoint is used to list all applied coupons. You can filter
        by coupon status and by customer.
      operationId: findAllAppliedCoupons
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: The status of the coupon. Can be either `active` or `terminated`.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - active
          - terminated
          example: active
          type: string
        style: form
      - description: The customer external unique identifier (provided by your own
          application)
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedCouponsPaginated'
          description: Applied Coupons
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all applied coupons
      tags:
      - coupons
    post:
      description: "This endpoint is used to apply a specific coupon to a customer,\
        \ before or during a subscription."
      operationId: applyCoupon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppliedCouponInput'
        description: Apply coupon payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedCoupon'
          description: Coupon applied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Apply a coupon to a customer
      tags:
      - coupons
  /billable_metrics:
    get:
      description: This endpoint retrieves all existing billable metrics that represent
        pricing components of your application.
      operationId: findAllBillableMetrics
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetricsPaginated'
          description: List of billable metrics
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all billable metrics
      tags:
      - billable_metrics
    post:
      description: This endpoint creates a new billable metric representing a pricing
        component of your application.
      operationId: createBillableMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillableMetricCreateInput'
        description: Billable metric payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Billable metric created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a billable metric
      tags:
      - billable_metrics
  /billable_metrics/{code}:
    delete:
      description: This endpoint deletes an existing billable metric representing
        a pricing component of your application.
      operationId: destroyBillableMetric
      parameters:
      - description: Code of the existing billable metric.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: storage
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Billable metric deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete a billable metric
      tags:
      - billable_metrics
    get:
      description: This endpoint retrieves an existing billable metric that represents
        a pricing component of your application. The billable metric is identified
        by its unique code.
      operationId: findBillableMetric
      parameters:
      - description: Code of the existing billable metric.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: storage
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Billable metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a billable metric
      tags:
      - billable_metrics
    put:
      description: This endpoint updates an existing billable metric representing
        a pricing component of your application.
      operationId: updateBillableMetric
      parameters:
      - description: Code of the existing billable metric.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: storage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillableMetricUpdateInput'
        description: Billable metric payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Billable metric updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a billable metric
      tags:
      - billable_metrics
  /billable_metrics/{code}/groups:
    get:
      description: This endpoint retrieves all groups for a billable metric.
      operationId: findAllBillableMetricGroups
      parameters:
      - description: Code of the existing billable metric.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                groups:
                - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                  key: region
                  value: us-east-1
                - lago_id: 1a901a90-1a90-1a90-1a90-1a901a288d80
                  key: region
                  value: us-east-2
                - lago_id: 3b288a90-1a20-1a90-1a90-1a921d921a90
                  key: region
                  value: eu-west-1
                meta:
                  current_page: 1
                  next_page: null
                  prev_page: null
                  total_pages: 1
                  total_count: 2
              schema:
                $ref: '#/components/schemas/GroupsPaginated'
          description: List of billable metric's groups
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: Find a billable metric's groups
      tags:
      - billable_metrics
  /coupons:
    get:
      description: This endpoint is used to list all existing coupons.
      operationId: findAllCoupons
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponsPaginated'
          description: Coupons
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all coupons
      tags:
      - coupons
    post:
      description: This endpoint is used to create a coupon that can be then attached
        to a customer to create a discount.
      operationId: createCoupon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponCreateInput'
        description: Coupon payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Coupon created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a coupon
      tags:
      - coupons
  /coupons/{code}:
    delete:
      description: This endpoint is used to delete a coupon.
      operationId: destroyCoupon
      parameters:
      - description: Unique code used to identify the coupon.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: startup_deal
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Coupon deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete a coupon
      tags:
      - coupons
    get:
      description: This endpoint is used to retrieve a specific coupon.
      operationId: findCoupon
      parameters:
      - description: Unique code used to identify the coupon.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: startup_deal
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Coupon
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a coupon
      tags:
      - coupons
    put:
      description: This endpoint is used to update a coupon that can be then attached
        to a customer to create a discount.
      operationId: updateCoupon
      parameters:
      - description: Unique code used to identify the coupon.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: startup_deal
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponUpdateInput'
        description: Coupon payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Coupon updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a coupon
      tags:
      - coupons
  /credit_notes:
    get:
      description: This endpoint list all existing credit notes.
      operationId: findAllCreditNotes
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: Unique identifier assigned to the customer in your application.
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNotes'
          description: Credit notes
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all credit notes
      tags:
      - credit_notes
    post:
      description: This endpoint creates a new credit note.
      operationId: createCreditNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteCreateInput'
        description: Credit note payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Credit note created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a credit note
      tags:
      - credit_notes
  /credit_notes/{lago_id}:
    get:
      description: This endpoint retrieves an existing credit note.
      operationId: findCreditNote
      parameters:
      - description: "The credit note unique identifier, created by Lago."
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Credit note
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a credit note
      tags:
      - credit_notes
    put:
      description: This endpoint updates an existing credit note.
      operationId: updateCreditNote
      parameters:
      - description: "The credit note unique identifier, created by Lago."
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteUpdateInput'
        description: Credit note update payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Credit note updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a credit note
      tags:
      - credit_notes
  /credit_notes/{lago_id}/download:
    post:
      description: This endpoint downloads the PDF of an existing credit note.
      operationId: downloadCreditNote
      parameters:
      - description: "The credit note unique identifier, created by Lago."
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Credit note PDF
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Download a credit note PDF
      tags:
      - credit_notes
  /credit_notes/estimate:
    post:
      description: This endpoint allows you to retrieve amounts for a new credit note
        creation.
      operationId: estimateCreditNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteEstimateInput'
        description: Credit note estimate payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNoteEstimated'
          description: Credit note amounts
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Estimate amounts for a new credit note
      tags:
      - credit_notes
  /credit_notes/{lago_id}/void:
    put:
      description: This endpoint voids an existing credit note.
      operationId: voidCreditNote
      parameters:
      - description: "The credit note unique identifier, created by Lago."
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Credit note voided
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotAllowed'
          description: Not Allowed error
      summary: Void a credit note
      tags:
      - credit_notes
  /customers:
    get:
      description: This endpoint retrieves all existing customers.
      operationId: findAllCustomers
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersPaginated'
          description: List of customers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all customers
      tags:
      - customers
    post:
      description: This endpoint creates a new customer.
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateInput'
        description: Customer payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Customer created or updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a customer
      tags:
      - customers
  /customers/{external_id}:
    delete:
      description: This endpoint deletes an existing customer.
      operationId: destroyCustomer
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Customer deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete a customer
      tags:
      - customers
    get:
      description: This endpoint retrieves an existing customer.
      operationId: findCustomer
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Customer
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a customer
      tags:
      - customers
  /customers/{external_customer_id}/applied_coupons/{applied_coupon_id}:
    delete:
      description: This endpoint is used to delete a specific coupon that has been
        applied to a customer.
      operationId: deleteAppliedCoupon
      parameters:
      - description: The customer external unique identifier (provided by your own
          application)
        explode: false
        in: path
        name: external_customer_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      - description: "Unique identifier of the applied coupon, created by Lago."
        explode: true
        in: path
        name: applied_coupon_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedCoupon'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete an applied coupon
      tags:
      - coupons
      - customers
  /customers/{external_customer_id}/portal_url:
    get:
      description: |-
        Retrieves an embeddable link for displaying a customer portal.

        This endpoint allows you to fetch the URL that can be embedded to provide customers access to a dedicated portal
      operationId: getCustomerPortalUrl
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: external_customer_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomerPortalUrl_200_response'
          description: Portal URL
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorForbidden'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Get a customer portal URL
      tags:
      - customers
  /customers/{external_customer_id}/current_usage:
    get:
      description: This endpoint enables the retrieval of the usage-based billing
        data for a customer within the current period.
      operationId: findCustomerCurrentUsage
      parameters:
      - description: The customer external unique identifier (provided by your own
          application).
        explode: false
        in: path
        name: external_customer_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      - description: The unique identifier of the subscription within your application.
        explode: true
        in: query
        name: external_subscription_id
        required: true
        schema:
          example: sub_1234567890
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerUsage'
          description: Customer usage
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve customer current usage
      tags:
      - customers
  /customers/{external_customer_id}/past_usage:
    get:
      description: This endpoint enables the retrieval of the usage-based billing
        data for a customer within past periods.
      operationId: findAllCustomerPastUsage
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: The customer external unique identifier (provided by your own
          application).
        explode: false
        in: path
        name: external_customer_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      - description: The unique identifier of the subscription within your application.
        explode: true
        in: query
        name: external_subscription_id
        required: true
        schema:
          example: sub_1234567890
          type: string
        style: form
      - description: Billable metric code filter to apply to the charge usage
        explode: true
        in: query
        name: billable_metric_code
        required: false
        schema:
          example: cpu
          type: string
        style: form
      - description: Number of past billing period to returns in the result
        explode: true
        in: query
        name: periods_count
        required: false
        schema:
          example: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPastUsage'
          description: Customer past usage
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Retrieve customer past usage
      tags:
      - customers
  /customers/{external_customer_id}/checkout_url:
    post:
      description: This endpoint regenerates the Payment Provider Checkout URL of
        a Customer.
      operationId: generateCustomerCheckoutURL
      parameters:
      - description: The customer external unique identifier (provided by your own
          application).
        explode: false
        in: path
        name: external_customer_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generateCustomerCheckoutURL_200_response'
          description: Customer Checkout URL
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Generate a Customer Payment Provider Checkout URL
      tags:
      - customers
  /events:
    post:
      description: This endpoint is used for transmitting usage measurement events
        to either a designated customer or a specific subscription.
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
        description: Event payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Event
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Send usage events
      tags:
      - events
  /events/batch:
    post:
      deprecated: true
      description: This endpoint is used for transmitting a batch of usage measurement
        events to multiple subscriptions for a single customer.
      operationId: createBatchEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventBatchInput'
        description: Batch events payload
        required: true
      responses:
        "200":
          description: Event received
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Batch multiple events
      tags:
      - events
  /events/estimate_fees:
    post:
      description: Estimate the fees that would be created after reception of an event
        for a billable metric attached to one or multiple pay in advance charges
      operationId: eventEstimateFees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEstimateFeesInput'
        description: Event estimate payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
          description: Fees estimate
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Estimate fees for a pay in advance charge
      tags:
      - events
  /events/{transaction_id}:
    get:
      description: This endpoint is used for retrieving a specific usage measurement
        event that has been sent to a customer or a subscription.
      operationId: findEvent
      parameters:
      - description: This field represents the unique identifier sent for this specific
          event.
        explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          example: transaction_1234567890
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Event
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a specific event
      tags:
      - events
  /fees:
    get:
      description: This endpoint is used for retrieving all fees that has been issued.
      operationId: findAllFees
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: Unique identifier assigned to the customer in your application.
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      - description: External subscription ID
        explode: true
        in: query
        name: external_subscription_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      - description: Filter results by fee’s currency.
        explode: true
        in: query
        name: currency
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - example: USD
        style: form
      - description: "The fee type. Possible values are `add-on`, `charge`, `credit`\
          \ or `subscription`."
        explode: true
        in: query
        name: fee_type
        required: false
        schema:
          enum:
          - charge
          - add_on
          - subscription
          - credit
          - instant_charge
          example: charge
          type: string
        style: form
      - description: Filter results by the `code` of the billable metric attached
          to the fee. Only applies to `charge` types.
        explode: true
        in: query
        name: billable_metric_code
        required: false
        schema:
          example: bm_code
          type: string
        style: form
      - description: "Indicates the payment status of the fee. It represents the current\
          \ status of the payment associated with the fee. The possible values for\
          \ this field are `pending`, `succeeded`, `failed` and refunded`."
        explode: true
        in: query
        name: payment_status
        required: false
        schema:
          enum:
          - pending
          - succeeded
          - failed
          - refunded
          example: succeeded
          type: string
        style: form
      - description: Filter results created after creation date and time in UTC.
        explode: true
        in: query
        name: created_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results created before creation date and time in UTC.
        explode: true
        in: query
        name: created_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results with payment success after creation date and time
          in UTC.
        explode: true
        in: query
        name: succeeded_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results with payment success after creation date and time
          in UTC.
        explode: true
        in: query
        name: succeeded_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results with payment failure after creation date and time
          in UTC.
        explode: true
        in: query
        name: failed_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results with payment failure after creation date and time
          in UTC.
        explode: true
        in: query
        name: failed_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results with payment refund after creation date and time
          in UTC.
        explode: true
        in: query
        name: refunded_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Filter results with payment refund after creation date and time
          in UTC.
        explode: true
        in: query
        name: refunded_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeesPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: List all fees
      tags:
      - fees
  /fees/{lago_id}:
    get:
      description: This endpoint is used for retrieving a specific fee that has been
        issued.
      operationId: findFee
      parameters:
      - description: Unique identifier assigned to the fee within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the fee’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: Fee
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a specific fee
      tags:
      - fees
    put:
      description: This endpoint is used for updating a specific fee that has been
        issued.
      operationId: updateFee
      parameters:
      - description: Unique identifier assigned to the fee within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the fee’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeUpdateInput'
        description: Fee payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: Fee updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a fee
      tags:
      - fees
  /invoices:
    get:
      description: This endpoint is used for retrievign all invoices.
      operationId: findAllInvoices
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: Unique identifier assigned to the customer in your application.
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      - description: Filter invoices starting from a specific date.
        explode: true
        in: query
        name: issuing_date_from
        required: false
        schema:
          example: 2022-07-08
          format: date
          type: string
        style: form
      - description: Filter invoices up to a specific date.
        explode: true
        in: query
        name: issuing_date_to
        required: false
        schema:
          example: 2022-08-09
          format: date
          type: string
        style: form
      - description: Filter invoices by status. Possible values are `draft` or `finalized`.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - draft
          - finalized
          type: string
        style: form
      - description: "Filter invoices by payment status. Possible values are `pending`,\
          \ `failed` or `succeeded`."
        explode: true
        in: query
        name: payment_status
        required: false
        schema:
          enum:
          - pending
          - failed
          - succeeded
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesPaginated'
          description: Invoices
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all invoices
      tags:
      - invoices
    post:
      description: This endpoint is used for issuing a one-off invoice.
      operationId: createInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceOneOffCreateInput'
        description: Invoice payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a one-off invoice
      tags:
      - invoices
  /invoices/{lago_id}:
    get:
      description: This endpoint is used for retrieving a specific invoice that has
        been issued.
      operationId: findInvoice
      parameters:
      - description: Unique identifier assigned to the invoice within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the invoice’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve an invoice
      tags:
      - invoices
    put:
      description: This endpoint is used for updating an existing invoice.
      operationId: updateInvoice
      parameters:
      - description: Unique identifier assigned to the invoice within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the invoice’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdateInput'
        description: Update an existing invoice
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an invoice
      tags:
      - invoices
  /invoices/{lago_id}/download:
    post:
      description: This endpoint is used for downloading a specific invoice PDF document.
      operationId: downloadInvoice
      parameters:
      - description: Unique identifier assigned to the invoice within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the invoice’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice PDF
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Download an invoice PDF
      tags:
      - invoices
  /invoices/{lago_id}/finalize:
    put:
      description: This endpoint is used for finalizing a draft invoice.
      operationId: finalizeInvoice
      parameters:
      - description: Unique identifier assigned to the invoice within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the invoice’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice finalized
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Finalize a draft invoice
      tags:
      - invoices
  /invoices/{lago_id}/refresh:
    put:
      description: This endpoint is used for refreshing a draft invoice.
      operationId: refreshInvoice
      parameters:
      - description: Unique identifier assigned to the invoice within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the invoice’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice refreshed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Refresh a draft invoice
      tags:
      - invoices
  /invoices/{lago_id}/retry_payment:
    post:
      description: This endpoint resends an invoice for collection and retry a payment.
      operationId: retryPayment
      parameters:
      - description: Unique identifier assigned to the invoice within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the invoice’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Invoice payment retried
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotAllowed'
          description: Not Allowed error
      summary: Retry an invoice payment
      tags:
      - invoices
  /organizations:
    put:
      description: This endpoint is used to update your own organization's settings.
      operationId: updateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateInput'
        description: Update an existing organization
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update your organization
      tags:
      - organizations
  /plans:
    get:
      description: This endpoint retrieves all existing plans.
      operationId: findAllPlans
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansPaginated'
          description: Plans
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all plans
      tags:
      - plans
    post:
      description: This endpoint creates a plan with subscription and usage-based
        charges. It supports flexible billing cadence (in-advance or in-arrears) and
        allows for both recurring and metered charges.
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreateInput'
        description: Plan payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Plan created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a plan
      tags:
      - plans
  /plans/{code}:
    delete:
      description: This endpoint deletes a specific plan. Note that this plan could
        be associated with active subscriptions.
      operationId: destroyPlan
      parameters:
      - description: "The code of the plan. It serves as a unique identifier associated\
          \ with a particular plan. The code is typically used for internal or system-level\
          \ identification purposes, like assigning a subscription, for instance."
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: startup
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Plan deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete a plan
      tags:
      - plans
    get:
      description: This endpoint retrieves a specific plan.
      operationId: findPlan
      parameters:
      - description: "The code of the plan. It serves as a unique identifier associated\
          \ with a particular plan. The code is typically used for internal or system-level\
          \ identification purposes, like assigning a subscription, for instance."
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: startup
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Plan
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a plan
      tags:
      - plans
    put:
      description: This endpoint updates a specific plan with subscription and usage-based
        charges. It supports flexible billing cadence (in-advance or in-arrears) and
        allows for both recurring and metered charges.
      operationId: updatePlan
      parameters:
      - description: "The code of the plan. It serves as a unique identifier associated\
          \ with a particular plan. The code is typically used for internal or system-level\
          \ identification purposes, like assigning a subscription, for instance."
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: startup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpdateInput'
        description: Plan payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Plan updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a plan
      tags:
      - plans
  /subscriptions:
    get:
      description: This endpoint retrieves all active subscriptions.
      operationId: findAllSubscriptions
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: The customer external unique identifier (provided by your own
          application)
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      - description: The unique code representing the plan to be attached to the customer.
          This code must correspond to the code property of one of the active plans.
        explode: true
        in: query
        name: plan_code
        required: false
        schema:
          example: premium
          type: string
        style: form
      - description: "If the field is not defined, Lago will return only `active`\
          \ subscriptions. However, if you wish to fetch subscriptions by different\
          \ status you can define them in a status[] query param. Available filter\
          \ values: `pending`, `canceled`, `terminated`, `active`."
        explode: true
        in: query
        name: status
        required: false
        schema:
          example:
          - active
          - pending
          items:
            enum:
            - pending
            - canceled
            - terminated
            - active
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsPaginated'
          description: List of subscriptions
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: List all subscriptions
      tags:
      - subscriptions
    post:
      description: "This endpoint assigns a plan to a customer, creating or modifying\
        \ a subscription. Ideal for initial subscriptions or plan changes (upgrades/downgrades)."
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateInput'
        description: Subscription payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Assign a plan to a customer
      tags:
      - subscriptions
  /subscriptions/{external_id}:
    delete:
      description: This endpoint allows you to terminate a subscription.
      operationId: destroySubscription
      parameters:
      - description: External ID of the existing subscription
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      - description: "If the field is not defined, Lago will terminate only `active`\
          \ subscriptions. However, if you wish to cancel a `pending` subscription,\
          \ please ensure that you include `status=pending` in your request."
        explode: true
        in: query
        name: status
        required: false
        schema:
          example: pending
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription terminated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotAllowed'
          description: Not Allowed error
      summary: Terminate a subscription
      tags:
      - subscriptions
    get:
      description: This endpoint retrieves a specific subscription.
      operationId: findSubscription
      parameters:
      - description: External ID of the existing subscription
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a subscription
      tags:
      - subscriptions
    put:
      description: This endpoint allows you to update a subscription.
      operationId: updateSubscription
      parameters:
      - description: External ID of the existing subscription
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateInput'
        description: Update an existing subscription
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a subscription
      tags:
      - subscriptions
  /taxes:
    get:
      description: This endpoint retrieves all existing taxes representing a customizable
        tax rate applicable to either the organization or a specific customer.
      operationId: findAllTaxes
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                taxes:
                - lago_id: 41190609-391a-4368-9549-d4348a85a8cd
                  name: TVA
                  code: french_standard_vat
                  description: French standard VAT
                  rate: 20
                  applied_to_organization: true
                  customers_count: 0
                  created_at: 2023-07-06T14:35:58Z
                - lago_id: 2e034a10-6652-4daf-a600-b085184f93ad
                  name: TVA
                  code: french_reduced_vat
                  description: French reduce VAT
                  rate: 5
                  applied_to_organization: false
                  customers_count: 0
                  created_at: 2023-07-06T14:45:23Z
                meta:
                  current_page: 1
                  next_page: null
                  prev_page: null
                  total_pages: 1
                  total_count: 2
              schema:
                $ref: '#/components/schemas/TaxesPaginated'
          description: Taxes
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all taxes
      tags:
      - taxes
    post:
      description: This endpoint creates a new tax representing a customizable tax
        rate applicable to either the organization or a specific customer.
      operationId: createTax
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCreateInput'
        description: Tax creation payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
          description: Tax created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a tax
      tags:
      - taxes
  /taxes/{code}:
    delete:
      description: This endpoint is used to delete a tax.
      operationId: destroyTax
      parameters:
      - description: The code of the tax. It serves as a unique identifier associated
          with a particular tax. The code is typically used for internal or system-level
          identification purposes.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: french_standard_vat
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
          description: Tax deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Delete a tax
      tags:
      - taxes
    get:
      description: This endpoint retrieves an existing tax representing a customizable
        tax rate applicable to either the organization or a specific customer. The
        tax is identified by its unique code.
      operationId: findTax
      parameters:
      - description: The code of the tax. It serves as a unique identifier associated
          with a particular tax. The code is typically used for internal or system-level
          identification purposes.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: french_standard_vat
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
          description: Tax
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a Tax
      tags:
      - taxes
    put:
      description: This endpoint updates an existing tax representing a customizable
        tax rate applicable to either the organization or a specific customer.
      operationId: updateTax
      parameters:
      - description: The code of the tax. It serves as a unique identifier associated
          with a particular tax. The code is typically used for internal or system-level
          identification purposes.
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: french_standard_vat
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxUpdateInput'
        description: Tax update payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
          description: Tax updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a tax
      tags:
      - taxes
  /wallets:
    get:
      description: This endpoint is used to list all wallets with prepaid credits.
      operationId: findAllWallets
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: The customer external unique identifier (provided by your own
          application).
        explode: true
        in: query
        name: external_customer_id
        required: true
        schema:
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletsPaginated'
          description: Wallets
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all wallets
      tags:
      - wallets
    post:
      description: This endpoint is used to create a wallet with prepaid credits.
      operationId: createWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletCreateInput'
        description: Wallet payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallet created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a wallet
      tags:
      - wallets
  /wallets/{lago_id}:
    delete:
      description: This endpoint is used to terminate an existing wallet with prepaid
        credits.
      operationId: destroyWallet
      parameters:
      - description: Unique identifier assigned to the wallet within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the wallet’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallet terminated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotAllowed'
          description: Not Allowed error
      summary: Terminate a wallet
      tags:
      - wallets
    get:
      description: This endpoint is used to retrieve an existing wallet with prepaid
        credits.
      operationId: findWallet
      parameters:
      - description: Unique identifier assigned to the wallet within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the wallet’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallet
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a wallet
      tags:
      - wallets
    put:
      description: This endpoint is used to update an existing wallet with prepaid
        credits.
      operationId: updateWallet
      parameters:
      - description: Unique identifier assigned to the wallet within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the wallet’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletUpdateInput'
        description: Wallet update payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallet updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a wallet
      tags:
      - wallets
  /wallet_transactions:
    post:
      description: This endpoint is used to top-up an active wallet.
      operationId: createWalletTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletTransactionCreateInput'
        description: Wallet transaction payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTransactions'
          description: Wallet transaction created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Top up a wallet
      tags:
      - wallets
  /wallets/{lago_id}/wallet_transactions:
    get:
      description: This endpoint is used to list all wallet transactions.
      operationId: findAllWalletTransactions
      parameters:
      - description: Unique identifier assigned to the wallet within the Lago application.
          This ID is exclusively created by Lago and serves as a unique identifier
          for the wallet’s record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: The status of the wallet transaction. Possible values are `pending`
          or `settled`.
        explode: true
        in: query
        name: status
        required: false
        schema:
          example: pending
          type: string
        style: form
      - description: The transaction type of the wallet transaction. Possible values
          are `inbound` (increasing the wallet balance) or `outbound` (decreasing
          the wallet balance).
        explode: true
        in: query
        name: transaction_type
        required: false
        schema:
          example: inbound
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTransactionsPaginated'
          description: Wallet transactions
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: List all wallet transactions
      tags:
      - wallets
  /webhooks/public_key:
    get:
      description: This endpoint is used to retrieve the public key used to verify
        the webhooks signature
      operationId: fetchPublicKey
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: MEgCQQCo9+BpMRYQ/dL3DS2CyJxRF+j6ctbT3/Qp84+KeFhnii7NT7fELilKUSnxS30WAvQCCo2yU1orfgqr41mM70MBAgMBAAE=
                type: string
          description: Public key
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: Retrieve webhook public key
      tags:
      - webhooks
  /webhook_endpoints:
    get:
      description: This endpoint is used to list all webhook endpoints.
      operationId: findAllWebhookEndpoints
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: Number of records per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpointsPaginated'
          description: WebhookEndpoints
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
      summary: List all webhook endpoints
      tags:
      - webhook_endpoints
    post:
      description: This endpoint is used to create a webhook endpoint.
      operationId: createWebhookEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpointCreateInput'
        description: Webhook Endpoint payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: Webhook Endpoint created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a webhook_endpoint
      tags:
      - webhook_endpoints
  /webhook_endpoints/{lago_id}:
    delete:
      description: This endpoint is used to delete an existing webhook endpoint.
      operationId: destroyWebhookEndpoint
      parameters:
      - description: Unique identifier assigned to the webhook endpoint within the
          Lago application. This ID is exclusively created by Lago and serves as a
          unique identifier for the webhook endpoint's record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: Webhook Endpoint deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotAllowed'
          description: Not Allowed error
      summary: Delete a webhook endpoint
      tags:
      - webhook_endpoints
    get:
      description: This endpoint is used to retrieve an existing webhook endpoint.
      operationId: findWebhookEndpoint
      parameters:
      - description: Unique identifier assigned to the webhook endpoint within the
          Lago application. This ID is exclusively created by Lago and serves as a
          unique identifier for the webhook endpoint's record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: WebhookEndpoint
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
      summary: Retrieve a webhook endpoint
      tags:
      - webhook_endpoints
    put:
      description: This endpoint is used to update an existing webhook endpoint.
      operationId: updateWebhookEndpoint
      parameters:
      - description: Unique identifier assigned to the webhook endpoint within the
          Lago application. This ID is exclusively created by Lago and serves as a
          unique identifier for the webhook endpoint's record within the Lago system.
        explode: false
        in: path
        name: lago_id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpointUpdateInput'
        description: Webhook Endpoint update payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: Webhook Endpoint updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update a webhook endpoint
      tags:
      - webhook_endpoints
components:
  parameters:
    external_customer_id:
      description: Unique identifier assigned to the customer in your application.
      explode: true
      in: query
      name: external_customer_id
      required: false
      schema:
        example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        type: string
      style: form
    external_subscription_id:
      description: External subscription ID
      explode: true
      in: query
      name: external_subscription_id
      required: false
      schema:
        example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        type: string
      style: form
    lago_invoice_id:
      description: Unique identifier assigned to the invoice within the Lago application.
        This ID is exclusively created by Lago and serves as a unique identifier for
        the invoice’s record within the Lago system.
      explode: false
      in: path
      name: lago_id
      required: true
      schema:
        example: 1a901a90-1a90-1a90-1a90-1a901a901a90
        format: uuid
        type: string
      style: simple
    page:
      description: Page number.
      explode: true
      in: query
      name: page
      required: false
      schema:
        example: 1
        type: integer
      style: form
    per_page:
      description: Number of records per page.
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        example: 20
        type: integer
      style: form
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorBadRequest'
      description: Bad Request error
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorForbidden'
      description: Forbidden
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorUnauthorized'
      description: Unauthorized error
    NotAllowed:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorNotAllowed'
      description: Not Allowed error
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorNotFound'
      description: Not Found error
    UnprocessableEntity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorUnprocessableEntity'
      description: Unprocessable entity error
  schemas:
    AddOnBaseInput:
      example:
        tax_codes:
        - french_standard_vat
        code: setup_fee
        invoice_display_name: Setup Fee (SF1)
        amount_cents: 50000
        amount_currency: ""
        name: Setup Fee
        description: Implementation fee for new customers.
      properties:
        name:
          description: The name of the add-on.
          example: Setup Fee
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup Fee (SF1)
          type: string
        code:
          description: Unique code used to identify the add-on.
          example: setup_fee
          type: string
        amount_cents:
          description: "The cost of the add-on in cents, excluding any applicable\
            \ taxes, that is billed to a customer. By creating a one-off invoice,\
            \ you will be able to override this value."
          example: 50000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the add-on.
            example: USD
        description:
          description: The description of the add-on.
          example: Implementation fee for new customers.
          nullable: true
          type: string
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
      type: object
    AddOnCreateInput:
      example:
        add_on: null
      properties:
        add_on:
          $ref: '#/components/schemas/AddOnCreateInput_add_on'
      required:
      - add_on
      type: object
    AddOnObject:
      example:
        code: setup_fee
        invoice_display_name: Setup Fee (SF1)
        amount_cents: 50000
        amount_currency: ""
        name: Setup Fee
        description: Implementation fee for new customers.
        created_at: 2022-04-29T08:59:51Z
        taxes:
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          description: "Unique identifier of the add-on, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: The name of the add-on.
          example: Setup Fee
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup Fee (SF1)
          type: string
        code:
          description: Unique code used to identify the add-on.
          example: setup_fee
          type: string
        amount_cents:
          description: "The cost of the add-on in cents, excluding any applicable\
            \ taxes, that is billed to a customer. By creating a one-off invoice,\
            \ you will be able to override this value."
          example: 50000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the add-on.
            example: USD
        description:
          description: The description of the add-on.
          example: Implementation fee for new customers.
          nullable: true
          type: string
        created_at:
          description: The date and time when the add-on was created. It is expressed
            in UTC format according to the ISO 8601 datetime standard. This field
            provides the timestamp for the exact moment when the add-on was initially
            created.
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        taxes:
          description: All taxes applied to the add-on.
          items:
            $ref: '#/components/schemas/TaxObject'
          type: array
      required:
      - amount_cents
      - amount_currency
      - code
      - created_at
      - lago_id
      - name
      type: object
    AddOn:
      example:
        add_on:
          code: setup_fee
          invoice_display_name: Setup Fee (SF1)
          amount_cents: 50000
          amount_currency: ""
          name: Setup Fee
          description: Implementation fee for new customers.
          created_at: 2022-04-29T08:59:51Z
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        add_on:
          $ref: '#/components/schemas/AddOnObject'
      required:
      - add_on
      type: object
    AddOnsPaginated:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        add_ons:
        - code: setup_fee
          invoice_display_name: Setup Fee (SF1)
          amount_cents: 50000
          amount_currency: ""
          name: Setup Fee
          description: Implementation fee for new customers.
          created_at: 2022-04-29T08:59:51Z
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - code: setup_fee
          invoice_display_name: Setup Fee (SF1)
          amount_cents: 50000
          amount_currency: ""
          name: Setup Fee
          description: Implementation fee for new customers.
          created_at: 2022-04-29T08:59:51Z
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        add_ons:
          items:
            $ref: '#/components/schemas/AddOnObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - add_ons
      - meta
      type: object
    AddOnUpdateInput:
      example:
        add_on:
          tax_codes:
          - french_standard_vat
          code: setup_fee
          invoice_display_name: Setup Fee (SF1)
          amount_cents: 50000
          amount_currency: ""
          name: Setup Fee
          description: Implementation fee for new customers.
      properties:
        add_on:
          $ref: '#/components/schemas/AddOnBaseInput'
      required:
      - add_on
      type: object
    ApiErrorBadRequest:
      properties:
        status:
          example: 400
          format: int32
          type: integer
        error:
          example: Bad request
          type: string
      required:
      - error
      - status
      type: object
    ApiErrorForbidden:
      properties:
        status:
          example: 403
          format: int32
          type: integer
        error:
          example: Forbidden
          type: string
        code:
          example: feature_unavailable
          type: string
      required:
      - code
      - error
      - status
      type: object
    ApiErrorUnauthorized:
      properties:
        status:
          example: 401
          format: int32
          type: integer
        error:
          example: Unauthorized
          type: string
      required:
      - error
      - status
      type: object
    ApiErrorUnprocessableEntity:
      properties:
        status:
          example: 422
          format: int32
          type: integer
        error:
          example: Unprocessable entity
          type: string
        code:
          example: validation_errors
          type: string
        error_details:
          type: object
      required:
      - code
      - error
      - error_details
      - status
      type: object
    ApiErrorNotAllowed:
      properties:
        status:
          example: 405
          format: int32
          type: integer
        error:
          example: Method Not Allowed
          type: string
        code:
          example: not_allowed
          type: string
      required:
      - code
      - error
      - status
      type: object
    ApiErrorNotFound:
      properties:
        status:
          example: 404
          format: int32
          type: integer
        error:
          example: Not Found
          type: string
        code:
          example: object_not_found
          type: string
      required:
      - code
      - error
      - status
      type: object
    AppliedCoupon:
      example:
        applied_coupon:
          coupon_code: startup_deal
          amount_cents: 2000
          frequency_duration_remaining: 1
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          amount_cents_remaining: 50
          lago_coupon_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          created_at: 2022-04-29T08:59:51Z
          coupon_name: Startup Deal
          frequency: recurring
          percentage_rate: percentage_rate
          amount_currency: ""
          frequency_duration: 3
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-04-29T08:59:51Z
          terminated_at: 2022-04-29T08:59:51Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
      properties:
        applied_coupon:
          $ref: '#/components/schemas/AppliedCouponObject'
      required:
      - applied_coupon
      type: object
    AppliedCouponInput:
      example:
        applied_coupon:
          coupon_code: startup_deal
          amount_cents: 2000
          percentage_rate: percentage_rate
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          frequency_duration: 3
          amount_currency: ""
          frequency: recurring
      properties:
        applied_coupon:
          $ref: '#/components/schemas/AppliedCouponInput_applied_coupon'
      required:
      - applied_coupon
      type: object
    AppliedCouponObject:
      example:
        coupon_code: startup_deal
        amount_cents: 2000
        frequency_duration_remaining: 1
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        amount_cents_remaining: 50
        lago_coupon_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        created_at: 2022-04-29T08:59:51Z
        coupon_name: Startup Deal
        frequency: recurring
        percentage_rate: percentage_rate
        amount_currency: ""
        frequency_duration: 3
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        expiration_at: 2022-04-29T08:59:51Z
        terminated_at: 2022-04-29T08:59:51Z
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        status: active
      properties:
        lago_id:
          description: "Unique identifier of the applied coupon, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_coupon_id:
          description: "Unique identifier of the coupon, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        coupon_code:
          description: Unique code used to identify the coupon.
          example: startup_deal
          type: string
        coupon_name:
          description: The name of the coupon.
          example: Startup Deal
          type: string
        lago_customer_id:
          description: "Unique identifier of the customer, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        status:
          description: The status of the coupon. Can be either `active` or `terminated`.
          enum:
          - active
          - terminated
          example: active
          type: string
        amount_cents:
          description: The amount of the coupon in cents. This field is required only
            for coupon with `fixed_amount` type.
          example: 2000
          nullable: true
          type: integer
        amount_cents_remaining:
          description: The remaining amount in cents for a `fixed_amount` coupon with
            a frequency set to `once`. This field indicates the remaining balance
            or value that can still be utilized from the coupon.
          example: 50
          nullable: true
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the coupon. This field is required only for
              coupon with `fixed_amount` type.
            example: EUR
            nullable: true
        percentage_rate:
          description: The percentage rate of the coupon. This field is required only
            for coupons with a `percentage` coupon type.
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
          example: null
        frequency:
          description: |-
            The type of frequency for the coupon. It can have three possible values: `once`, `recurring` or `forever`.

            - If set to `once`, the coupon is applicable only for a single use.
            - If set to `recurring`, the coupon can be used multiple times for recurring billing periods.
            - If set to `forever`, the coupon has unlimited usage and can be applied indefinitely.
          enum:
          - once
          - recurring
          example: recurring
          type: string
        frequency_duration:
          description: Specifies the number of billing periods to which the coupon
            applies. This field is required only for coupons with a `recurring` frequency
            type
          example: 3
          nullable: true
          type: integer
        frequency_duration_remaining:
          description: The remaining number of billing periods to which the coupon
            is applicable. This field determines the remaining usage or availability
            of the coupon based on the remaining billing periods.
          example: 1
          nullable: true
          type: integer
        expiration_at:
          description: "The date and time after which the coupon will stop applying\
            \ to customer's invoices. Once the expiration date is reached, the coupon\
            \ will no longer be applicable, and any further invoices generated for\
            \ the customer will not include the coupon discount."
          example: 2022-04-29T08:59:51Z
          format: date-time
          nullable: true
          type: string
        created_at:
          description: The date and time when the coupon was assigned to a customer.
            It is expressed in UTC format according to the ISO 8601 datetime standard.
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        terminated_at:
          description: This field indicates the specific moment when the coupon amount
            is fully utilized or when the coupon is removed from the customer's coupon
            list. It is expressed in UTC format according to the ISO 8601 datetime
            standard.
          example: 2022-04-29T08:59:51Z
          format: date-time
          nullable: true
          type: string
      required:
      - coupon_code
      - coupon_name
      - created_at
      - external_customer_id
      - frequency
      - lago_coupon_id
      - lago_customer_id
      - lago_id
      - status
      type: object
    AppliedCouponObjectExtended:
      allOf:
      - $ref: '#/components/schemas/AppliedCouponObject'
      - properties:
          credits:
            items:
              $ref: '#/components/schemas/CreditObject'
            type: array
        required:
        - credits
        type: object
    AppliedCouponsPaginated:
      example:
        applied_coupons:
        - null
        - null
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
      properties:
        applied_coupons:
          items:
            $ref: '#/components/schemas/AppliedCouponObjectExtended'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - applied_coupons
      - meta
      type: object
    BaseAppliedTax:
      properties:
        lago_id:
          description: "Unique identifier of the applied tax, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_tax_id:
          description: "Unique identifier of the tax, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        tax_name:
          description: Name of the tax.
          example: TVA
          type: string
        tax_code:
          description: Unique code used to identify the tax associated with the API
            request.
          example: french_standard_vat
          type: string
        tax_rate:
          description: The percentage rate of the tax
          example: 20
          type: number
        tax_description:
          description: Internal description of the taxe
          example: French standard VAT
          type: string
        amount_cents:
          description: Amount of the tax
          example: 2000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: Currency of the tax
            example: USD
        created_at:
          description: The date and time when the applied tax was created. It is expressed
            in UTC format according to the ISO 8601 datetime standard. This field
            provides the timestamp for the exact moment when the applied tax was initially
            created.
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      type: object
    BillableMetric:
      example:
        billable_metric:
          code: storage
          recurring: false
          description: GB of storage used in my application
          created_at: 2022-09-14T16:35:31Z
          draft_invoices_count: 10
          weighted_interval: seconds
          field_name: gb
          aggregation_type: sum_agg
          plans_count: 4
          name: Storage
          active_subscriptions_count: 4
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group:
            values:
            - us-east-1
            - us-east-2
            - eu-west-1
            key: region
      properties:
        billable_metric:
          $ref: '#/components/schemas/BillableMetricObject'
      required:
      - billable_metric
      type: object
    BillableMetricObject:
      example:
        code: storage
        recurring: false
        description: GB of storage used in my application
        created_at: 2022-09-14T16:35:31Z
        draft_invoices_count: 10
        weighted_interval: seconds
        field_name: gb
        aggregation_type: sum_agg
        plans_count: 4
        name: Storage
        active_subscriptions_count: 4
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        group:
          values:
          - us-east-1
          - us-east-2
          - eu-west-1
          key: region
      properties:
        lago_id:
          description: Unique identifier of the billable metric created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: Name of the billable metric.
          example: Storage
          type: string
        code:
          description: Unique code used to identify the billable metric associated
            with the API request. This code associates each event with the correct
            metric.
          example: storage
          type: string
        description:
          description: Internal description of the billable metric.
          example: GB of storage used in my application
          nullable: true
          type: string
        recurring:
          description: |-
            Defines if the billable metric is persisted billing period over billing period.

            - If set to `true`: the accumulated number of units calculated from the previous billing period is persisted to the next billing period.
            - If set to `false`: the accumulated number of units is reset to 0 at the end of the billing period.
            - If not defined in the request, default value is `false`.
          example: false
          type: boolean
        created_at:
          description: Creation date of the billable metric.
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        field_name:
          description: Property of the billable metric used for aggregating usage
            data. This field is not required for `count_agg`.
          example: gb
          nullable: true
          type: string
        aggregation_type:
          description: Aggregation method used to compute usage for this billable
            metric.
          enum:
          - count_agg
          - sum_agg
          - max_agg
          - unique_count_agg
          - weighted_sum_agg
          - latest_agg
          example: sum_agg
          type: string
        weighted_interval:
          description: "Parameter exclusively utilized in conjunction with the `weighted_sum`\
            \ aggregation type. It serves to adjust the aggregation result by assigning\
            \ weights and proration to the result based on time intervals. When this\
            \ field is not provided, the default time interval is assumed to be in\
            \ `seconds`."
          enum:
          - seconds
          example: seconds
          nullable: true
          type: string
        group:
          $ref: '#/components/schemas/BillableMetricGroup'
        active_subscriptions_count:
          description: Number of active subscriptions using this billable metric.
          example: 4
          type: integer
        draft_invoices_count:
          description: Number of draft invoices for which this billable metric is
            listed as an invoice item.
          example: 10
          type: integer
        plans_count:
          description: Number of plans using this billable metric.
          example: 4
          type: integer
      required:
      - active_subscriptions_count
      - aggregation_type
      - code
      - created_at
      - draft_invoices_count
      - lago_id
      - name
      - plans_count
      - recurring
      type: object
    BillableMetricBaseInput:
      example:
        aggregation_type: sum_agg
        code: storage
        recurring: false
        name: Storage
        description: GB of storage used in my application
        weighted_interval: seconds
        field_name: gb
        group:
          values:
          - us-east-1
          - us-east-2
          - eu-west-1
          key: region
      properties:
        name:
          description: Name of the billable metric.
          example: Storage
          type: string
        code:
          description: Unique code used to identify the billable metric associated
            with the API request. This code associates each event with the correct
            metric.
          example: storage
          type: string
        description:
          description: Internal description of the billable metric.
          example: GB of storage used in my application
          nullable: true
          type: string
        recurring:
          description: |-
            Defines if the billable metric is persisted billing period over billing period.

            - If set to `true`: the accumulated number of units calculated from the previous billing period is persisted to the next billing period.
            - If set to `false`: the accumulated number of units is reset to 0 at the end of the billing period.
            - If not defined in the request, default value is `false`.
          example: false
          type: boolean
        field_name:
          description: Property of the billable metric used for aggregating usage
            data. This field is not required for `count_agg`.
          example: gb
          nullable: true
          type: string
        aggregation_type:
          description: Aggregation method used to compute usage for this billable
            metric.
          enum:
          - count_agg
          - sum_agg
          - max_agg
          - unique_count_agg
          - weighted_sum_agg
          - latest_agg
          example: sum_agg
          type: string
        weighted_interval:
          description: "Parameter exclusively utilized in conjunction with the `weighted_sum`\
            \ aggregation type. It serves to adjust the aggregation result by assigning\
            \ weights and proration to the result based on time intervals. When this\
            \ field is not provided, the default time interval is assumed to be in\
            \ `seconds`."
          enum:
          - seconds
          example: seconds
          nullable: true
          type: string
        group:
          $ref: '#/components/schemas/BillableMetricGroup'
      type: object
    BillableMetricCreateInput:
      example:
        billable_metric: null
      properties:
        billable_metric:
          $ref: '#/components/schemas/BillableMetricCreateInput_billable_metric'
      required:
      - billable_metric
      type: object
    BillableMetricUpdateInput:
      example:
        billable_metric:
          aggregation_type: sum_agg
          code: storage
          recurring: false
          name: Storage
          description: GB of storage used in my application
          weighted_interval: seconds
          field_name: gb
          group:
            values:
            - us-east-1
            - us-east-2
            - eu-west-1
            key: region
      properties:
        billable_metric:
          $ref: '#/components/schemas/BillableMetricBaseInput'
      required:
      - billable_metric
      type: object
    BillableMetricGroup:
      description: "Group with one or two dimensions, used to apply differentiated\
        \ pricing based on additional properties of the billable metric."
      example:
        values:
        - us-east-1
        - us-east-2
        - eu-west-1
        key: region
      properties:
        key:
          description: Name of the event property used to group values.
          example: region
          type: string
        values:
          description: Array of strings or objects representing all possible values.
          example:
          - us-east-1
          - us-east-2
          - eu-west-1
          items:
            $ref: '#/components/schemas/BillableMetricGroup_values_inner'
          type: array
      required:
      - key
      - values
      type: object
    BillableMetricsPaginated:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        billable_metrics:
        - code: storage
          recurring: false
          description: GB of storage used in my application
          created_at: 2022-09-14T16:35:31Z
          draft_invoices_count: 10
          weighted_interval: seconds
          field_name: gb
          aggregation_type: sum_agg
          plans_count: 4
          name: Storage
          active_subscriptions_count: 4
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group:
            values:
            - us-east-1
            - us-east-2
            - eu-west-1
            key: region
        - code: storage
          recurring: false
          description: GB of storage used in my application
          created_at: 2022-09-14T16:35:31Z
          draft_invoices_count: 10
          weighted_interval: seconds
          field_name: gb
          aggregation_type: sum_agg
          plans_count: 4
          name: Storage
          active_subscriptions_count: 4
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group:
            values:
            - us-east-1
            - us-east-2
            - eu-west-1
            key: region
      properties:
        billable_metrics:
          items:
            $ref: '#/components/schemas/BillableMetricObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - billable_metrics
      - meta
      type: object
    ChargeObject:
      properties:
        lago_id:
          description: "Unique identifier of charge, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_billable_metric_id:
          description: Unique identifier of the billable metric created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        billable_metric_code:
          description: Unique code identifying a billable metric.
          example: requests
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup
          type: string
        created_at:
          description: The date and time when the charge was created. It is expressed
            in UTC format according to the ISO 8601 datetime standard.
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        charge_model:
          description: "Specifies the pricing model used for the calculation of the\
            \ final fee. It can be `standard`, `graduated`, `graduated_percentage`,\
            \ `package`, `percentage` or `volume`."
          enum:
          - standard
          - graduated
          - graduated_percentage
          - package
          - percentage
          - volume
          type: string
        pay_in_advance:
          description: "This field determines the billing timing for this specific\
            \ usage-based charge. When set to `true`, the charge is due and invoiced\
            \ immediately. Conversely, when set to `false`, the charge is due and\
            \ invoiced at the end of each billing period."
          example: true
          type: boolean
        invoiceable:
          description: "This field specifies whether the charge should be included\
            \ in a proper invoice. If set to `false`, no invoice will be issued for\
            \ this charge. You can only set it to `false` when `pay_in_advance` is\
            \ `true`."
          example: true
          type: boolean
        prorated:
          description: |-
            Specifies whether a charge is prorated based on the remaining number of days in the billing period or billed fully.

            - If set to `true`, the charge is prorated based on the remaining days in the current billing period.
            - If set to `false`, the charge is billed in full.
            - If not defined in the request, default value is `false`.
          example: false
          type: boolean
        min_amount_cents:
          description: "The minimum spending amount required for the charge, measured\
            \ in cents and excluding any applicable taxes. It indicates the minimum\
            \ amount that needs to be charged for each billing period."
          example: 1200
          type: integer
        properties:
          $ref: '#/components/schemas/ChargeObject_properties'
        group_properties:
          description: "All charge information, sorted by groups."
          items:
            $ref: '#/components/schemas/GroupPropertiesObject'
          type: array
        taxes:
          description: All taxes applied to the charge.
          items:
            $ref: '#/components/schemas/TaxObject'
          type: array
      required:
      - billable_metric_code
      - charge_model
      - created_at
      - lago_billable_metric_id
      - lago_id
      type: object
    ChargeProperties:
      properties:
        graduated_ranges:
          description: "Graduated ranges, sorted from bottom to top tiers, used for\
            \ a `graduated` charge model."
          items:
            $ref: '#/components/schemas/ChargeProperties_graduated_ranges_inner'
          type: array
        graduated_percentage_ranges:
          description: "Graduated percentage ranges, sorted from bottom to top tiers,\
            \ used for a `graduated_percentage` charge model."
          items:
            $ref: '#/components/schemas/ChargeProperties_graduated_percentage_ranges_inner'
          type: array
        amount:
          description: |-
            - The unit price, excluding tax, for a `standard` charge model. It is expressed as a decimal value.
            - The amount, excluding tax, for a complete set of units in a `package` charge model. It is expressed as a decimal value.
          example: "30"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        free_units:
          description: The quantity of units that are provided free of charge for
            each billing period in a `package` charge model. This field specifies
            the number of units that customers can use without incurring any additional
            cost during each billing cycle.
          example: 100
          type: integer
        package_size:
          description: The quantity of units included in each pack or set for a `package`
            charge model. It indicates the number of units that are bundled together
            as a single package or set within the pricing structure.
          example: 1000
          type: integer
        rate:
          description: The percentage rate that is applied to the amount of each transaction
            for a `percentage` charge model. It is expressed as a decimal value.
          example: "1"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        fixed_amount:
          description: The fixed fee that is applied to each transaction for a `percentage`
            charge model. It is expressed as a decimal value.
          example: "0.5"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        free_units_per_events:
          description: The count of transactions that are not impacted by the `percentage`
            rate and fixed fee in a percentage charge model. This field indicates
            the number of transactions that are exempt from the calculation of charges
            based on the specified percentage rate and fixed fee.
          example: 5
          nullable: true
          type: integer
        free_units_per_total_aggregation:
          description: The transaction amount that is not impacted by the `percentage`
            rate and fixed fee in a percentage charge model. This field indicates
            the portion of the transaction amount that is exempt from the calculation
            of charges based on the specified percentage rate and fixed fee.
          example: "500"
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        per_transaction_max_amount:
          description: Specifies the maximum allowable spending for a single transaction.
            Working as a transaction cap.
          example: "3.75"
          format: "^[0-9]+.?[0-9]*$"
          nullable: true
          type: string
        per_transaction_min_amount:
          description: Specifies the minimum allowable spending for a single transaction.
            Working as a transaction floor.
          example: "1.75"
          format: "^[0-9]+.?[0-9]*$"
          nullable: true
          type: string
        volume_ranges:
          description: "Volume ranges, sorted from bottom to top tiers, used for a\
            \ `volume` charge model."
          items:
            $ref: '#/components/schemas/ChargeProperties_volume_ranges_inner'
          type: array
      type: object
    Country:
      enum:
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AS
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CC
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CU
      - CV
      - CW
      - CX
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FM
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HM
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IR
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KP
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MH
      - MK
      - ML
      - MM
      - MN
      - MO
      - MP
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NF
      - NG
      - NI
      - NL
      - "NO"
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PW
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SY
      - SZ
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - UM
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VI
      - VN
      - VU
      - WF
      - WS
      - YE
      - YT
      - ZA
      - ZM
      - ZW
      example: US
      type: string
    Coupon:
      example:
        coupon:
          limited_plans: true
          code: startup_deal
          limited_billable_metrics: false
          amount_cents: 5000
          description: I am a coupon description
          created_at: 2022-04-29T08:59:51Z
          reusable: true
          frequency: recurring
          plan_codes:
          - startup_plan
          billable_metric_codes: []
          percentage_rate: percentage_rate
          amount_currency: ""
          frequency_duration: 6
          name: Startup Deal
          expiration: time_limit
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-08-08T23:59:59Z
          coupon_type: fixed_amount
          terminated_at: 2022-08-08T23:59:59Z
      properties:
        coupon:
          $ref: '#/components/schemas/CouponObject'
      required:
      - coupon
      type: object
    CouponBaseInput:
      properties:
        name:
          description: The name of the coupon.
          example: Startup Deal
          type: string
        code:
          description: Unique code used to identify the coupon.
          example: startup_deal
          type: string
        description:
          description: Description of the coupon.
          example: I am a coupon description
          nullable: true
          type: string
        coupon_type:
          description: |-
            The type of the coupon. It can have two possible values: `fixed_amount` or `percentage`.

            - If set to `fixed_amount`, the coupon represents a fixed amount discount.
            - If set to `percentage`, the coupon represents a percentage-based discount.
          enum:
          - fixed_amount
          - percentage
          example: fixed_amount
          type: string
        amount_cents:
          description: The amount of the coupon in cents. This field is required only
            for coupon with `fixed_amount` type.
          example: 5000
          nullable: true
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the coupon. This field is required only for
              coupon with `fixed_amount` type.
            example: USD
            nullable: true
        reusable:
          description: "Indicates whether the coupon can be reused or not. If set\
            \ to `true`, the coupon is reusable, meaning it can be applied multiple\
            \ times to the same customer. If set to `false`, the coupon can only be\
            \ used once and is not reusable. If not specified, this field is set to\
            \ `true` by default."
          example: false
          type: boolean
        percentage_rate:
          description: The percentage rate of the coupon. This field is required only
            for coupons with a `percentage` coupon type.
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
          example: null
        frequency:
          description: |-
            The type of frequency for the coupon. It can have three possible values: `once`, `recurring` or `forever`.

            - If set to `once`, the coupon is applicable only for a single use.
            - If set to `recurring`, the coupon can be used multiple times for recurring billing periods.
            - If set to `forever`, the coupon has unlimited usage and can be applied indefinitely.
          enum:
          - once
          - recurring
          example: recurring
          type: string
        frequency_duration:
          description: Specifies the number of billing periods to which the coupon
            applies. This field is required only for coupons with a `recurring` frequency
            type
          example: 6
          nullable: true
          type: integer
        expiration:
          description: |-
            Specifies the type of expiration for the coupon. It can have two possible values: `time_limit` or `no_expiration`.

            - If set to `time_limit`, the coupon has an expiration based on a specified time limit.
            - If set to `no_expiration`, the coupon does not have an expiration date and remains valid indefinitely.
          enum:
          - no_expiration
          - time_limit
          example: time_limit
          type: string
        expiration_at:
          description: The expiration date and time of the coupon. This field is required
            only for coupons with `expiration` set to `time_limit`. The expiration
            date and time should be specified in UTC format according to the ISO 8601
            datetime standard. It indicates the exact moment when the coupon will
            expire and is no longer valid.
          example: 2022-08-08T23:59:59Z
          format: date-time
          nullable: true
          type: string
        applies_to:
          $ref: '#/components/schemas/CouponBaseInput_applies_to'
      type: object
    CouponCreateInput:
      example:
        coupon: null
      properties:
        coupon:
          $ref: '#/components/schemas/CouponCreateInput_coupon'
      required:
      - coupon
      type: object
    CouponObject:
      example:
        limited_plans: true
        code: startup_deal
        limited_billable_metrics: false
        amount_cents: 5000
        description: I am a coupon description
        created_at: 2022-04-29T08:59:51Z
        reusable: true
        frequency: recurring
        plan_codes:
        - startup_plan
        billable_metric_codes: []
        percentage_rate: percentage_rate
        amount_currency: ""
        frequency_duration: 6
        name: Startup Deal
        expiration: time_limit
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        expiration_at: 2022-08-08T23:59:59Z
        coupon_type: fixed_amount
        terminated_at: 2022-08-08T23:59:59Z
      properties:
        lago_id:
          description: "Unique identifier of the coupon, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: The name of the coupon.
          example: Startup Deal
          type: string
        code:
          description: Unique code used to identify the coupon.
          example: startup_deal
          type: string
        description:
          description: Description of the coupon.
          example: I am a coupon description
          nullable: true
          type: string
        coupon_type:
          description: |-
            The type of the coupon. It can have two possible values: `fixed_amount` or `percentage`.

            - If set to `fixed_amount`, the coupon represents a fixed amount discount.
            - If set to `percentage`, the coupon represents a percentage-based discount.
          enum:
          - fixed_amount
          - percentage
          example: fixed_amount
          type: string
        amount_cents:
          description: The amount of the coupon in cents. This field is required only
            for coupon with `fixed_amount` type.
          example: 5000
          nullable: true
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the coupon. This field is required only for
              coupon with `fixed_amount` type.
            example: USD
            nullable: true
        reusable:
          description: "Indicates whether the coupon can be reused or not. If set\
            \ to `true`, the coupon is reusable, meaning it can be applied multiple\
            \ times to the same customer. If set to `false`, the coupon can only be\
            \ used once and is not reusable. If not specified, this field is set to\
            \ `true` by default."
          example: true
          type: boolean
        limited_plans:
          description: The coupon is limited to specific plans. The possible values
            can be `true` or `false`.
          example: true
          type: boolean
        plan_codes:
          description: "An array of plan codes to which the coupon is applicable.\
            \ By specifying the plan codes in this field, you can restrict the coupon's\
            \ usage to specific plans only."
          example:
          - startup_plan
          items:
            type: string
          type: array
        limited_billable_metrics:
          description: The coupon is limited to specific billable metrics. The possible
            values can be `true` or `false`.
          example: false
          type: boolean
        billable_metric_codes:
          description: "An array of billable metric codes to which the coupon is applicable.\
            \ By specifying the billable metric codes in this field, you can restrict\
            \ the coupon's usage to specific metrics only."
          example: []
          items:
            type: string
          type: array
        percentage_rate:
          description: The percentage rate of the coupon. This field is required only
            for coupons with a `percentage` coupon type.
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
          example: null
        frequency:
          description: |-
            The type of frequency for the coupon. It can have three possible values: `once`, `recurring`, or `forever`.

            - If set to `once`, the coupon is applicable only for a single use.
            - If set to `recurring`, the coupon can be used multiple times for recurring billing periods.
            - If set to `forever`, the coupon has unlimited usage and can be applied indefinitely.
          enum:
          - once
          - recurring
          example: recurring
          type: string
        frequency_duration:
          description: Specifies the number of billing periods to which the coupon
            applies. This field is required only for coupons with a `recurring` frequency
            type
          example: 6
          nullable: true
          type: integer
        expiration:
          description: |-
            Specifies the type of expiration for the coupon. It can have two possible values: `time_limit` or `no_expiration`.

            - If set to `time_limit`, the coupon has an expiration based on a specified time limit.
            - If set to `no_expiration`, the coupon does not have an expiration date and remains valid indefinitely.
          enum:
          - no_expiration
          - time_limit
          example: time_limit
          type: string
        expiration_at:
          description: The expiration date and time of the coupon. This field is required
            only for coupons with `expiration` set to `time_limit`. The expiration
            date and time should be specified in UTC format according to the ISO 8601
            datetime standard. It indicates the exact moment when the coupon will
            expire and is no longer valid.
          example: 2022-08-08T23:59:59Z
          format: date-time
          nullable: true
          type: string
        created_at:
          description: The date and time when the coupon was created. It is expressed
            in UTC format according to the ISO 8601 datetime standard. This field
            provides the timestamp for the exact moment when the coupon was initially
            created.
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        terminated_at:
          description: "This field indicates if the coupon has been terminated and\
            \ is no longer usable. If it's not null, it won't be removed for existing\
            \ customers using it, but it prevents the coupon from being applied in\
            \ the future."
          example: 2022-08-08T23:59:59Z
          format: date-time
          type: string
      required:
      - code
      - coupon_type
      - created_at
      - expiration
      - frequency
      - lago_id
      - limited_billable_metrics
      - limited_plans
      - name
      - reusable
      type: object
    CouponsPaginated:
      example:
        coupons:
        - limited_plans: true
          code: startup_deal
          limited_billable_metrics: false
          amount_cents: 5000
          description: I am a coupon description
          created_at: 2022-04-29T08:59:51Z
          reusable: true
          frequency: recurring
          plan_codes:
          - startup_plan
          billable_metric_codes: []
          percentage_rate: percentage_rate
          amount_currency: ""
          frequency_duration: 6
          name: Startup Deal
          expiration: time_limit
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-08-08T23:59:59Z
          coupon_type: fixed_amount
          terminated_at: 2022-08-08T23:59:59Z
        - limited_plans: true
          code: startup_deal
          limited_billable_metrics: false
          amount_cents: 5000
          description: I am a coupon description
          created_at: 2022-04-29T08:59:51Z
          reusable: true
          frequency: recurring
          plan_codes:
          - startup_plan
          billable_metric_codes: []
          percentage_rate: percentage_rate
          amount_currency: ""
          frequency_duration: 6
          name: Startup Deal
          expiration: time_limit
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-08-08T23:59:59Z
          coupon_type: fixed_amount
          terminated_at: 2022-08-08T23:59:59Z
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
      properties:
        coupons:
          items:
            $ref: '#/components/schemas/CouponObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - coupons
      - meta
      type: object
    CouponUpdateInput:
      example:
        coupon: ""
      properties:
        coupon:
          allOf:
          - $ref: '#/components/schemas/CouponBaseInput'
      required:
      - coupon
      type: object
    CreditNoteEstimateInput:
      example:
        credit_note:
          invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          items:
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 10
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            amount_cents: 5
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteEstimateInput_credit_note'
      required:
      - credit_note
      type: object
    CreditNoteEstimated:
      example:
        estimated_credit_note:
          taxes_amount_cents: 20
          taxes_rate: 20
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          max_creditable_amount_cents: 100
          max_refundable_amount_cents: 0
          currency: ""
          applied_taxes:
          - tax_code: french_standard_vat
            amount_cents: 2000
            tax_name: TVA
            amount_currency: ""
            lago_tax_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            tax_description: French standard VAT
            base_amount_cents: 100
            tax_rate: 20
          - tax_code: french_standard_vat
            amount_cents: 2000
            tax_name: TVA
            amount_currency: ""
            lago_tax_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            tax_description: French standard VAT
            base_amount_cents: 100
            tax_rate: 20
          sub_total_excluding_taxes_amount_cents: 100
          invoice_number: LAG-1234
          items:
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 100
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 100
          coupons_adjustment_amount_cents: 20
      properties:
        estimated_credit_note:
          $ref: '#/components/schemas/CreditNoteEstimated_estimated_credit_note'
      required:
      - estimated_credit_note
      type: object
    CreditObject:
      properties:
        lago_id:
          description: Unique identifier assigned to the credit within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the credit’s item record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        amount_cents:
          description: "The amount of credit associated with the invoice, expressed\
            \ in cents."
          example: 1200
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the credit.
            example: EUR
        before_taxes:
          description: Indicates whether the credit is applied on the amount before
            taxes (coupons) or after taxes (credit notes). This flag helps determine
            the order in which credits are applied to the invoice calculation
          example: false
          type: boolean
        item:
          $ref: '#/components/schemas/CreditObject_item'
        invoice:
          $ref: '#/components/schemas/CreditObject_invoice'
      required:
      - amount_cents
      - amount_currency
      - before_taxes
      - invoice
      - item
      - lago_id
      type: object
    CreditNote:
      example:
        credit_note:
          reason: other
          taxes_amount_cents: 20
          file_url: https://getlago.com/credit_note/file
          refund_status: pending
          taxes_rate: 20
          sequential_id: 2
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          issuing_date: 2022-12-06T00:00:00.000+00:00
          description: Free text
          created_at: 2022-09-14T16:35:31Z
          sub_total_excluding_taxes_amount_cents: 100
          coupons_adjustment_amount_cents: 20
          total_amount_cents: 120
          number: LAG-1234-CN2
          credit_status: available
          credit_amount_cents: 100
          balance_amount_cents: 100
          updated_at: 2022-09-14T16:35:31Z
          refund_amount_cents: 0
          currency: ""
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          applied_taxes:
          - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            base_amount_cents: 100
          - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            base_amount_cents: 100
          invoice_number: LAG-1234
          items:
          - amount_cents: 100
            amount_currency: ""
            fee: null
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 100
            amount_currency: ""
            fee: null
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteObject'
      required:
      - credit_note
      type: object
    CreditNoteAppliedTaxObject:
      allOf:
      - $ref: '#/components/schemas/BaseAppliedTax'
      example:
        lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        base_amount_cents: 100
      properties:
        lago_credit_note_id:
          description: "Unique identifier of the credit note, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        base_amount_cents:
          example: 100
          type: integer
      type: object
    CreditNoteItemObject:
      example:
        amount_cents: 100
        amount_currency: ""
        fee: null
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          description: "The credit note’s item unique identifier, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        amount_cents:
          description: "The credit note’s item amount, expressed in cents."
          example: 100
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The credit note’s item currency.
            example: EUR
        fee:
          $ref: '#/components/schemas/CreditNoteItemObject_fee'
      required:
      - amount_cents
      - amount_currency
      - fee
      - lago_id
      type: object
    CreditNoteObject:
      example:
        reason: other
        taxes_amount_cents: 20
        file_url: https://getlago.com/credit_note/file
        refund_status: pending
        taxes_rate: 20
        sequential_id: 2
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        issuing_date: 2022-12-06T00:00:00.000+00:00
        description: Free text
        created_at: 2022-09-14T16:35:31Z
        sub_total_excluding_taxes_amount_cents: 100
        coupons_adjustment_amount_cents: 20
        total_amount_cents: 120
        number: LAG-1234-CN2
        credit_status: available
        credit_amount_cents: 100
        balance_amount_cents: 100
        updated_at: 2022-09-14T16:35:31Z
        refund_amount_cents: 0
        currency: ""
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        applied_taxes:
        - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          base_amount_cents: 100
        - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          base_amount_cents: 100
        invoice_number: LAG-1234
        items:
        - amount_cents: 100
          amount_currency: ""
          fee: null
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - amount_cents: 100
          amount_currency: ""
          fee: null
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          description: "The credit note unique identifier, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        sequential_id:
          description: "The sequential identifier of the credit note, specifically\
            \ scoped on the associated invoice. It provides a unique numerical identifier\
            \ for the credit note within the context of the invoice."
          example: 2
          type: integer
        number:
          description: The credit note unique number.
          example: LAG-1234-CN2
          type: string
        lago_invoice_id:
          description: Unique identifier assigned to the invoice that the credit note
            belongs to
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        invoice_number:
          description: "The invoice unique number, related to the credit note."
          example: LAG-1234
          type: string
        issuing_date:
          description: The date of creation of the credit note. It follows the ISO
            8601 date format and provides the specific date when the credit note was
            created.
          example: 2022-12-06
          format: date
          type: string
        credit_status:
          description: |-
            The status of the credit portion of the credit note. It indicates the current state or condition of the credit amount associated with the credit note. The possible values for this field are:

            - `available`: this status indicates that an amount remains available for future usage. The credit can be applied towards future transactions or invoices.
            - `consumed`: this status indicates that the credit amount has been fully consumed. The remaining amount is 0, indicating that the credit has been utilized in its entirety.
            - `voided`: this status indicates that the remaining amount of the credit cannot be used any further. The credit has been voided and is no longer available for application or redemption.
          enum:
          - available
          - consumed
          - voided
          example: available
          nullable: true
          type: string
        refund_status:
          description: |-
            The status of the refund portion of the credit note. It indicates the current state or condition of the refund associated with the credit note. The possible values for this field are:

            - `pending`: this status indicates that the refund is pending execution. The refund request has been initiated but has not been processed or completed yet.
            - `succeeded`: this status indicates that the refund has been successfully executed. The refund amount has been processed and returned to the customer or the designated recipient.
            - `failed`: this status indicates that the refund failed to execute. The refund request encountered an error or unsuccessful processing, and the refund amount could not be returned.
          enum:
          - pending
          - succeeded
          - failed
          example: pending
          nullable: true
          type: string
        reason:
          description: |-
            The reason of the credit note creation.
            Possible values are `duplicated_charge`, `product_unsatisfactory`, `order_change`, `order_cancellation`, `fraudulent_charge` or `other`.
          enum:
          - duplicated_charge
          - product_unsatisfactory
          - order_change
          - order_cancellation
          - fraudulent_charge
          - other
          example: other
          type: string
        description:
          description: The description of the credit note.
          example: Free text
          nullable: true
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the credit note.
            example: EUR
        total_amount_cents:
          description: "The total amount of the credit note, expressed in cents."
          example: 120
          type: integer
        taxes_amount_cents:
          description: "The tax amount of the credit note, expressed in cents."
          example: 20
          type: integer
        taxes_rate:
          description: The tax rate associated with this specific credit note.
          example: 20
          type: number
        sub_total_excluding_taxes_amount_cents:
          description: "The subtotal of the credit note excluding any applicable taxes,\
            \ expressed in cents."
          example: 100
          type: integer
        balance_amount_cents:
          description: "The remaining credit note amount, expressed in cents."
          example: 100
          type: integer
        credit_amount_cents:
          description: "The credited amount of the credit note, expressed in cents."
          example: 100
          type: integer
        refund_amount_cents:
          description: "The refunded amount of the credit note, expressed in cents."
          example: 0
          type: integer
        coupons_adjustment_amount_cents:
          description: The pro-rated amount of the coupons applied to the source invoice.
          example: 20
          type: integer
        created_at:
          description: The date when the credit note was created. It is expressed
            in Coordinated Universal Time (UTC).
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        updated_at:
          description: The date when the credit note was last updated. It is expressed
            in Coordinated Universal Time (UTC).
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        file_url:
          description: The PDF file of the credit note.
          example: https://getlago.com/credit_note/file
          nullable: true
          type: string
        items:
          description: Array of credit note’s items.
          items:
            $ref: '#/components/schemas/CreditNoteItemObject'
          type: array
        applied_taxes:
          items:
            $ref: '#/components/schemas/CreditNoteAppliedTaxObject'
          type: array
      required:
      - balance_amount_cents
      - coupons_adjustment_amount_cents
      - created_at
      - credit_amount_cents
      - currency
      - invoice_number
      - issuing_date
      - lago_id
      - lago_invoice_id
      - number
      - reason
      - refund_amount_cents
      - sequential_id
      - sub_total_excluding_taxes_amount_cents
      - taxes_amount_cents
      - taxes_rate
      - total_amount_cents
      - updated_at
      type: object
    CreditNotes:
      example:
        credit_notes:
        - reason: other
          taxes_amount_cents: 20
          file_url: https://getlago.com/credit_note/file
          refund_status: pending
          taxes_rate: 20
          sequential_id: 2
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          issuing_date: 2022-12-06T00:00:00.000+00:00
          description: Free text
          created_at: 2022-09-14T16:35:31Z
          sub_total_excluding_taxes_amount_cents: 100
          coupons_adjustment_amount_cents: 20
          total_amount_cents: 120
          number: LAG-1234-CN2
          credit_status: available
          credit_amount_cents: 100
          balance_amount_cents: 100
          updated_at: 2022-09-14T16:35:31Z
          refund_amount_cents: 0
          currency: ""
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          applied_taxes:
          - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            base_amount_cents: 100
          - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            base_amount_cents: 100
          invoice_number: LAG-1234
          items:
          - amount_cents: 100
            amount_currency: ""
            fee: null
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 100
            amount_currency: ""
            fee: null
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - reason: other
          taxes_amount_cents: 20
          file_url: https://getlago.com/credit_note/file
          refund_status: pending
          taxes_rate: 20
          sequential_id: 2
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          issuing_date: 2022-12-06T00:00:00.000+00:00
          description: Free text
          created_at: 2022-09-14T16:35:31Z
          sub_total_excluding_taxes_amount_cents: 100
          coupons_adjustment_amount_cents: 20
          total_amount_cents: 120
          number: LAG-1234-CN2
          credit_status: available
          credit_amount_cents: 100
          balance_amount_cents: 100
          updated_at: 2022-09-14T16:35:31Z
          refund_amount_cents: 0
          currency: ""
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          applied_taxes:
          - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            base_amount_cents: 100
          - lago_credit_note_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            base_amount_cents: 100
          invoice_number: LAG-1234
          items:
          - amount_cents: 100
            amount_currency: ""
            fee: null
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 100
            amount_currency: ""
            fee: null
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        credit_notes:
          items:
            $ref: '#/components/schemas/CreditNoteObject'
          type: array
      required:
      - credit_notes
      type: object
    CreditNoteCreateInput:
      example:
        credit_note:
          reason: duplicated_charge
          credit_amount_cents: 10
          invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          description: description
          refund_amount_cents: 5
          items:
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 10
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            amount_cents: 5
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteCreateInput_credit_note'
      required:
      - credit_note
      type: object
    CreditNoteUpdateInput:
      example:
        credit_note:
          refund_status: succeeded
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteUpdateInput_credit_note'
      required:
      - credit_note
      type: object
    Currency:
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BIF
      - BMD
      - BND
      - BOB
      - BRL
      - BSD
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHF
      - CLF
      - CLP
      - CNY
      - COP
      - CRC
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - ISK
      - JMD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KRW
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - STD
      - SZL
      - THB
      - TJS
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - UYU
      - UZS
      - VND
      - VUV
      - WST
      - XAF
      - XCD
      - XOF
      - XPF
      - YER
      - ZAR
      - ZMW
      example: USD
      type: string
    Customer:
      example:
        customer: null
      properties:
        customer:
          $ref: '#/components/schemas/CustomerObjectExtended'
      required:
      - customer
      type: object
    CustomerBillingConfiguration:
      description: "Configuration specific to the payment provider, utilized for billing\
        \ the customer. This object contains settings and parameters necessary for\
        \ processing payments and invoicing the customer."
      example:
        provider_customer_id: cus_12345
        document_locale: fr
        provider_payment_methods:
        - card
        - sepa_debit
        payment_provider: stripe
        invoice_grace_period: 3
        sync_with_provider: true
        sync: true
      properties:
        invoice_grace_period:
          description: "The grace period, expressed in days, for the invoice. This\
            \ period refers to the additional time granted to the customer beyond\
            \ the invoice due date to adjust usage and line items"
          example: 3
          type: integer
        payment_provider:
          description: |-
            The payment provider utilized to initiate payments for invoices issued by Lago.
            Accepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`.
          enum:
          - stripe
          - adyen
          - gocardless
          example: stripe
          type: string
        provider_customer_id:
          description: "The customer ID within the payment provider's system. If this\
            \ field is not provided, Lago has the option to create a new customer\
            \ record within the payment provider's system on behalf of the customer"
          example: cus_12345
          type: string
        sync:
          description: "Set this field to `true` if you want to create the customer\
            \ in the payment provider synchronously with the customer creation process\
            \ in Lago. This option is applicable only when the `provider_customer_id`\
            \ is `null` and the customer is automatically created in the payment provider\
            \ through Lago. By default, the value is set to `false`"
          example: true
          type: boolean
        sync_with_provider:
          description: "Set this field to `true` if you want to create a customer\
            \ record in the payment provider's system. This option is applicable only\
            \ when the `provider_customer_id` is null and the `sync_with_provider`\
            \ field is set to `true`. By default, the value is set to `false`"
          example: true
          type: boolean
        document_locale:
          description: "The document locale, specified in the ISO 639-1 format. This\
            \ field represents the language or locale used for the documents issued\
            \ by Lago"
          example: fr
          type: string
        provider_payment_methods:
          description: "Specifies the available payment methods that can be used for\
            \ this customer when `payment_provider` is set to `stripe`. The `provider_payment_methods`\
            \ field is an array that allows multiple payment options to be defined.\
            \ If this field is not explicitly set, all the payment methods are selected.\
            \ For now, possible values are `card` and `sepa_debit`."
          example:
          - card
          - sepa_debit
          items:
            type: string
          nullable: true
          type: array
      type: object
    CustomerChargeUsageObject:
      example:
        billable_metric:
          aggregation_type: sum_agg
          code: storage
          name: Storage
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        events_count: 10
        charge:
          invoice_display_name: Setup
          charge_model: graduated
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount_cents: 123
        amount_currency: ""
        groups:
        - events_count: 10
          amount_cents: 1000
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          units: "0.9"
          value: europe
          key: key
        - events_count: 10
          amount_cents: 1000
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          units: "0.9"
          value: europe
          key: key
        units: "1.0"
      properties:
        units:
          description: The number of units consumed by the customer for a specific
            charge item.
          example: "1.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        events_count:
          description: The quantity of usage events that have been recorded for a
            particular charge during the specified time period. These events may also
            be referred to as the number of transactions in some contexts.
          example: 10
          type: integer
        amount_cents:
          description: "The amount in cents, tax excluded, consumed by the customer\
            \ for a specific charge item."
          example: 123
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of a usage item consumed by the customer.
            example: EUR
        charge:
          $ref: '#/components/schemas/CustomerChargeUsageObject_charge'
        billable_metric:
          $ref: '#/components/schemas/CustomerChargeUsageObject_billable_metric'
        groups:
          description: "Array of group object, representing multiple dimensions for\
            \ a charge item."
          items:
            $ref: '#/components/schemas/CustomerChargeUsageObject_groups_inner'
          required:
          - amount_cents
          - events_count
          - lago_id
          - units
          - value
          type: array
      required:
      - amount_cents
      - amount_currency
      - billable_metric
      - charge
      - events_count
      - groups
      - units
      type: object
    CustomerCreateInput:
      example:
        customer:
          country: ""
          legal_number: 49-008-2965
          metadata:
          - display_in_invoice: true
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: "123456789"
            key: Purchase Order
          - display_in_invoice: true
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: "123456789"
            key: Purchase Order
          city: Woodland Hills
          logo_url: http://hooli.com/logo.png
          timezone: ""
          external_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          url: http://hooli.com
          billing_configuration:
            provider_customer_id: cus_12345
            document_locale: fr
            provider_payment_methods:
            - card
            - sepa_debit
            payment_provider: stripe
            invoice_grace_period: 3
            sync_with_provider: true
            sync: true
          zipcode: "91364"
          tax_codes:
          - french_standard_vat
          address_line2: ""
          address_line1: 5230 Penfield Ave
          phone: 1-171-883-3711 x245
          name: Gavin Belson
          net_payment_term: 30
          currency: ""
          legal_name: Coleman-Blair
          state: CA
          email: dinesh@piedpiper.test
          tax_identification_number: EU123456789
      properties:
        customer:
          $ref: '#/components/schemas/CustomerCreateInput_customer'
      required:
      - customer
      type: object
    CustomerMetadata:
      description: Set of key-value pairs that you can attach to a customer. This
        can be useful for storing additional information about the customer in a structured
        format
      properties:
        lago_id:
          description: A unique identifier for the customer metadata object in the
            Lago application. Can be used to update a key-value pair
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          description: The metadata object key
          example: Purchase Order
          type: string
        value:
          description: The metadata object value
          example: "123456789"
          type: string
        display_in_invoice:
          description: "Determines whether the item or information should be displayed\
            \ in the invoice. If set to true, the item or information will be included\
            \ and visible in the generated invoice. If set to false, the item or information\
            \ will be excluded and not displayed in the invoice."
          example: true
          type: boolean
        created_at:
          description: "The date of the metadata object creation, represented in ISO\
            \ 8601 datetime format and expressed in Coordinated Universal Time (UTC).\
            \ The creation_date provides a standardized and internationally recognized\
            \ timestamp for when the metadata object was created"
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
      required:
      - created_at
      - display_in_invoice
      - key
      - lago_id
      - value
      type: object
    CustomerObject:
      properties:
        lago_id:
          description: Unique identifier assigned to the customer within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the customer's record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        sequential_id:
          description: "The unique identifier assigned to the customer within the\
            \ organization's scope. This identifier is used to track and reference\
            \ the customer's order of creation within the organization's system. It\
            \ ensures that each customer has a distinct `sequential_id`` associated\
            \ with them, allowing for easy identification and sorting based on the\
            \ order of creation"
          example: 1
          type: integer
        slug:
          description: "A concise and unique identifier for the customer, formed by\
            \ combining the Organization's `name`, `id`, and customer's `sequential_id`"
          example: LAG-1234-001
          type: string
        external_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        address_line1:
          description: The first line of the billing address
          example: 5230 Penfield Ave
          nullable: true
          type: string
        address_line2:
          description: The second line of the billing address
          nullable: true
          type: string
          example: null
        applicable_timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "The customer's applicable timezone, used for billing purposes\
              \ in their local time."
        city:
          description: The city of the customer's billing address
          example: Woodland Hills
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/Country'
          - description: Country code of the customer's billing address. Format must
              be ISO 3166 (alpha-2)
            example: US
            nullable: true
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: Currency of the customer. Format must be ISO 4217
            example: USD
            nullable: true
        email:
          description: The email of the customer
          example: dinesh@piedpiper.test
          format: email
          nullable: true
          type: string
        legal_name:
          description: The legal company name of the customer
          example: Coleman-Blair
          nullable: true
          type: string
        legal_number:
          description: The legal company number of the customer
          example: 49-008-2965
          nullable: true
          type: string
        logo_url:
          description: The logo URL of the customer
          example: http://hooli.com/logo.png
          nullable: true
          type: string
        name:
          description: The full name of the customer
          example: Gavin Belson
          nullable: true
          type: string
        phone:
          description: The phone number of the customer
          example: 1-171-883-3711 x245
          nullable: true
          type: string
        state:
          description: The state of the customer's billing address
          example: CA
          nullable: true
          type: string
        tax_identification_number:
          description: The tax identification number of the customer
          example: EU123456789
          nullable: true
          type: string
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "The customer's timezone, used for billing purposes in their\
              \ local time. Overrides the organization's timezone"
            nullable: true
        url:
          description: The custom website URL of the customer
          example: http://hooli.com
          nullable: true
          type: string
        zipcode:
          description: The zipcode of the customer's billing address
          example: "91364"
          nullable: true
          type: string
        net_payment_term:
          description: "The net payment term, expressed in days, specifies the duration\
            \ within which a customer is expected to remit payment after the invoice\
            \ is finalized."
          example: 30
          nullable: true
          type: integer
        created_at:
          description: "The date of the customer creation, represented in ISO 8601\
            \ datetime format and expressed in Coordinated Universal Time (UTC). The\
            \ creation_date provides a standardized and internationally recognized\
            \ timestamp for when the customer object was created"
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        updated_at:
          description: "The date of the customer update, represented in ISO 8601 datetime\
            \ format and expressed in Coordinated Universal Time (UTC). The update_date\
            \ provides a standardized and internationally recognized timestamp for\
            \ when the customer object was updated"
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        billing_configuration:
          $ref: '#/components/schemas/CustomerBillingConfiguration'
        metadata:
          items:
            $ref: '#/components/schemas/CustomerMetadata'
          type: array
      required:
      - applicable_timezone
      - created_at
      - external_id
      - lago_id
      - sequential_id
      - slug
      type: object
    CustomerObjectExtended:
      allOf:
      - $ref: '#/components/schemas/CustomerObject'
      - properties:
          metadata:
            items:
              $ref: '#/components/schemas/CustomerMetadata'
            type: array
          taxes:
            description: List of customer taxes
            items:
              $ref: '#/components/schemas/TaxObject'
            type: array
        type: object
    CustomerPastUsage:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        usage_periods:
        - customer_usage:
            total_amount_cents: 123
            charges_usage:
            - billable_metric:
                aggregation_type: sum_agg
                code: storage
                name: Storage
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              events_count: 10
              charge:
                invoice_display_name: Setup
                charge_model: graduated
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              amount_cents: 123
              amount_currency: ""
              groups:
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              units: "1.0"
            - billable_metric:
                aggregation_type: sum_agg
                code: storage
                name: Storage
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              events_count: 10
              charge:
                invoice_display_name: Setup
                charge_model: graduated
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              amount_cents: 123
              amount_currency: ""
              groups:
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              units: "1.0"
            taxes_amount_cents: 200
            issuing_date: 2022-08-01T23:59:59Z
            lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 123
            to_datetime: 2022-07-31T23:59:59Z
            currency: ""
            from_datetime: 2022-07-01T00:00:00Z
        - customer_usage:
            total_amount_cents: 123
            charges_usage:
            - billable_metric:
                aggregation_type: sum_agg
                code: storage
                name: Storage
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              events_count: 10
              charge:
                invoice_display_name: Setup
                charge_model: graduated
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              amount_cents: 123
              amount_currency: ""
              groups:
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              units: "1.0"
            - billable_metric:
                aggregation_type: sum_agg
                code: storage
                name: Storage
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              events_count: 10
              charge:
                invoice_display_name: Setup
                charge_model: graduated
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              amount_cents: 123
              amount_currency: ""
              groups:
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              - events_count: 10
                amount_cents: 1000
                lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                units: "0.9"
                value: europe
                key: key
              units: "1.0"
            taxes_amount_cents: 200
            issuing_date: 2022-08-01T23:59:59Z
            lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 123
            to_datetime: 2022-07-31T23:59:59Z
            currency: ""
            from_datetime: 2022-07-01T00:00:00Z
      properties:
        usage_periods:
          items:
            $ref: '#/components/schemas/CustomerUsage'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - usage_periods
      type: object
    CustomersPaginated:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        customers:
        - null
        - null
      properties:
        customers:
          items:
            $ref: '#/components/schemas/CustomerObjectExtended'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - customers
      - meta
      type: object
    CustomerUsage:
      example:
        customer_usage:
          total_amount_cents: 123
          charges_usage:
          - billable_metric:
              aggregation_type: sum_agg
              code: storage
              name: Storage
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            events_count: 10
            charge:
              invoice_display_name: Setup
              charge_model: graduated
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 123
            amount_currency: ""
            groups:
            - events_count: 10
              amount_cents: 1000
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: "0.9"
              value: europe
              key: key
            - events_count: 10
              amount_cents: 1000
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: "0.9"
              value: europe
              key: key
            units: "1.0"
          - billable_metric:
              aggregation_type: sum_agg
              code: storage
              name: Storage
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            events_count: 10
            charge:
              invoice_display_name: Setup
              charge_model: graduated
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 123
            amount_currency: ""
            groups:
            - events_count: 10
              amount_cents: 1000
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: "0.9"
              value: europe
              key: key
            - events_count: 10
              amount_cents: 1000
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: "0.9"
              value: europe
              key: key
            units: "1.0"
          taxes_amount_cents: 200
          issuing_date: 2022-08-01T23:59:59Z
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 123
          to_datetime: 2022-07-31T23:59:59Z
          currency: ""
          from_datetime: 2022-07-01T00:00:00Z
      properties:
        customer_usage:
          $ref: '#/components/schemas/CustomerUsageObject'
      required:
      - customer_usage
      type: object
    CustomerUsageObject:
      example:
        total_amount_cents: 123
        charges_usage:
        - billable_metric:
            aggregation_type: sum_agg
            code: storage
            name: Storage
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          events_count: 10
          charge:
            invoice_display_name: Setup
            charge_model: graduated
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 123
          amount_currency: ""
          groups:
          - events_count: 10
            amount_cents: 1000
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: "0.9"
            value: europe
            key: key
          - events_count: 10
            amount_cents: 1000
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: "0.9"
            value: europe
            key: key
          units: "1.0"
        - billable_metric:
            aggregation_type: sum_agg
            code: storage
            name: Storage
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          events_count: 10
          charge:
            invoice_display_name: Setup
            charge_model: graduated
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 123
          amount_currency: ""
          groups:
          - events_count: 10
            amount_cents: 1000
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: "0.9"
            value: europe
            key: key
          - events_count: 10
            amount_cents: 1000
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: "0.9"
            value: europe
            key: key
          units: "1.0"
        taxes_amount_cents: 200
        issuing_date: 2022-08-01T23:59:59Z
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount_cents: 123
        to_datetime: 2022-07-31T23:59:59Z
        currency: ""
        from_datetime: 2022-07-01T00:00:00Z
      properties:
        from_datetime:
          description: "The lower bound of the billing period, expressed in the ISO\
            \ 8601 datetime format in Coordinated Universal Time (UTC)."
          example: 2022-07-01T00:00:00Z
          format: date-time
          type: string
        to_datetime:
          description: "The upper bound of the billing period, expressed in the ISO\
            \ 8601 datetime format in Coordinated Universal Time (UTC)."
          example: 2022-07-31T23:59:59Z
          format: date-time
          type: string
        issuing_date:
          description: The date of creation of the invoice.
          example: 2022-08-01T23:59:59Z
          format: date-time
          type: string
        lago_invoice_id:
          description: A unique identifier associated with the invoice related to
            this particular usage record.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the customer’s current usage.
            example: EUR
        amount_cents:
          description: "The amount in cents, tax excluded."
          example: 123
          type: integer
        taxes_amount_cents:
          description: The tax amount in cents.
          example: 200
          type: integer
        total_amount_cents:
          description: "The total amount in cents, tax included."
          example: 123
          type: integer
        charges_usage:
          description: Array of charges that comprise the current usage. It contains
            detailed information about individual charge items associated with the
            usage.
          items:
            $ref: '#/components/schemas/CustomerChargeUsageObject'
          type: array
      required:
      - amount_cents
      - charges_usage
      - from_datetime
      - issuing_date
      - taxes_amount_cents
      - to_datetime
      - total_amount_cents
      type: object
    Event:
      example:
        event:
          transaction_id: transaction_1234567890
          code: storage
          lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_subscription_id: sub_1234567890
          properties:
            gb: 10
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          timestamp: 2022-04-29T08:59:51.123Z
      properties:
        event:
          $ref: '#/components/schemas/EventObject'
      required:
      - event
      type: object
    EventBatchInput:
      example:
        event:
          transaction_id: transaction_1234567890
          code: storage
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          external_subscription_ids:
          - sub_1234567890
          - sub_0987654321
          properties:
            gb: 10
          timestamp: 1651240791
      properties:
        event:
          $ref: '#/components/schemas/EventBatchInput_event'
      required:
      - event
      type: object
    EventEstimateFeesInput:
      example:
        event:
          code: storage
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          external_subscription_id: sub_1234567890
          properties: "{}"
      properties:
        event:
          $ref: '#/components/schemas/EventEstimateFeesInput_event'
      required:
      - event
      type: object
    EventInput:
      example:
        event:
          transaction_id: transaction_1234567890
          code: storage
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          external_subscription_id: sub_1234567890
          properties:
            gb: 10
          timestamp: "1651240791.123"
      properties:
        event:
          $ref: '#/components/schemas/EventInput_event'
      required:
      - event
      type: object
    EventObject:
      example:
        transaction_id: transaction_1234567890
        code: storage
        lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        created_at: 2022-04-29T08:59:51Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        external_subscription_id: sub_1234567890
        properties:
          gb: 10
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        timestamp: 2022-04-29T08:59:51.123Z
      properties:
        lago_id:
          description: Unique identifier assigned to the event within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the event's record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        transaction_id:
          description: "This field represents a unique identifier for the event. It\
            \ is crucial for ensuring idempotency, meaning that each event can be\
            \ uniquely identified and processed without causing any unintended side\
            \ effects."
          example: transaction_1234567890
          type: string
        lago_customer_id:
          description: Unique identifier assigned to the customer within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the customer's record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        external_customer_id:
          description: "The customer external unique identifier (provided by your\
            \ own application). This field is optional if you send the `external_subscription_id`,\
            \ targeting a specific subscription."
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          nullable: true
          type: string
        code:
          description: "The code that identifies a targeted billable metric. It is\
            \ essential that this code matches the `code` property of one of your\
            \ active billable metrics. If the provided code does not correspond to\
            \ any active billable metric, it will be ignored during the process."
          example: storage
          type: string
        timestamp:
          description: "This field captures the Unix timestamp in seconds indicating\
            \ the occurrence of the event in Coordinated Universal Time (UTC). If\
            \ this timestamp is not provided, the API will automatically set it to\
            \ the time of event reception."
          example: 2022-04-29T08:59:51.123Z
          format: date-time
          type: string
        properties:
          $ref: '#/components/schemas/EventObject_properties'
        lago_subscription_id:
          description: Unique identifier assigned to the subscription within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the subscription’s record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        external_subscription_id:
          description: The unique identifier of the subscription within your application.
            It is a mandatory field when the customer possesses multiple subscriptions
            or when the `external_customer_id` is not provided.
          example: sub_1234567890
          nullable: true
          type: string
        created_at:
          description: "The creation date of the event's record in the Lago application,\
            \ presented in the ISO 8601 datetime format, specifically in Coordinated\
            \ Universal Time (UTC). It provides the precise timestamp of when the\
            \ event's record was created within the Lago application"
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
      required:
      - code
      - created_at
      - external_customer_id
      - external_subscription_id
      - lago_customer_id
      - lago_id
      - lago_subscription_id
      - timestamp
      - transaction_id
      type: object
    Fee:
      example:
        fee:
          taxes_amount_cents: 20
          taxes_rate: 20
          amount_cents: 100
          external_customer_id: external_id
          created_at: 2022-08-24T14:58:59Z
          precise_unit_amount: "312.5"
          units: "0.32"
          total_amount_currency: ""
          event_transaction_id: transaction_1234567890
          to_date: 2022-05-29T08:59:51Z
          refunded_at: 2022-08-24T14:58:59Z
          amount_currency: ""
          lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_subscription_id: external_id
          item:
            lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            code: startup
            invoice_display_name: Setup Fee (SF1)
            group_invoice_display_name: Transactions - ACH
            item_type: Subscription
            name: Startup
            type: subscription
          invoiceable: true
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          from_date: 2022-04-29T08:59:51Z
          lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          payment_status: pending
          succeeded_at: 2022-08-24T14:58:59Z
          total_amount_cents: 120
          events_count: 23
          invoice_display_name: Setup Fee (SF1)
          pay_in_advance: true
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          failed_at: 2022-08-24T14:58:59Z
          applied_taxes:
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        fee:
          $ref: '#/components/schemas/FeeObject'
      required:
      - fee
      type: object
    FeeAppliedTaxObject:
      allOf:
      - $ref: '#/components/schemas/BaseAppliedTax'
      example:
        lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_fee_id:
          description: "Unique identifier of the fee, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
      type: object
    FeeObject:
      example:
        taxes_amount_cents: 20
        taxes_rate: 20
        amount_cents: 100
        external_customer_id: external_id
        created_at: 2022-08-24T14:58:59Z
        precise_unit_amount: "312.5"
        units: "0.32"
        total_amount_currency: ""
        event_transaction_id: transaction_1234567890
        to_date: 2022-05-29T08:59:51Z
        refunded_at: 2022-08-24T14:58:59Z
        amount_currency: ""
        lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        external_subscription_id: external_id
        item:
          lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          code: startup
          invoice_display_name: Setup Fee (SF1)
          group_invoice_display_name: Transactions - ACH
          item_type: Subscription
          name: Startup
          type: subscription
        invoiceable: true
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        from_date: 2022-04-29T08:59:51Z
        lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        payment_status: pending
        succeeded_at: 2022-08-24T14:58:59Z
        total_amount_cents: 120
        events_count: 23
        invoice_display_name: Setup Fee (SF1)
        pay_in_advance: true
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        failed_at: 2022-08-24T14:58:59Z
        applied_taxes:
        - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          description: Unique identifier assigned to the fee within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the fee’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        lago_group_id:
          description: Unique identifier assigned to the group that the fee belongs
            to
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        lago_invoice_id:
          description: Unique identifier assigned to the invoice that the fee belongs
            to
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        lago_true_up_fee_id:
          description: "Unique identifier assigned to the true-up fee when a minimum\
            \ has been set to the charge. This identifier helps to distinguish and\
            \ manage the true-up fee associated with the charge, which may be applicable\
            \ when a minimum threshold or limit is set for the charge amount."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        lago_true_up_parent_fee_id:
          description: Unique identifier assigned to the parent fee on which the true-up
            fee is assigned. This identifier establishes the relationship between
            the parent fee and the associated true-up fee.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        lago_subscription_id:
          description: "Unique identifier assigned to the subscription, created by\
            \ Lago. This field is specifically displayed when the fee type is charge\
            \ or subscription."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        lago_customer_id:
          description: "Unique identifier assigned to the customer, created by Lago.\
            \ This field is specifically displayed when the fee type is charge or\
            \ subscription."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
        external_customer_id:
          description: Unique identifier assigned to the customer in your application.
            This field is specifically displayed when the fee type is charge or subscription.
          example: external_id
          nullable: true
          type: string
        external_subscription_id:
          description: Unique identifier assigned to the subscription in your application.
            This field is specifically displayed when the fee type is charge or subscription.
          example: external_id
          nullable: true
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup Fee (SF1)
          type: string
        amount_cents:
          description: "The cost of this specific fee, excluding any applicable taxes."
          example: 100
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of this specific fee. It indicates the monetary
              unit in which the fee’s cost is expressed.
            example: EUR
        taxes_amount_cents:
          description: The cost of the tax associated with this specific fee.
          example: 20
          type: integer
        taxes_rate:
          description: The tax rate associated with this specific fee.
          example: 20
          type: number
        units:
          description: The number of units used to charge the customer. This field
            indicates the quantity or count of units consumed or utilized in the context
            of the charge. It helps in determining the basis for calculating the fee
            or cost associated with the usage of the service or product provided to
            the customer.
          example: "0.32"
          type: string
        precise_unit_amount:
          description: "The unit amount of the fee per unit, with precision."
          example: "312.5"
          type: string
        total_amount_cents:
          description: "The cost of this specific fee, including any applicable taxes."
          example: 120
          type: integer
        total_amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: "The currency of this specific fee, including any applicable\
              \ taxes."
            example: EUR
        events_count:
          description: The number of events that have been sent and used to charge
            the customer. This field indicates the count or quantity of events that
            have been processed and considered in the charging process.
          example: 23
          type: integer
        pay_in_advance:
          description: "Flag that indicates whether the fee was paid in advance. It\
            \ serves as a boolean value, where `true` represents that the fee was\
            \ paid in advance (straightaway), and `false` indicates that the fee was\
            \ not paid in arrears (at the end of the period)."
          example: true
          type: boolean
        invoiceable:
          description: "Flag that indicates whether the fee was included on the invoice.\
            \ It serves as a boolean value, where `true` represents that the fee was\
            \ included on the invoice, and `false` indicates that the fee was not\
            \ included on the invoice."
          example: true
          type: boolean
        from_date:
          description: The beginning date of the period that the fee covers. It is
            applicable only to `subscription` and `charge` fees. This field indicates
            the start date of the billing period or subscription period associated
            with the fee.
          example: 2022-04-29T08:59:51Z
          format: date-time
          nullable: true
          type: string
        to_date:
          description: The ending date of the period that the fee covers. It is applicable
            only to `subscription` and `charge` fees. This field indicates the end
            date of the billing period or subscription period associated with the
            fee.
          example: 2022-05-29T08:59:51Z
          format: date-time
          nullable: true
          type: string
        payment_status:
          description: "Indicates the payment status of the fee. It represents the\
            \ current status of the payment associated with the fee. The possible\
            \ values for this field are `pending`, `succeeded`, `failed` and `refunded`."
          enum:
          - pending
          - succeeded
          - failed
          - refunded
          example: pending
          type: string
        created_at:
          description: The date and time when the fee was created. It is provided
            in Coordinated Universal Time (UTC) format.
          example: 2022-08-24T14:58:59Z
          format: date-time
          nullable: true
          type: string
        succeeded_at:
          description: The date and time when the payment for the fee was successfully
            processed. It is provided in Coordinated Universal Time (UTC) format.
          example: 2022-08-24T14:58:59Z
          format: date-time
          nullable: true
          type: string
        failed_at:
          description: The date and time when the payment for the fee failed to process.
            It is provided in Coordinated Universal Time (UTC) format.
          example: 2022-08-24T14:58:59Z
          format: date-time
          nullable: true
          type: string
        refunded_at:
          description: The date and time when the payment for the fee was refunded.
            It is provided in Coordinated Universal Time (UTC) format
          example: 2022-08-24T14:58:59Z
          format: date-time
          nullable: true
          type: string
        event_transaction_id:
          description: Unique identifier assigned to the transaction. This field is
            specifically displayed when the fee type is `charge` and the payment for
            the fee is made in advance (`pay_in_advance` is set to `true`).
          example: transaction_1234567890
          nullable: true
          type: string
        item:
          $ref: '#/components/schemas/FeeObject_item'
        applied_taxes:
          description: List of fee applied taxes
          items:
            $ref: '#/components/schemas/FeeAppliedTaxObject'
          type: array
      required:
      - amount_cents
      - amount_currency
      - invoiceable
      - item
      - pay_in_advance
      - payment_status
      - precise_unit_amount
      - taxes_amount_cents
      - taxes_rate
      - total_amount_cents
      - total_amount_currency
      - units
      type: object
    Fees:
      example:
        fees:
        - taxes_amount_cents: 20
          taxes_rate: 20
          amount_cents: 100
          external_customer_id: external_id
          created_at: 2022-08-24T14:58:59Z
          precise_unit_amount: "312.5"
          units: "0.32"
          total_amount_currency: ""
          event_transaction_id: transaction_1234567890
          to_date: 2022-05-29T08:59:51Z
          refunded_at: 2022-08-24T14:58:59Z
          amount_currency: ""
          lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_subscription_id: external_id
          item:
            lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            code: startup
            invoice_display_name: Setup Fee (SF1)
            group_invoice_display_name: Transactions - ACH
            item_type: Subscription
            name: Startup
            type: subscription
          invoiceable: true
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          from_date: 2022-04-29T08:59:51Z
          lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          payment_status: pending
          succeeded_at: 2022-08-24T14:58:59Z
          total_amount_cents: 120
          events_count: 23
          invoice_display_name: Setup Fee (SF1)
          pay_in_advance: true
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          failed_at: 2022-08-24T14:58:59Z
          applied_taxes:
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - taxes_amount_cents: 20
          taxes_rate: 20
          amount_cents: 100
          external_customer_id: external_id
          created_at: 2022-08-24T14:58:59Z
          precise_unit_amount: "312.5"
          units: "0.32"
          total_amount_currency: ""
          event_transaction_id: transaction_1234567890
          to_date: 2022-05-29T08:59:51Z
          refunded_at: 2022-08-24T14:58:59Z
          amount_currency: ""
          lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_subscription_id: external_id
          item:
            lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            code: startup
            invoice_display_name: Setup Fee (SF1)
            group_invoice_display_name: Transactions - ACH
            item_type: Subscription
            name: Startup
            type: subscription
          invoiceable: true
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          from_date: 2022-04-29T08:59:51Z
          lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          payment_status: pending
          succeeded_at: 2022-08-24T14:58:59Z
          total_amount_cents: 120
          events_count: 23
          invoice_display_name: Setup Fee (SF1)
          pay_in_advance: true
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          failed_at: 2022-08-24T14:58:59Z
          applied_taxes:
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        fees:
          items:
            $ref: '#/components/schemas/FeeObject'
          type: array
      required:
      - fees
      type: object
    FeesPaginated:
      allOf:
      - $ref: '#/components/schemas/Fees'
      - properties:
          meta:
            $ref: '#/components/schemas/PaginationMeta'
        required:
        - meta
        type: object
    FeeUpdateInput:
      example:
        fee:
          payment_status: succeeded
      properties:
        fee:
          $ref: '#/components/schemas/FeeUpdateInput_fee'
      required:
      - fee
      type: object
    GrossRevenueObject:
      example:
        month: 2023-11-01T00:00:00.000Z
        amount_cents: 50000
        currency: ""
      properties:
        month:
          description: Identifies the month to analyze revenue.
          example: 2023-11-01T00:00:00.000Z
          type: string
        amount_cents:
          description: "The total amount of revenue for a period, expressed in cents."
          example: 50000
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of revenue analytics. Format must be ISO 4217.
            example: USD
      required:
      - month
      type: object
    GrossRevenues:
      example:
        gross_revenues:
        - month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          currency: ""
        - month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          currency: ""
      properties:
        gross_revenues:
          items:
            $ref: '#/components/schemas/GrossRevenueObject'
          type: array
      required:
      - gross_revenues
      type: object
    GroupObject:
      example:
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: us-east-1
        key: region
      properties:
        lago_id:
          description: Unique identifier of a specific group associated with the billable
            metric.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          description: Key of a specific group associated with the billable metric.
          example: region
          type: string
        value:
          description: One of the values for a specific group associated with the
            billable metric.
          example: us-east-1
          type: string
      required:
      - key
      - lago_id
      - value
      type: object
    GroupPropertiesObject:
      properties:
        group_id:
          description: "Unique identifier of a billable metric group, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual group will be\
            \ used as the default display name."
          example: AWS
          type: string
        values:
          $ref: '#/components/schemas/GroupPropertiesObject_values'
      required:
      - group_id
      - values
      type: object
    GroupsPaginated:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        groups:
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: us-east-1
          key: region
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: us-east-1
          key: region
      properties:
        groups:
          items:
            $ref: '#/components/schemas/GroupObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - groups
      - meta
      type: object
    MrrObject:
      example:
        month: 2023-11-01T00:00:00.000Z
        amount_cents: 50000
        currency: ""
      properties:
        month:
          description: Identifies the month to analyze MRR.
          example: 2023-11-01T00:00:00.000Z
          type: string
        amount_cents:
          description: "The total amount of MRR, expressed in cents."
          example: 50000
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of MRR analytics. Format must be ISO 4217.
            example: USD
      required:
      - month
      type: object
    Mrrs:
      example:
        mrrs:
        - month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          currency: ""
        - month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          currency: ""
      properties:
        mrrs:
          items:
            $ref: '#/components/schemas/MrrObject'
          type: array
      required:
      - mrrs
      type: object
    Invoice:
      example:
        invoice: null
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceObjectExtended'
      required:
      - invoice
      type: object
    InvoiceAppliedTaxObject:
      allOf:
      - $ref: '#/components/schemas/BaseAppliedTax'
      example:
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        fees_amount_cents: 20000
      properties:
        lago_invoice_id:
          description: "Unique identifier of the invoice, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        fees_amount_cents:
          description: Fees total amount on which the tax is applied
          example: 20000
          type: integer
      type: object
    InvoiceCollectionObject:
      example:
        month: 2023-11-01T00:00:00.000Z
        amount_cents: 50000
        payment_status: succeeded
        currency: ""
        invoices_count: 10
      properties:
        month:
          description: Identifies the month to analyze revenue.
          example: 2023-11-01T00:00:00.000Z
          type: string
        payment_status:
          description: The payment status of the invoices.
          enum:
          - pending
          - succeeded
          - failed
          example: succeeded
          type: string
        invoices_count:
          description: Contains invoices count.
          example: 10
          type: integer
        amount_cents:
          description: "The total amount of revenue for a period, expressed in cents."
          example: 50000
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of revenue analytics. Format must be ISO 4217.
            example: USD
      required:
      - amount_cents
      - invoices_count
      - month
      type: object
    InvoiceCollections:
      example:
        invoice_collections:
        - month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          payment_status: succeeded
          currency: ""
          invoices_count: 10
        - month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          payment_status: succeeded
          currency: ""
          invoices_count: 10
      properties:
        invoice_collections:
          items:
            $ref: '#/components/schemas/InvoiceCollectionObject'
          type: array
      required:
      - invoice_collections
      type: object
    InvoicedUsageObject:
      example:
        code: code1
        month: 2023-11-01T00:00:00.000Z
        amount_cents: 50000
        currency: ""
      properties:
        month:
          description: Identifies the month to analyze revenue.
          example: 2023-11-01T00:00:00.000Z
          type: string
        code:
          description: The code of the usage-based billable metrics.
          example: code1
          type: string
        amount_cents:
          description: "The total amount of revenue for a period, expressed in cents."
          example: 50000
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of revenue analytics. Format must be ISO 4217.
            example: USD
      required:
      - amount_cents
      - currency
      - month
      type: object
    InvoicedUsages:
      example:
        invoiced_usages:
        - code: code1
          month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          currency: ""
        - code: code1
          month: 2023-11-01T00:00:00.000Z
          amount_cents: 50000
          currency: ""
      properties:
        invoiced_usages:
          items:
            $ref: '#/components/schemas/InvoicedUsageObject'
          type: array
      required:
      - invoiced_usages
      type: object
    InvoiceMetadataObject:
      example:
        created_at: 2022-04-29T08:59:51Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: INV-0123456-98765
        key: digital_ref_id
      properties:
        lago_id:
          description: Unique identifier assigned to the invoice metadata within the
            Lago application.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          description: Represents the key of the metadata’s key-value pair.
          example: digital_ref_id
          type: string
        value:
          description: Represents the value of the metadata’s key-value pair.
          example: INV-0123456-98765
          type: string
        created_at:
          description: The date and time when the metadata object was created. It
            follows the ISO 8601 datetime format and is expressed in Coordinated Universal
            Time (UTC).
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
      type: object
    InvoiceObject:
      example:
        taxes_amount_cents: 20
        file_url: https://getlago.com/invoice/file
        metadata:
        - created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: INV-0123456-98765
          key: digital_ref_id
        - created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: INV-0123456-98765
          key: digital_ref_id
        sequential_id: 2
        issuing_date: 2022-04-30T00:00:00.000+00:00
        payment_status: succeeded
        sub_total_including_taxes_amount_cents: 120
        version_number: 3
        coupons_amount_cents: 10
        sub_total_excluding_taxes_amount_cents: 100
        total_amount_cents: 100
        number: LAG-1234-001-002
        credit_notes_amount_cents: 10
        fees_amount_cents: 100
        payment_due_date: 2022-04-30T00:00:00.000+00:00
        net_payment_term: 30
        invoice_type: subscription
        currency: ""
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        applied_taxes:
        - lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          fees_amount_cents: 20000
        - lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          fees_amount_cents: 20000
        prepaid_credit_amount_cents: 0
        status: finalized
        customer: null
      properties:
        lago_id:
          description: Unique identifier assigned to the fee within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the fee’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        sequential_id:
          description: "This ID helps in uniquely identifying and organizing the invoices\
            \ associated with a specific customer. It provides a sequential numbering\
            \ system specific to the customer, allowing for easy tracking and management\
            \ of invoices within the customer's context."
          example: 2
          type: integer
        number:
          description: The unique number assigned to the invoice. This number serves
            as a distinct identifier for the invoice and helps in differentiating
            it from other invoices in the system.
          example: LAG-1234-001-002
          type: string
        issuing_date:
          description: The date when the invoice was issued. It is provided in the
            ISO 8601 date format.
          example: 2022-04-30
          format: date
          type: string
        payment_due_date:
          description: "The payment due date for the invoice, specified in the ISO\
            \ 8601 date format."
          example: 2022-04-30
          format: date
          type: string
        net_payment_term:
          description: "The net payment term, expressed in days, specifies the duration\
            \ within which a customer is expected to remit payment after the invoice\
            \ is finalized."
          example: 30
          type: integer
        invoice_type:
          description: "The type of invoice issued. Possible values are `subscription`,\
            \ `one-off` or `credit`."
          enum:
          - subscription
          - add_on
          - credit
          - one_off
          example: subscription
          type: string
        status:
          description: |-
            The status of the invoice. It indicates the current state of the invoice and can have two possible values:
            - `draft`: the invoice is in the draft state, waiting for the end of the grace period to be finalized. During this period, events can still be ingested and added to the invoice.
            - `finalized`: the invoice has been issued and finalized. In this state, events cannot be ingested or added to the invoice anymore.
          enum:
          - draft
          - finalized
          example: finalized
          type: string
        payment_status:
          description: |-
            The status of the payment associated with the invoice. It can have one of the following values:
            - `pending`: the payment is pending, waiting for payment processing in Stripe or when the invoice is emitted but users have not updated the payment status through the endpoint.
            - `succeeded`: the payment of the invoice has been successfully processed.
            - `failed`: the payment of the invoice has failed or encountered an error during processing.
          enum:
          - pending
          - succeeded
          - failed
          example: succeeded
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the invoice issued.
            example: EUR
        fees_amount_cents:
          description: "The total sum of fees amount in cents. It calculates the cumulative\
            \ amount of all the fees associated with the invoice, providing a consolidated\
            \ value."
          example: 100
          type: integer
        coupons_amount_cents:
          description: "The total sum of all coupons discounted on the invoice. It\
            \ calculates the cumulative discount amount applied by coupons, expressed\
            \ in cents."
          example: 10
          type: integer
        credit_notes_amount_cents:
          description: "The total sum of all credit notes discounted on the invoice.\
            \ It calculates the cumulative discount amount applied by credit notes,\
            \ expressed in cents."
          example: 10
          type: integer
        sub_total_excluding_taxes_amount_cents:
          description: |-
            Subtotal amount, excluding taxes, expressed in cents.
            This field depends on the version number. Here are the definitions based on the version:
            - Version 1: is equal to the sum of `fees_amount_cents`, minus `coupons_amount_cents`, and minus `prepaid_credit_amount_cents`.
            - Version 2: is equal to the `fees_amount_cents`.
            - Version 3: is equal to the `fees_amount_cents`, minus `coupons_amount_cents`
          example: 100
          type: integer
        taxes_amount_cents:
          description: "The sum of tax amount associated with the invoice, expressed\
            \ in cents."
          example: 20
          type: integer
        sub_total_including_taxes_amount_cents:
          description: |-
            Subtotal amount, including taxes, expressed in cents.
            This field depends on the version number. Here are the definitions based on the version:
            - Version 1: is equal to the `total_amount_cents`.
            - Version 2: is equal to the sum of `fees_amount_cents` and `taxes_amount_cents`.
            - Version 3: is equal to the sum `sub_total_excluding_taxes_amount_cents` and `taxes_amount_cents`
          example: 120
          type: integer
        prepaid_credit_amount_cents:
          description: "The total sum of all prepaid credits discounted on the invoice.\
            \ It calculates the cumulative discount amount applied by prepaid credits,\
            \ expressed in cents."
          example: 0
          type: integer
        total_amount_cents:
          description: "The sum of the amount and taxes amount on the invoice, expressed\
            \ in cents. It calculates the total financial value of the invoice, including\
            \ both the original amount and any applicable taxes."
          example: 100
          type: integer
        version_number:
          example: 3
          type: integer
        file_url:
          description: Contains the URL that provides direct access to the invoice
            PDF file. You can use this URL to download or view the PDF document of
            the invoice
          example: https://getlago.com/invoice/file
          format: uri
          type: string
        customer:
          $ref: '#/components/schemas/InvoiceObject_customer'
        metadata:
          items:
            $ref: '#/components/schemas/InvoiceMetadataObject'
          type: array
        applied_taxes:
          items:
            $ref: '#/components/schemas/InvoiceAppliedTaxObject'
          type: array
      required:
      - coupons_amount_cents
      - credit_notes_amount_cents
      - currency
      - fees_amount_cents
      - invoice_type
      - issuing_date
      - lago_id
      - number
      - payment_status
      - prepaid_credit_amount_cents
      - sequential_id
      - status
      - sub_total_excluding_taxes_amount_cents
      - sub_total_including_taxes_amount_cents
      - taxes_amount_cents
      - total_amount_cents
      - version_number
      type: object
    InvoiceObjectExtended:
      allOf:
      - $ref: '#/components/schemas/InvoiceObject'
      - properties:
          credits:
            items:
              $ref: '#/components/schemas/CreditObject'
            type: array
          fees:
            items:
              $ref: '#/components/schemas/FeeObject'
            type: array
          subscriptions:
            items:
              $ref: '#/components/schemas/SubscriptionObject'
            type: array
        type: object
    InvoiceOneOffCreateInput:
      example:
        invoice:
          fees:
          - unit_amount_cents: 12000
            tax_codes:
            - french_standard_vat
            invoice_display_name: Setup Fee (SF1)
            description: "The description of the fee line item in the invoice. By\
              \ default, the description of the add-on is used."
            add_on_code: setup_fee
            units: "2.5"
          - unit_amount_cents: 12000
            tax_codes:
            - french_standard_vat
            invoice_display_name: Setup Fee (SF1)
            description: "The description of the fee line item in the invoice. By\
              \ default, the description of the add-on is used."
            add_on_code: setup_fee
            units: "2.5"
          external_customer_id: hooli_1234
          currency: ""
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceOneOffCreateInput_invoice'
      required:
      - invoice
      type: object
    InvoicesPaginated:
      example:
        invoices:
        - taxes_amount_cents: 20
          file_url: https://getlago.com/invoice/file
          metadata:
          - created_at: 2022-04-29T08:59:51Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: INV-0123456-98765
            key: digital_ref_id
          - created_at: 2022-04-29T08:59:51Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: INV-0123456-98765
            key: digital_ref_id
          sequential_id: 2
          issuing_date: 2022-04-30T00:00:00.000+00:00
          payment_status: succeeded
          sub_total_including_taxes_amount_cents: 120
          version_number: 3
          coupons_amount_cents: 10
          sub_total_excluding_taxes_amount_cents: 100
          total_amount_cents: 100
          number: LAG-1234-001-002
          credit_notes_amount_cents: 10
          fees_amount_cents: 100
          payment_due_date: 2022-04-30T00:00:00.000+00:00
          net_payment_term: 30
          invoice_type: subscription
          currency: ""
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          applied_taxes:
          - lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            fees_amount_cents: 20000
          - lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            fees_amount_cents: 20000
          prepaid_credit_amount_cents: 0
          status: finalized
          customer: null
        - taxes_amount_cents: 20
          file_url: https://getlago.com/invoice/file
          metadata:
          - created_at: 2022-04-29T08:59:51Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: INV-0123456-98765
            key: digital_ref_id
          - created_at: 2022-04-29T08:59:51Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: INV-0123456-98765
            key: digital_ref_id
          sequential_id: 2
          issuing_date: 2022-04-30T00:00:00.000+00:00
          payment_status: succeeded
          sub_total_including_taxes_amount_cents: 120
          version_number: 3
          coupons_amount_cents: 10
          sub_total_excluding_taxes_amount_cents: 100
          total_amount_cents: 100
          number: LAG-1234-001-002
          credit_notes_amount_cents: 10
          fees_amount_cents: 100
          payment_due_date: 2022-04-30T00:00:00.000+00:00
          net_payment_term: 30
          invoice_type: subscription
          currency: ""
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          applied_taxes:
          - lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            fees_amount_cents: 20000
          - lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            fees_amount_cents: 20000
          prepaid_credit_amount_cents: 0
          status: finalized
          customer: null
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
      properties:
        invoices:
          items:
            $ref: '#/components/schemas/InvoiceObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - invoices
      - meta
      type: object
    InvoiceUpdateInput:
      example:
        invoice:
          metadata:
          - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: INV-0123456-98765
            key: digital_ref_id
          - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: INV-0123456-98765
            key: digital_ref_id
          payment_status: succeeded
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceUpdateInput_invoice'
      required:
      - invoice
      type: object
    Organization:
      example:
        organization:
          country: ""
          legal_number: legal_number
          webhook_url: https://webhook.brex.com
          city: New York
          timezone: ""
          created_at: 2022-05-02T13:04:09Z
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          billing_configuration:
            document_locale: en
            invoice_footer: This is my customer footer
            invoice_grace_period: 3
          zipcode: "10000"
          address_line2: address_line2
          address_line1: 100 Brex Street
          name: Name1
          net_payment_term: 30
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          webhook_urls:
          - https://webhook.brex.com
          - https://webhook2.brex.com
          state: NYC
          legal_name: legal_name
          default_currency: ""
          email: brex@brex.com
          tax_identification_number: US123456789
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationObject'
      required:
      - organization
      type: object
    OrganizationBillingConfiguration:
      description: The custom billing settings for your organization.
      example:
        document_locale: en
        invoice_footer: This is my customer footer
        invoice_grace_period: 3
      properties:
        invoice_footer:
          description: The customer invoice message that appears at the bottom of
            each billing documents.
          example: This is my customer footer
          nullable: true
          type: string
        invoice_grace_period:
          description: "The grace period, expressed in days, for finalizing the invoice.\
            \ This period refers to the additional time granted to your customers\
            \ beyond the invoice due date to adjust usage and line items. Can be overwritten\
            \ by the customer’s grace period."
          example: 3
          type: integer
        document_locale:
          description: "The locale of the billing documents, expressed in the ISO\
            \ 639-1 format. This field indicates the language or regional variant\
            \ used for the documents content issued or the embeddable customer portal."
          example: en
          type: string
      type: object
    OrganizationObject:
      example:
        country: ""
        legal_number: legal_number
        webhook_url: https://webhook.brex.com
        city: New York
        timezone: ""
        created_at: 2022-05-02T13:04:09Z
        taxes:
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        billing_configuration:
          document_locale: en
          invoice_footer: This is my customer footer
          invoice_grace_period: 3
        zipcode: "10000"
        address_line2: address_line2
        address_line1: 100 Brex Street
        name: Name1
        net_payment_term: 30
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        webhook_urls:
        - https://webhook.brex.com
        - https://webhook2.brex.com
        state: NYC
        legal_name: legal_name
        default_currency: ""
        email: brex@brex.com
        tax_identification_number: US123456789
      properties:
        lago_id:
          description: Unique identifier assigned to the organization within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the organization's record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: The name of your organization.
          example: Name1
          type: string
        created_at:
          description: "The date of creation of your organization, represented in\
            \ ISO 8601 datetime format and expressed in Coordinated Universal Time\
            \ (UTC)."
          example: 2022-05-02T13:04:09Z
          format: date-time
          nullable: true
          type: string
        webhook_url:
          description: "The URL of your newest updated webhook endpoint. This URL\
            \ allows your organization to receive important messages, notifications,\
            \ or data from the Lago system. By configuring your webhook endpoint to\
            \ this URL, you can ensure that your organization stays informed and receives\
            \ relevant information in a timely manner."
          example: https://webhook.brex.com
          nullable: true
          type: string
        webhook_urls:
          description: The array containing your webhooks URLs.
          example:
          - https://webhook.brex.com
          - https://webhook2.brex.com
          items:
            type: string
          nullable: true
          type: array
        country:
          allOf:
          - $ref: '#/components/schemas/Country'
          - description: The country of your organization.
            example: US
            nullable: true
        default_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The default currency of an organization.
            example: USD
        address_line1:
          description: The first line of your organization’s billing address.
          example: 100 Brex Street
          nullable: true
          type: string
        address_line2:
          description: The second line of your organization’s billing address.
          nullable: true
          type: string
          example: null
        state:
          description: The state of your organization’s billing address.
          example: NYC
          nullable: true
          type: string
        zipcode:
          description: The zipcode of your organization’s billing address.
          example: "10000"
          nullable: true
          type: string
        email:
          description: The email address of your organization used to bill your customers.
          example: brex@brex.com
          format: email
          nullable: true
          type: string
        city:
          description: The city of your organization’s billing address.
          example: New York
          nullable: true
          type: string
        legal_name:
          description: The legal name of your organization.
          nullable: true
          type: string
          example: null
        legal_number:
          description: The legal number of your organization.
          nullable: true
          type: string
          example: null
        net_payment_term:
          description: "The net payment term, expressed in days, specifies the duration\
            \ within which a customer is expected to remit payment after the invoice\
            \ is finalized."
          example: 30
          type: integer
        tax_identification_number:
          description: The tax identification number of your organization.
          example: US123456789
          nullable: true
          type: string
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "Your organization’s timezone, used for billing purposes\
              \ in your own local time. Can be overwritten by the customer’s timezone."
            example: America/New_York
        billing_configuration:
          $ref: '#/components/schemas/OrganizationBillingConfiguration'
        taxes:
          description: List of default organization taxes
          items:
            $ref: '#/components/schemas/TaxObject'
          type: array
      required:
      - billing_configuration
      - created_at
      - email_settings
      - lago_id
      - name
      type: object
    OrganizationUpdateInput:
      example:
        organization:
          country: ""
          legal_number: legal_number
          webhook_url: https://webhook.brex.com
          city: New York
          timezone: ""
          email_settings:
          - invoice.finalized
          - credit_note.created
          billing_configuration:
            document_locale: en
            invoice_footer: This is my customer footer
            invoice_grace_period: 3
          zipcode: "10000"
          address_line2: address_line2
          address_line1: 100 Brex Street
          net_payment_term: 30
          state: NYC
          legal_name: legal_name
          default_currency: ""
          email: brex@brex.com
          tax_identification_number: US123456789
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationUpdateInput_organization'
      required:
      - organization
      type: object
    PaginationMeta:
      example:
        next_page: 3
        total_count: 70
        total_pages: 4
        prev_page: 1
        current_page: 2
      properties:
        current_page:
          description: Current page.
          example: 2
          type: integer
        next_page:
          description: Next page.
          example: 3
          nullable: true
          type: integer
        prev_page:
          description: Previous page.
          example: 1
          nullable: true
          type: integer
        total_pages:
          description: Total number of pages.
          example: 4
          type: integer
        total_count:
          description: Total number of records.
          example: 70
          type: integer
      required:
      - current_page
      - total_count
      - total_pages
      type: object
    Plan:
      example:
        plan:
          code: startup
          amount_cents: 10000
          created_at: 2023-06-27T19:43:42Z
          description: ""
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          draft_invoices_count: 0
          charges:
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            billable_metric_code: requests
            created_at: 2023-06-27T19:43:42Z
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            billable_metric_code: cpu
            created_at: 2023-06-27T19:43:42Z
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - from_value: 0
                to_value: 10
                flat_amount: "10"
                per_unit_amount: "0.5"
              - from_value: 11
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            billable_metric_code: seats
            created_at: 2023-06-27T19:43:42Z
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            billable_metric_code: storage
            created_at: 2023-06-27T19:43:42Z
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            billable_metric_code: payments
            created_at: 2023-06-27T19:43:42Z
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          invoice_display_name: Startup plan
          amount_currency: ""
          bill_charges_monthly: true
          name: Startup
          pay_in_advance: true
          active_subscriptions_count: 0
          interval: monthly
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          trial_period: 5
      properties:
        plan:
          $ref: '#/components/schemas/PlanObject'
      required:
      - plan
      type: object
    PlanCreateInput:
      example:
        plan:
          tax_codes:
          - french_standard_vat
          charges:
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
            tax_codes:
            - french_standard_vat
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - to_value: 10
                from_value: 0
                flat_amount: "10"
                per_unit_amount: "0.5"
              - to_value: null
                from_value: 11
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          code: startup
          invoice_display_name: Startup plan
          amount_cents: 10000
          amount_currency: ""
          bill_charges_monthly: true
          name: Startup
          pay_in_advance: true
          description: Plan for early stage startups.
          interval: monthly
          trial_period: 5
      properties:
        plan:
          $ref: '#/components/schemas/PlanCreateInput_plan'
      required:
      - plan
      type: object
    PlanOverridesObject:
      description: Based plan overrides.
      example:
        tax_codes:
        - french_standard_vat
        charges:
        - tax_codes:
          - french_standard_vat
          invoice_display_name: Setup
          billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group_properties:
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            values: null
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            values: null
          min_amount_cents: 0
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          properties: null
        - tax_codes:
          - french_standard_vat
          invoice_display_name: Setup
          billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group_properties:
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            values: null
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            values: null
          min_amount_cents: 0
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          properties: null
        invoice_display_name: Startup plan
        amount_cents: 10000
        amount_currency: ""
        name: Startup
        description: Plan for early stage startups.
        trial_period: 5
      properties:
        amount_cents:
          description: "The base cost of the plan, excluding any applicable taxes,\
            \ that is billed on a recurring basis. This value is defined at 0 if your\
            \ plan is a pay-as-you-go plan."
          example: 10000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: "The currency of the plan. It indicates the monetary unit\
              \ in which the plan's cost, including taxes and usage-based charges,\
              \ is expressed."
            example: USD
        description:
          description: The description on the plan.
          example: Plan for early stage startups.
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the plan will be used as\
            \ the default display name."
          example: Startup plan
          type: string
        name:
          description: The name of the plan.
          example: Startup
          type: string
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
        trial_period:
          description: The duration in days during which the base cost of the plan
            is offered for free.
          example: 5
          type: number
        charges:
          description: Additional usage-based charges for this plan.
          items:
            $ref: '#/components/schemas/PlanOverridesObject_charges_inner'
          type: array
      type: object
    PlanUpdateInput:
      example:
        plan:
          tax_codes:
          - french_standard_vat
          charges:
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
            tax_codes:
            - french_standard_vat
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - to_value: 10
                from_value: 0
                flat_amount: "10"
                per_unit_amount: "0.5"
              - to_value: null
                from_value: 11
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          code: startup
          invoice_display_name: Startup plan
          amount_cents: 10000
          amount_currency: ""
          bill_charges_monthly: true
          name: Startup
          pay_in_advance: true
          description: Plan for early stage startups.
          interval: monthly
          trial_period: 5
      properties:
        plan:
          $ref: '#/components/schemas/PlanUpdateInput_plan'
      required:
      - plan
      type: object
    PlanObject:
      example:
        code: startup
        amount_cents: 10000
        created_at: 2023-06-27T19:43:42Z
        description: ""
        taxes:
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        draft_invoices_count: 0
        charges:
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
          billable_metric_code: requests
          created_at: 2023-06-27T19:43:42Z
          charge_model: package
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 3000
          properties:
            amount: "30"
            free_units: 100
            package_size: 1000
          group_properties: []
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
          billable_metric_code: cpu
          created_at: 2023-06-27T19:43:42Z
          charge_model: graduated
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 0
          properties:
            graduated_ranges:
            - from_value: 0
              to_value: 10
              flat_amount: "10"
              per_unit_amount: "0.5"
            - from_value: 11
              to_value: null
              flat_amount: "0"
              per_unit_amount: "0.4"
          group_properties: []
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
          billable_metric_code: seats
          created_at: 2023-06-27T19:43:42Z
          charge_model: standard
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: true
          prorated: false
          min_amount_cents: 0
          properties: {}
          group_properties:
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
            invoice_display_name: Europe
            values:
              amount: "10"
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
            invoice_display_name: USA
            values:
              amount: "5"
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
            invoice_display_name: Africa
            values:
              amount: "8"
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
          billable_metric_code: storage
          created_at: 2023-06-27T19:43:42Z
          charge_model: volume
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 0
          properties:
            volume_ranges:
            - from_value: 0
              to_value: 100
              flat_amount: "0"
              per_unit_amount: "0"
            - from_value: 101
              to_value: null
              flat_amount: "0"
              per_unit_amount: "0.5"
          group_properties: []
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
          billable_metric_code: payments
          created_at: 2023-06-27T19:43:42Z
          charge_model: percentage
          invoiceable: false
          invoice_display_name: Setup
          pay_in_advance: true
          prorated: false
          min_amount_cents: 0
          properties:
            rate: "1"
            fixed_amount: "0.5"
            free_units_per_events: 5
            free_units_per_total_aggregation: "500"
          group_properties: []
        invoice_display_name: Startup plan
        amount_currency: ""
        bill_charges_monthly: true
        name: Startup
        pay_in_advance: true
        active_subscriptions_count: 0
        interval: monthly
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        trial_period: 5
      properties:
        lago_id:
          description: Unique identifier of the plan created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: The name of the plan.
          example: Startup
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the plan will be used as\
            \ the default display name."
          example: Startup plan
          type: string
        created_at:
          description: The date and time when the plan was created. It is expressed
            in UTC format according to the ISO 8601 datetime standard. This field
            provides the timestamp for the exact moment when the plan was initially
            created.
          example: 2023-06-27T19:43:42Z
          format: date-time
          type: string
        code:
          description: "The code of the plan. It serves as a unique identifier associated\
            \ with a particular plan. The code is typically used for internal or system-level\
            \ identification purposes, like assigning a subscription, for instance."
          example: startup
          type: string
        interval:
          description: "The interval used for recurring billing. It represents the\
            \ frequency at which subscription billing occurs. The interval can be\
            \ one of the following values: `yearly`, `quarterly`, `monthly` or `weekly`."
          enum:
          - weekly
          - monthly
          - quarterly
          - yearly
          example: monthly
          type: string
        description:
          description: The description on the plan.
          example: ""
          type: string
        amount_cents:
          description: "The base cost of the plan, excluding any applicable taxes,\
            \ that is billed on a recurring basis. This value is defined at 0 if your\
            \ plan is a pay-as-you-go plan."
          example: 10000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: "The currency of the plan. It indicates the monetary unit\
              \ in which the plan's cost, including taxes and usage-based charges,\
              \ is expressed."
            example: USD
        trial_period:
          description: The duration in days during which the base cost of the plan
            is offered for free.
          example: 5
          type: number
        pay_in_advance:
          description: "This field determines the billing timing for the plan. When\
            \ set to `true`, the base cost of the plan is due at the beginning of\
            \ each billing period. Conversely, when set to `false`, the base cost\
            \ of the plan is due at the end of each billing period."
          example: true
          type: boolean
        bill_charges_monthly:
          description: "This field, when set to `true`, enables to invoice usage-based\
            \ charges on monthly basis, even if the cadence of the plan is yearly.\
            \ This allows customers to pay charges overage on a monthly basis. This\
            \ can be set to true only if the plan’s interval is `yearly`."
          nullable: true
          type: boolean
          example: null
        active_subscriptions_count:
          description: "The count of active subscriptions that are currently associated\
            \ with the plan. This field provides valuable information regarding the\
            \ impact of deleting the plan. By checking the value of this field, you\
            \ can determine the number of subscriptions that will be affected if the\
            \ plan is deleted."
          example: 0
          type: integer
        draft_invoices_count:
          description: "The number of draft invoices that include a subscription attached\
            \ to the plan. This field provides valuable information about the impact\
            \ of deleting the plan. By checking the value of this field, you can determine\
            \ the number of draft invoices that will be affected if the plan is deleted."
          example: 0
          type: integer
        charges:
          description: Additional usage-based charges for this plan.
          example:
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            billable_metric_code: requests
            created_at: 2023-06-27T19:43:42Z
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            billable_metric_code: cpu
            created_at: 2023-06-27T19:43:42Z
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - from_value: 0
                to_value: 10
                flat_amount: "10"
                per_unit_amount: "0.5"
              - from_value: 11
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            billable_metric_code: seats
            created_at: 2023-06-27T19:43:42Z
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            billable_metric_code: storage
            created_at: 2023-06-27T19:43:42Z
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            billable_metric_code: payments
            created_at: 2023-06-27T19:43:42Z
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          items:
            $ref: '#/components/schemas/ChargeObject'
          type: array
        taxes:
          description: All taxes applied to the plan.
          items:
            $ref: '#/components/schemas/TaxObject'
          type: array
      required:
      - active_subscriptions_count
      - amount_cents
      - amount_currency
      - code
      - created_at
      - draft_invoices_count
      - interval
      - lago_id
      - name
      type: object
    PlansPaginated:
      example:
        plans:
        - code: startup
          amount_cents: 10000
          created_at: 2023-06-27T19:43:42Z
          description: ""
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          draft_invoices_count: 0
          charges:
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            billable_metric_code: requests
            created_at: 2023-06-27T19:43:42Z
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            billable_metric_code: cpu
            created_at: 2023-06-27T19:43:42Z
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - from_value: 0
                to_value: 10
                flat_amount: "10"
                per_unit_amount: "0.5"
              - from_value: 11
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            billable_metric_code: seats
            created_at: 2023-06-27T19:43:42Z
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            billable_metric_code: storage
            created_at: 2023-06-27T19:43:42Z
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            billable_metric_code: payments
            created_at: 2023-06-27T19:43:42Z
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          invoice_display_name: Startup plan
          amount_currency: ""
          bill_charges_monthly: true
          name: Startup
          pay_in_advance: true
          active_subscriptions_count: 0
          interval: monthly
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          trial_period: 5
        - code: startup
          amount_cents: 10000
          created_at: 2023-06-27T19:43:42Z
          description: ""
          taxes:
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          - applied_to_organization: true
            code: french_standard_vat
            customers_count: 0
            plans_count: 0
            rate: 20
            name: TVA
            add_ons_count: 0
            description: French standard VAT
            created_at: 2023-07-06T14:35:58Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charges_count: 0
          draft_invoices_count: 0
          charges:
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            billable_metric_code: requests
            created_at: 2023-06-27T19:43:42Z
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            billable_metric_code: cpu
            created_at: 2023-06-27T19:43:42Z
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - from_value: 0
                to_value: 10
                flat_amount: "10"
                per_unit_amount: "0.5"
              - from_value: 11
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            billable_metric_code: seats
            created_at: 2023-06-27T19:43:42Z
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            billable_metric_code: storage
            created_at: 2023-06-27T19:43:42Z
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            billable_metric_code: payments
            created_at: 2023-06-27T19:43:42Z
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          invoice_display_name: Startup plan
          amount_currency: ""
          bill_charges_monthly: true
          name: Startup
          pay_in_advance: true
          active_subscriptions_count: 0
          interval: monthly
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          trial_period: 5
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
      properties:
        plans:
          items:
            $ref: '#/components/schemas/PlanObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - plans
      type: object
    Subscription:
      example:
        subscription: null
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionObjectExtended'
      required:
      - subscription
      type: object
    SubscriptionCreateInput:
      example:
        subscription:
          ending_at: 2022-10-08T00:00:00Z
          plan_overrides:
            tax_codes:
            - french_standard_vat
            charges:
            - tax_codes:
              - french_standard_vat
              invoice_display_name: Setup
              billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              group_properties:
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              min_amount_cents: 0
              id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              properties: null
            - tax_codes:
              - french_standard_vat
              invoice_display_name: Setup
              billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              group_properties:
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              min_amount_cents: 0
              id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              properties: null
            invoice_display_name: Startup plan
            amount_cents: 10000
            amount_currency: ""
            name: Startup
            description: Plan for early stage startups.
            trial_period: 5
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          billing_time: anniversary
          name: Repository A
          subscription_at: 2022-08-08T00:00:00Z
          plan_code: premium
          external_id: my_sub_1234567890
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionCreateInput_subscription'
      required:
      - subscription
      type: object
    SubscriptionUpdateInput:
      example:
        subscription:
          ending_at: 2022-10-08T00:00:00Z
          plan_overrides:
            tax_codes:
            - french_standard_vat
            charges:
            - tax_codes:
              - french_standard_vat
              invoice_display_name: Setup
              billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              group_properties:
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              min_amount_cents: 0
              id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              properties: null
            - tax_codes:
              - french_standard_vat
              invoice_display_name: Setup
              billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              group_properties:
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                values: null
              min_amount_cents: 0
              id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              properties: null
            invoice_display_name: Startup plan
            amount_cents: 10000
            amount_currency: ""
            name: Startup
            description: Plan for early stage startups.
            trial_period: 5
          name: Repository B
          subscription_at: 2022-08-08T00:00:00Z
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionUpdateInput_subscription'
      required:
      - subscription
      type: object
    SubscriptionObject:
      example:
        canceled_at: 2022-09-14T16:35:31Z
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        next_plan_code: next_plan_code
        plan_code: premium
        created_at: 2022-08-08T00:00:00Z
        external_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        ending_at: 2022-10-08T00:00:00Z
        downgrade_plan_date: 2000-01-23T04:56:07.000+00:00
        billing_time: anniversary
        name: Repository A
        subscription_at: 2022-08-08T00:00:00Z
        started_at: 2022-08-08T00:00:00Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        previous_plan_code: previous_plan_code
        terminated_at: 2022-09-14T16:35:31Z
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        status: active
      properties:
        lago_id:
          description: Unique identifier assigned to the subscription within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the subscription’s record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_id:
          description: The subscription external unique identifier (provided by your
            own application).
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        lago_customer_id:
          description: Unique identifier assigned to the customer within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the customer's record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application).
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        billing_time:
          description: "The billing time for the subscription, which can be set as\
            \ either `anniversary` or `calendar`. If not explicitly provided, it will\
            \ default to `calendar`. The billing time determines the timing of recurring\
            \ billing cycles for the subscription. By specifying `anniversary`, the\
            \ billing cycle will be based on the specific date the subscription started\
            \ (billed fully), while `calendar` sets the billing cycle at the first\
            \ day of the week/month/year (billed with proration)."
          enum:
          - calendar
          - anniversary
          example: anniversary
          type: string
        name:
          description: "The display name of the subscription on an invoice. This field\
            \ allows for customization of the subscription's name for billing purposes,\
            \ especially useful when a single customer has multiple subscriptions\
            \ using the same plan."
          example: Repository A
          nullable: true
          type: string
        plan_code:
          description: The unique code representing the plan to be attached to the
            customer. This code must correspond to the `code` property of one of the
            active plans.
          example: premium
          type: string
        status:
          description: |-
            The status of the subscription, which can have the following values:
            - `pending`: a previous subscription has been downgraded, and the current one is awaiting automatic activation at the end of the billing period.
            - `active`: the subscription is currently active and applied to the customer.
            - `terminated`: the subscription is no longer active.
            - `canceled`: the subscription has been stopped before its activation. This can occur when two consecutive downgrades have been applied to a customer or when a subscription with a pending status is terminated.
          enum:
          - active
          - pending
          - terminated
          - canceled
          example: active
          type: string
        created_at:
          description: "The creation date of the subscription, represented in ISO\
            \ 8601 datetime format and expressed in Coordinated Universal Time (UTC).\
            \ This date provides a timestamp indicating when the subscription was\
            \ initially created."
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
        canceled_at:
          description: The cancellation date of the subscription. This field is not
            null when the subscription is `canceled`. This date should be provided
            in ISO 8601 datetime format and expressed in Coordinated Universal Time
            (UTC).
          example: 2022-09-14T16:35:31Z
          format: date-time
          nullable: true
          type: string
        started_at:
          description: The effective start date of the subscription. This field can
            be null if the subscription is `pending` or `canceled`. This date should
            be provided in ISO 8601 datetime format and expressed in Coordinated Universal
            Time (UTC).
          example: 2022-08-08T00:00:00Z
          format: date-time
          nullable: true
          type: string
        ending_at:
          description: "The effective end date of the subscription. If this field\
            \ is set to null, the subscription will automatically renew. This date\
            \ should be provided in ISO 8601 datetime format, and use Coordinated\
            \ Universal Time (UTC)."
          example: 2022-10-08T00:00:00Z
          format: date-time
          type: string
        subscription_at:
          description: The anniversary date and time of the initial subscription.
            This date serves as the basis for billing subscriptions with `anniversary`
            billing time. The `anniversary_date` should be provided in ISO 8601 datetime
            format and expressed in Coordinated Universal Time (UTC).
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
        terminated_at:
          description: The termination date of the subscription. This field is not
            null when the subscription is `terminated`. This date should be provided
            in ISO 8601 datetime format and expressed in Coordinated Universal Time
            (UTC)
          example: 2022-09-14T16:35:31Z
          format: date-time
          nullable: true
          type: string
        previous_plan_code:
          description: The code identifying the previous plan associated with this
            subscription.
          nullable: true
          type: string
          example: null
        next_plan_code:
          description: The code identifying the next plan in the case of a downgrade.
          nullable: true
          type: string
          example: null
        downgrade_plan_date:
          description: "The date when the plan will be downgraded, represented in\
            \ ISO 8601 date format."
          format: date-time
          nullable: true
          type: string
          example: null
      required:
      - billing_time
      - created_at
      - external_customer_id
      - external_id
      - lago_customer_id
      - lago_id
      - plan_code
      - status
      - subscription_at
      type: object
    SubscriptionObjectExtended:
      allOf:
      - $ref: '#/components/schemas/SubscriptionObject'
      - properties:
          plan:
            $ref: '#/components/schemas/PlanObject'
        type: object
    SubscriptionsPaginated:
      example:
        subscriptions:
        - canceled_at: 2022-09-14T16:35:31Z
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          next_plan_code: next_plan_code
          plan_code: premium
          created_at: 2022-08-08T00:00:00Z
          external_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          ending_at: 2022-10-08T00:00:00Z
          downgrade_plan_date: 2000-01-23T04:56:07.000+00:00
          billing_time: anniversary
          name: Repository A
          subscription_at: 2022-08-08T00:00:00Z
          started_at: 2022-08-08T00:00:00Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          previous_plan_code: previous_plan_code
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
        - canceled_at: 2022-09-14T16:35:31Z
          external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          next_plan_code: next_plan_code
          plan_code: premium
          created_at: 2022-08-08T00:00:00Z
          external_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          ending_at: 2022-10-08T00:00:00Z
          downgrade_plan_date: 2000-01-23T04:56:07.000+00:00
          billing_time: anniversary
          name: Repository A
          subscription_at: 2022-08-08T00:00:00Z
          started_at: 2022-08-08T00:00:00Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          previous_plan_code: previous_plan_code
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/SubscriptionObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - subscriptions
      type: object
    Tax:
      example:
        tax:
          applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
      properties:
        tax:
          $ref: '#/components/schemas/TaxObject'
      required:
      - tax
      type: object
    TaxBaseInput:
      properties:
        name:
          description: Name of the tax.
          example: TVA
          type: string
        code:
          description: Unique code used to identify the tax associated with the API
            request.
          example: french_standard_vat
          type: string
        rate:
          description: The percentage rate of the tax
          example: "20.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        description:
          description: Internal description of the taxe
          example: French standard VAT
          nullable: true
          type: string
        applied_to_organization:
          description: Set to `true` if the tax is used as one of the organization's
            default
          example: true
          type: boolean
      type: object
    TaxCreateInput:
      example:
        tax: null
      properties:
        tax:
          $ref: '#/components/schemas/TaxCreateInput_tax'
      required:
      - tax
      type: object
    TaxesPaginated:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        taxes:
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
        - applied_to_organization: true
          code: french_standard_vat
          customers_count: 0
          plans_count: 0
          rate: 20
          name: TVA
          add_ons_count: 0
          description: French standard VAT
          created_at: 2023-07-06T14:35:58Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charges_count: 0
      properties:
        taxes:
          items:
            $ref: '#/components/schemas/TaxObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - taxes
      type: object
    TaxObject:
      example:
        applied_to_organization: true
        code: french_standard_vat
        customers_count: 0
        plans_count: 0
        rate: 20
        name: TVA
        add_ons_count: 0
        description: French standard VAT
        created_at: 2023-07-06T14:35:58Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        charges_count: 0
      properties:
        lago_id:
          description: "Unique identifier of the tax, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: Name of the tax.
          example: TVA
          type: string
        code:
          description: Unique code used to identify the tax associated with the API
            request.
          example: french_standard_vat
          type: string
        description:
          description: Internal description of the taxe
          example: French standard VAT
          type: string
        rate:
          description: The percentage rate of the tax
          example: 20
          type: number
        applied_to_organization:
          description: Set to `true` if the tax is used as one of the organization's
            default
          example: true
          type: boolean
        add_ons_count:
          description: Number of add-ons this tax is applied to.
          example: 0
          type: integer
        charges_count:
          description: Number of charges this tax is applied to.
          example: 0
          type: integer
        customers_count:
          description: Number of customers this tax is applied to (directly or via
            the organization's default).
          example: 0
          type: integer
        plans_count:
          description: Number of plans this tax is applied to.
          example: 0
          type: integer
        created_at:
          description: Creation date of the tax.
          example: 2023-07-06T14:35:58Z
          format: date-time
          type: string
      required:
      - applied_to_organization
      - code
      - created_at
      - customers_count
      - lago_id
      - name
      - rate
      type: object
    TaxUpdateInput:
      example:
        tax: ""
      properties:
        tax:
          allOf:
          - $ref: '#/components/schemas/TaxBaseInput'
      required:
      - tax
      type: object
    Timezone:
      enum:
      - UTC
      - Africa/Algiers
      - Africa/Cairo
      - Africa/Casablanca
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Monrovia
      - Africa/Nairobi
      - America/Argentina/Buenos_Aires
      - America/Bogota
      - America/Caracas
      - America/Chicago
      - America/Chihuahua
      - America/Denver
      - America/Godthab
      - America/Guatemala
      - America/Guyana
      - America/Halifax
      - America/Indiana/Indianapolis
      - America/Juneau
      - America/La_Paz
      - America/Lima
      - America/Los_Angeles
      - America/Mazatlan
      - America/Mexico_City
      - America/Monterrey
      - America/Montevideo
      - America/New_York
      - America/Phoenix
      - America/Puerto_Rico
      - America/Regina
      - America/Santiago
      - America/Sao_Paulo
      - America/St_Johns
      - America/Tijuana
      - Asia/Almaty
      - Asia/Baghdad
      - Asia/Baku
      - Asia/Bangkok
      - Asia/Chongqing
      - Asia/Colombo
      - Asia/Dhaka
      - Asia/Hong_Kong
      - Asia/Irkutsk
      - Asia/Jakarta
      - Asia/Jerusalem
      - Asia/Kabul
      - Asia/Kamchatka
      - Asia/Karachi
      - Asia/Kathmandu
      - Asia/Kolkata
      - Asia/Krasnoyarsk
      - Asia/Kuala_Lumpur
      - Asia/Kuwait
      - Asia/Magadan
      - Asia/Muscat
      - Asia/Novosibirsk
      - Asia/Rangoon
      - Asia/Riyadh
      - Asia/Seoul
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Srednekolymsk
      - Asia/Taipei
      - Asia/Tashkent
      - Asia/Tbilisi
      - Asia/Tehran
      - Asia/Tokyo
      - Asia/Ulaanbaatar
      - Asia/Urumqi
      - Asia/Vladivostok
      - Asia/Yakutsk
      - Asia/Yekaterinburg
      - Asia/Yerevan
      - Atlantic/Azores
      - Atlantic/Cape_Verde
      - Atlantic/South_Georgia
      - Australia/Adelaide
      - Australia/Brisbane
      - Australia/Darwin
      - Australia/Hobart
      - Australia/Melbourne
      - Australia/Perth
      - Australia/Sydney
      - Europe/Amsterdam
      - Europe/Athens
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Bucharest
      - Europe/Budapest
      - Europe/Copenhagen
      - Europe/Dublin
      - Europe/Helsinki
      - Europe/Istanbul
      - Europe/Kaliningrad
      - Europe/Kiev
      - Europe/Lisbon
      - Europe/Ljubljana
      - Europe/London
      - Europe/Madrid
      - Europe/Minsk
      - Europe/Moscow
      - Europe/Paris
      - Europe/Prague
      - Europe/Riga
      - Europe/Rome
      - Europe/Samara
      - Europe/Sarajevo
      - Europe/Skopje
      - Europe/Sofia
      - Europe/Stockholm
      - Europe/Tallinn
      - Europe/Vienna
      - Europe/Vilnius
      - Europe/Volgograd
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zurich
      - GMT+12
      - Pacific/Apia
      - Pacific/Auckland
      - Pacific/Chatham
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Guadalcanal
      - Pacific/Guam
      - Pacific/Honolulu
      - Pacific/Majuro
      - Pacific/Midway
      - Pacific/Noumea
      - Pacific/Pago_Pago
      - Pacific/Port_Moresby
      - Pacific/Tongatapu
      example: America/Los_Angeles
      type: string
    Wallet:
      example:
        wallet:
          external_customer_id: hooli_1234
          credits_balance: "28.0"
          created_at: 2022-04-29T08:59:51Z
          name: Prepaid
          rate_amount: "1.5"
          currency: ""
          consumed_credits: "2.0"
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2000-01-23T04:56:07.000+00:00
          last_consumed_credit_at: 2022-04-29T08:59:51Z
          last_balance_sync_at: 2022-04-29T08:59:51Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
          balance_cents: 1000
      properties:
        wallet:
          $ref: '#/components/schemas/WalletObject'
      required:
      - wallet
      type: object
    WalletCreateInput:
      example:
        wallet:
          external_customer_id: hooli_1234
          name: Prepaid
          rate_amount: "1.5"
          currency: ""
          expiration_at: 2022-07-07T23:59:59Z
          paid_credits: "20.0"
          granted_credits: "10.0"
      properties:
        wallet:
          $ref: '#/components/schemas/WalletCreateInput_wallet'
      type: object
    WalletObject:
      example:
        external_customer_id: hooli_1234
        credits_balance: "28.0"
        created_at: 2022-04-29T08:59:51Z
        name: Prepaid
        rate_amount: "1.5"
        currency: ""
        consumed_credits: "2.0"
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        expiration_at: 2000-01-23T04:56:07.000+00:00
        last_consumed_credit_at: 2022-04-29T08:59:51Z
        last_balance_sync_at: 2022-04-29T08:59:51Z
        terminated_at: 2022-09-14T16:35:31Z
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        status: active
        balance_cents: 1000
      properties:
        lago_id:
          description: Unique identifier assigned to the wallet within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the wallet’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_customer_id:
          description: Unique identifier assigned to the customer within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the customer’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: hooli_1234
          type: string
        status:
          description: The status of the wallet. Possible values are `active` or `terminated`.
          enum:
          - active
          - terminated
          example: active
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the wallet.
            example: USD
        name:
          description: The name of the wallet.
          example: Prepaid
          type: string
        rate_amount:
          description: The rate of conversion between credits and the amount in the
            specified currency. It indicates the ratio or factor used to convert credits
            into the corresponding monetary value in the currency of the transaction.
          example: "1.5"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        credits_balance:
          description: The current wallet balance expressed in credits.
          example: "28.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        balance_cents:
          description: The current wallet balance expressed in cents.
          example: 1000
          type: integer
        consumed_credits:
          description: The number of consumed credits.
          example: "2.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        created_at:
          description: "The date of the wallet creation, represented in ISO 8601 datetime\
            \ format and expressed in Coordinated Universal Time (UTC)."
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        expiration_at:
          description: The date and time that determines when the wallet will expire.
            It follows the ISO 8601 datetime format and is expressed in Coordinated
            Universal Time (UTC).
          format: date-time
          nullable: true
          type: string
          example: null
        last_balance_sync_at:
          description: The date and time of the last balance top-up. It follows the
            ISO 8601 datetime format and is expressed in Coordinated Universal Time
            (UTC).
          example: 2022-04-29T08:59:51Z
          format: date-time
          nullable: true
          type: string
        last_consumed_credit_at:
          description: The date and time of the last credits consumption. It follows
            the ISO 8601 datetime format and is expressed in Coordinated Universal
            Time (UTC).
          example: 2022-04-29T08:59:51Z
          format: date-time
          nullable: true
          type: string
        terminated_at:
          description: The date of terminaison of the wallet. It follows the ISO 8601
            datetime format and is expressed in Coordinated Universal Time (UTC).
          example: 2022-09-14T16:35:31Z
          format: date-time
          nullable: true
          type: string
      required:
      - balance
      - balance_cents
      - consumed_credits
      - created_at
      - credits_balance
      - currency
      - external_customer_id
      - lago_customer_id
      - lago_id
      - rate_amount
      - status
      type: object
    WalletsPaginated:
      example:
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
        wallets:
        - external_customer_id: hooli_1234
          credits_balance: "28.0"
          created_at: 2022-04-29T08:59:51Z
          name: Prepaid
          rate_amount: "1.5"
          currency: ""
          consumed_credits: "2.0"
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2000-01-23T04:56:07.000+00:00
          last_consumed_credit_at: 2022-04-29T08:59:51Z
          last_balance_sync_at: 2022-04-29T08:59:51Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
          balance_cents: 1000
        - external_customer_id: hooli_1234
          credits_balance: "28.0"
          created_at: 2022-04-29T08:59:51Z
          name: Prepaid
          rate_amount: "1.5"
          currency: ""
          consumed_credits: "2.0"
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2000-01-23T04:56:07.000+00:00
          last_consumed_credit_at: 2022-04-29T08:59:51Z
          last_balance_sync_at: 2022-04-29T08:59:51Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
          balance_cents: 1000
      properties:
        wallets:
          items:
            $ref: '#/components/schemas/WalletObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - wallets
      type: object
    WalletTransactionCreateInput:
      example:
        wallet_transaction:
          wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          paid_credits: "20.0"
          granted_credits: "10.0"
      properties:
        wallet_transaction:
          $ref: '#/components/schemas/WalletTransactionCreateInput_wallet_transaction'
      required:
      - wallet_transaction
      type: object
    WalletTransactionObject:
      example:
        lago_wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount: "10.0"
        credit_amount: "100.0"
        created_at: 2022-04-29T08:59:51Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        settled_at: 2022-04-29T08:59:51Z
        transaction_type: inbound
        status: settled
      properties:
        lago_id:
          description: Unique identifier assigned to the wallet transaction within
            the Lago application. This ID is exclusively created by Lago and serves
            as a unique identifier for the wallet transaction’s record within the
            Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_wallet_id:
          description: Unique identifier assigned to the wallet within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the wallet’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        status:
          description: The status of the wallet transaction. Possible values are `pending`
            or `settled`.
          enum:
          - pending
          - settled
          example: settled
          type: string
        transaction_type:
          description: The type of transaction. Possible values are `inbound` (increasing
            the balance) or `outbound` (decreasing the balance).
          enum:
          - inbound
          - outbound
          example: inbound
          type: string
        amount:
          description: The amount of credits based on the rate and the currency.
          example: "10.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        credit_amount:
          description: The number of credits used in the wallet transaction.
          example: "100.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        settled_at:
          description: "The date when wallet transaction is settled, represented in\
            \ ISO 8601 datetime format and expressed in Coordinated Universal Time\
            \ (UTC)."
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
        created_at:
          description: "The date of the wallet transaction creation, represented in\
            \ ISO 8601 datetime format and expressed in Coordinated Universal Time\
            \ (UTC)."
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
      required:
      - amount
      - created_at
      - credit_amount
      - lago_id
      - lago_wallet_id
      - status
      - transaction_type
      type: object
    WalletTransactions:
      example:
        wallet_transactions:
        - lago_wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount: "10.0"
          credit_amount: "100.0"
          created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          settled_at: 2022-04-29T08:59:51Z
          transaction_type: inbound
          status: settled
        - lago_wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount: "10.0"
          credit_amount: "100.0"
          created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          settled_at: 2022-04-29T08:59:51Z
          transaction_type: inbound
          status: settled
      properties:
        wallet_transactions:
          items:
            $ref: '#/components/schemas/WalletTransactionObject'
          type: array
      required:
      - wallet_transactions
      type: object
    WalletTransactionsPaginated:
      allOf:
      - $ref: '#/components/schemas/WalletTransactions'
      - properties:
          meta:
            $ref: '#/components/schemas/PaginationMeta'
        required:
        - meta
        type: object
    WalletUpdateInput:
      example:
        wallet:
          name: new_name
          expiration_at: 2022-07-07T23:59:59Z
      properties:
        wallet:
          $ref: '#/components/schemas/WalletUpdateInput_wallet'
      required:
      - wallet
      type: object
    WebhookEndpoint:
      example:
        webhook_endpoint:
          webhook_url: Prepaid
          lago_organization_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          signature_algo: hmac
      properties:
        webhook_endpoint:
          $ref: '#/components/schemas/WebhookEndpointObject'
      required:
      - webhook_endpoint
      type: object
    WebhookEndpointCreateInput:
      example:
        webhook_endpoint:
          webhook_url: https://foo.bar
          signature_algo: hmac
      properties:
        webhook_endpoint:
          $ref: '#/components/schemas/WebhookEndpointCreateInput_webhook_endpoint'
      type: object
    WebhookEndpointObject:
      example:
        webhook_url: Prepaid
        lago_organization_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        created_at: 2022-04-29T08:59:51Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        signature_algo: hmac
      properties:
        lago_id:
          description: Unique identifier assigned to the wallet within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the webhook endpoint's record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_organization_id:
          description: Unique identifier assigned to the organization attached to
            the webhook endpoint within the Lago application. This ID is exclusively
            created by Lago and serves as a unique identifier for the organization’s
            record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        webhook_url:
          description: The name of the wallet.
          example: Prepaid
          type: string
        signature_algo:
          description: The signature algo for the webhook.
          enum:
          - jwt
          - hmac
          example: hmac
          type: string
        created_at:
          description: "The date of the webhook endpoint creation, represented in\
            \ ISO 8601 datetime format and expressed in Coordinated Universal Time\
            \ (UTC)."
          example: 2022-04-29T08:59:51Z
          format: date-time
          type: string
      required:
      - created_at
      - lago_id
      - lago_organization_id
      - webhook_url
      type: object
    WebhookEndpointsPaginated:
      example:
        webhook_endpoints:
        - webhook_url: Prepaid
          lago_organization_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          signature_algo: hmac
        - webhook_url: Prepaid
          lago_organization_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          created_at: 2022-04-29T08:59:51Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          signature_algo: hmac
        meta:
          next_page: 3
          total_count: 70
          total_pages: 4
          prev_page: 1
          current_page: 2
      properties:
        webhook_endpoints:
          items:
            $ref: '#/components/schemas/WebhookEndpointObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - webhook_endpoints
      type: object
    WebhookEndpointUpdateInput:
      example:
        webhook_endpoint:
          webhook_url: https://foo.bar
          signature_algo: hmac
      properties:
        webhook_endpoint:
          $ref: '#/components/schemas/WebhookEndpointCreateInput_webhook_endpoint'
      type: object
    getCustomerPortalUrl_200_response_customer:
      example:
        portal_url: https://app.lago.com/customer-portal/1234567890
      properties:
        portal_url:
          description: An embeddable link for displaying a customer portal
          example: https://app.lago.com/customer-portal/1234567890
          type: string
      required:
      - portal_url
      type: object
    getCustomerPortalUrl_200_response:
      example:
        customer:
          portal_url: https://app.lago.com/customer-portal/1234567890
      properties:
        customer:
          $ref: '#/components/schemas/getCustomerPortalUrl_200_response_customer'
      required:
      - customer
      type: object
    generateCustomerCheckoutURL_200_response:
      description: "."
      example:
        checkout_url: https://foo.bar
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        payment_provider: stripe
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_customer_id:
          description: Unique identifier assigned to the customer within the Lago
            application. This ID is exclusively created by Lago and serves as a unique
            identifier for the customer's record within the Lago system
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          type: string
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        payment_provider:
          description: The Payment Provider name linked to the Customer.
          example: stripe
          type: string
        checkout_url:
          description: The new generated Payment Provider Checkout URL for the Customer.
          example: https://foo.bar
          type: string
      type: object
    AddOnCreateInput_add_on:
      allOf:
      - $ref: '#/components/schemas/AddOnBaseInput'
      - required:
        - amount_cents
        - amount_currency
        - code
        - name
    AppliedCouponInput_applied_coupon:
      example:
        coupon_code: startup_deal
        amount_cents: 2000
        percentage_rate: percentage_rate
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        frequency_duration: 3
        amount_currency: ""
        frequency: recurring
      properties:
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        coupon_code:
          description: Unique code used to identify the coupon.
          example: startup_deal
          type: string
        frequency:
          description: |-
            The type of frequency for the coupon. It can have three possible values: `once`, `recurring` or `forever`.

            - If set to `once`, the coupon is applicable only for a single use.
            - If set to `recurring`, the coupon can be used multiple times for recurring billing periods.
            - If set to `forever`, the coupon has unlimited usage and can be applied indefinitely.
          enum:
          - once
          - recurring
          example: recurring
          nullable: true
          type: string
        frequency_duration:
          description: Specifies the number of billing periods to which the coupon
            applies. This field is required only for coupons with a `recurring` frequency
            type
          example: 3
          nullable: true
          type: integer
        amount_cents:
          description: The amount of the coupon in cents. This field is required only
            for coupon with `fixed_amount` type.
          example: 2000
          nullable: true
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the coupon. This field is required only for
              coupon with `fixed_amount` type.
            example: EUR
            nullable: true
        percentage_rate:
          description: The percentage rate of the coupon. This field is required only
            for coupons with a `percentage` coupon type.
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
          example: null
      required:
      - coupon_code
      - external_customer_id
      type: object
    BillableMetricCreateInput_billable_metric:
      allOf:
      - $ref: '#/components/schemas/BillableMetricBaseInput'
      - required:
        - aggregation_type
        - code
        - name
    BillableMetricGroup_values_inner_oneOf:
      description: Second dimension of group.
      properties:
        key:
          description: Name of the event property used to group values.
          example: region
          type: string
        values:
          description: Array of strings representing all possible values.
          example:
          - us-east-1
          - us-east-2
          - eu-west-1
          items:
            type: string
          type: array
      required:
      - key
      - values
      type: object
    BillableMetricGroup_values_inner:
      oneOf:
      - type: string
      - $ref: '#/components/schemas/BillableMetricGroup_values_inner_oneOf'
    ChargeObject_properties:
      allOf:
      - $ref: '#/components/schemas/ChargeProperties'
      - description: List of all thresholds utilized for calculating the charge.
    ChargeProperties_graduated_ranges_inner:
      properties:
        from_value:
          description: Specifies the lower value of a tier for a `graduated` charge
            model. It must be either 0 or the previous range's `to_value + 1` to maintain
            the proper sequence of values.
          example: 0
          type: integer
        to_value:
          description: |-
            Specifies the highest value of a tier for a `graduated` charge model.
            - This value must be higher than the from_value of the same tier.
            - This value must be null for the last tier.
          example: 10
          nullable: true
          type: integer
        flat_amount:
          description: "The flat amount for a whole tier, excluding tax, for a `graduated`\
            \ charge model. It is expressed as a decimal value."
          example: "10"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        per_unit_amount:
          description: "The unit price, excluding tax, for a specific tier of a `graduated`\
            \ charge model. It is expressed as a decimal value."
          example: "0.5"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
      required:
      - flat_amount
      - from_value
      - per_unit_amount
      - to_value
      type: object
    ChargeProperties_graduated_percentage_ranges_inner:
      properties:
        from_value:
          description: Specifies the lower value of a tier for a `graduated_percentage`
            charge model. It must be either 0 or the previous range's `to_value +
            1` to maintain the proper sequence of values.
          example: 0
          type: integer
        to_value:
          description: |-
            Specifies the highest value of a tier for a `graduated_percentage` charge model.
            - This value must be higher than the from_value of the same tier.
            - This value must be null for the last tier.
          example: 10
          nullable: true
          type: integer
        rate:
          description: The percentage rate that is applied to the amount of each transaction
            in the tier for a `graduated_percentage` charge model. It is expressed
            as a decimal value.
          example: "1"
          format: "^[0-9]+.?[0-9]*$"
          type: string
        flat_amount:
          description: "The flat amount for a whole tier, excluding tax, for a `graduated_percentage`\
            \ charge model. It is expressed as a decimal value."
          example: "10"
          format: "^[0-9]+.?[0-9]*$"
          type: string
      required:
      - flat_amount
      - from_value
      - rate
      - to_value
      type: object
    ChargeProperties_volume_ranges_inner:
      properties:
        from_value:
          description: Specifies the lower value of a tier for a `volume` charge model.
            It must be either 0 or the previous range's `to_value + 1` to maintain
            the proper sequence of values.
          example: 0
          type: integer
        to_value:
          description: |-
            Specifies the highest value of a tier for a `volume` charge model.
            - This value must be higher than the `from_value` of the same tier.
            - This value must be `null` for the last tier.
          example: 10
          nullable: true
          type: integer
        flat_amount:
          description: "The unit price, excluding tax, for a specific tier of a `volume`\
            \ charge model. It is expressed as a decimal value."
          example: "10"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        per_unit_amount:
          description: "The flat amount for a whole tier, excluding tax, for a `volume`\
            \ charge model. It is expressed as a decimal value."
          example: "0.5"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
      required:
      - flat_amount
      - from_value
      - per_unit_amount
      - to_value
      type: object
    CouponBaseInput_applies_to:
      description: Set coupon limitations to plans or specific metrics.
      nullable: true
      properties:
        plan_codes:
          description: "An array of plan codes to which the coupon is applicable.\
            \ By specifying the plan codes in this field, you can restrict the coupon's\
            \ usage to specific plans only."
          example:
          - startup_plan
          items:
            type: string
          nullable: true
          type: array
        billable_metric_codes:
          description: "An array of billable metric codes to which the coupon is applicable.\
            \ By specifying the billable metric codes in this field, you can restrict\
            \ the coupon's usage to specific metrics only."
          example: []
          items:
            type: string
          nullable: true
          type: array
      type: object
    CouponCreateInput_coupon:
      allOf:
      - $ref: '#/components/schemas/CouponBaseInput'
      - required:
        - code
        - coupon_type
        - frequency
        - name
    CreditNoteEstimateInput_credit_note_items_inner:
      properties:
        fee_id:
          description: "The fee unique identifier, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        amount_cents:
          description: "The amount of the credit note item, expressed in cents."
          example: 10
          type: integer
      required:
      - amount_cents
      - fee_id
      type: object
    CreditNoteEstimateInput_credit_note:
      example:
        invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        items:
        - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 10
        - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
          amount_cents: 5
      properties:
        invoice_id:
          description: "The invoice unique identifier, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        items:
          description: The list of credit note’s items.
          example:
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 10
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            amount_cents: 5
          items:
            $ref: '#/components/schemas/CreditNoteEstimateInput_credit_note_items_inner'
          type: array
      required:
      - invoice_id
      - items
      type: object
    CreditNoteEstimated_estimated_credit_note_items_inner:
      example:
        lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount_cents: 100
      properties:
        amount_cents:
          description: "The credit note’s item amount, expressed in cents."
          example: 100
          type: integer
        lago_fee_id:
          description: Unique identifier assigned to the fee within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the fee’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          nullable: true
          type: string
      required:
      - amount_cents
      - lago_fee_id
      type: object
    CreditNoteEstimated_estimated_credit_note_applied_taxes_inner:
      example:
        tax_code: french_standard_vat
        amount_cents: 2000
        tax_name: TVA
        amount_currency: ""
        lago_tax_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        tax_description: French standard VAT
        base_amount_cents: 100
        tax_rate: 20
      properties:
        lago_tax_id:
          description: "Unique identifier of the tax, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        tax_name:
          description: Name of the tax.
          example: TVA
          type: string
        tax_code:
          description: Unique code used to identify the tax associated with the API
            request.
          example: french_standard_vat
          type: string
        tax_rate:
          description: The percentage rate of the tax
          example: 20
          type: number
        tax_description:
          description: Internal description of the taxe
          example: French standard VAT
          type: string
        base_amount_cents:
          example: 100
          type: integer
        amount_cents:
          description: Amount of the tax
          example: 2000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: Currency of the tax
            example: USD
      type: object
    CreditNoteEstimated_estimated_credit_note:
      example:
        taxes_amount_cents: 20
        taxes_rate: 20
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        max_creditable_amount_cents: 100
        max_refundable_amount_cents: 0
        currency: ""
        applied_taxes:
        - tax_code: french_standard_vat
          amount_cents: 2000
          tax_name: TVA
          amount_currency: ""
          lago_tax_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          tax_description: French standard VAT
          base_amount_cents: 100
          tax_rate: 20
        - tax_code: french_standard_vat
          amount_cents: 2000
          tax_name: TVA
          amount_currency: ""
          lago_tax_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          tax_description: French standard VAT
          base_amount_cents: 100
          tax_rate: 20
        sub_total_excluding_taxes_amount_cents: 100
        invoice_number: LAG-1234
        items:
        - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 100
        - lago_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 100
        coupons_adjustment_amount_cents: 20
      properties:
        lago_invoice_id:
          description: Unique identifier assigned to the invoice that the credit note
            belongs to
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        invoice_number:
          description: "The invoice unique number, related to the credit note."
          example: LAG-1234
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the credit note.
            example: EUR
        taxes_amount_cents:
          description: "The tax amount of the credit note, expressed in cents."
          example: 20
          type: integer
        taxes_rate:
          description: The tax rate associated with this specific credit note.
          example: 20
          type: number
        sub_total_excluding_taxes_amount_cents:
          description: "The subtotal of the credit note excluding any applicable taxes,\
            \ expressed in cents."
          example: 100
          type: integer
        max_creditable_amount_cents:
          description: "The credited amount of the credit note, expressed in cents."
          example: 100
          type: integer
        max_refundable_amount_cents:
          description: "The refunded amount of the credit note, expressed in cents."
          example: 0
          type: integer
        coupons_adjustment_amount_cents:
          description: The pro-rated amount of the coupons applied to the source invoice.
          example: 20
          type: integer
        items:
          description: Array of credit note’s items.
          items:
            $ref: '#/components/schemas/CreditNoteEstimated_estimated_credit_note_items_inner'
          type: array
        applied_taxes:
          items:
            $ref: '#/components/schemas/CreditNoteEstimated_estimated_credit_note_applied_taxes_inner'
          type: array
      required:
      - coupons_adjustment_amount_cents
      - currency
      - invoice_number
      - items
      - lago_invoice_id
      - max_creditable_amount_cents
      - max_refundable_amount_cents
      - sub_total_excluding_taxes_amount_cents
      - taxes_amount_cents
      - taxes_rate
      type: object
    CreditObject_item:
      description: The item attached to the credit.
      properties:
        lago_item_id:
          description: Unique identifier assigned to the credit item within the Lago
            application.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        type:
          description: The type of credit applied. Possible values are `coupon` or
            `credit_note`.
          enum:
          - coupon
          - credit_note
          example: coupon
          type: string
        code:
          description: The code of the credit applied. It can be the code of the coupon
            attached to the credit or the credit note's number.
          example: startup_deal
          type: string
        name:
          description: The name of the credit applied. It can be the name of the coupon
            attached to the credit or the initial invoice's number linked to the credit
            note.
          example: Startup Deal
          type: string
      required:
      - code
      - lago_item_id
      - name
      - type
      type: object
    CreditObject_invoice:
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        payment_status:
          enum:
          - pending
          - succeeded
          - failed
          example: succeeded
          type: string
      required:
      - lago_id
      - payment_status
      type: object
    CreditNoteItemObject_fee:
      allOf:
      - $ref: '#/components/schemas/FeeObject'
      - description: The fee object related to the credit note item.
    CreditNoteCreateInput_credit_note:
      example:
        reason: duplicated_charge
        credit_amount_cents: 10
        invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        description: description
        refund_amount_cents: 5
        items:
        - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 10
        - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
          amount_cents: 5
      properties:
        invoice_id:
          description: "The invoice unique identifier, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        reason:
          description: |-
            The reason of the credit note creation.
            Possible values are `duplicated_charge`, `product_unsatisfactory`, `order_change`, `order_cancellation`, `fraudulent_charge` or `other`.
          enum:
          - duplicated_charge
          - product_unsatisfactory
          - order_change
          - order_cancellation
          - fraudulent_charge
          - other
          example: duplicated_charge
          nullable: true
          type: string
        description:
          description: The description of the credit note.
          example: description
          type: string
        credit_amount_cents:
          description: The total amount to be credited on the customer balance.
          example: 10
          nullable: true
          type: integer
        refund_amount_cents:
          description: The total amount to be refunded to the customer.
          example: 5
          nullable: true
          type: integer
        items:
          description: The list of credit note’s items.
          example:
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 10
          - fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            amount_cents: 5
          items:
            $ref: '#/components/schemas/CreditNoteEstimateInput_credit_note_items_inner'
          type: array
      required:
      - invoice_id
      - items
      type: object
    CreditNoteUpdateInput_credit_note:
      example:
        refund_status: succeeded
      properties:
        refund_status:
          description: |-
            The status of the refund portion of the credit note. It indicates the current state or condition of the refund associated with the credit note. The possible values for this field are:

            - `pending`: this status indicates that the refund is pending execution. The refund request has been initiated but has not been processed or completed yet.
            - `succeeded`: this status indicates that the refund has been successfully executed. The refund amount has been processed and returned to the customer or the designated recipient.
            - `failed`: this status indicates that the refund failed to execute. The refund request encountered an error or unsuccessful processing, and the refund amount could not be returned.
          enum:
          - pending
          - succeeded
          - failed
          example: succeeded
          type: string
      required:
      - refund_status
      type: object
    CustomerChargeUsageObject_charge:
      description: Object listing all the properties for a specific charge item.
      example:
        invoice_display_name: Setup
        charge_model: graduated
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          description: Unique identifier assigned to the charge within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the charge’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        charge_model:
          description: "The pricing model applied to this charge. Possible values\
            \ are standard, `graduated`, `percentage`, `package` or `volume`."
          enum:
          - standard
          - graduated
          - package
          - percentage
          - volume
          example: graduated
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup
          type: string
      required:
      - charge_model
      - lago_id
      type: object
    CustomerChargeUsageObject_billable_metric:
      description: The related billable metric object.
      example:
        aggregation_type: sum_agg
        code: storage
        name: Storage
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          description: Unique identifier assigned to the billable metric within the
            Lago application. This ID is exclusively created by Lago and serves as
            a unique identifier for the billable metric’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          description: The name of the billable metric used for this charge.
          example: Storage
          type: string
        code:
          description: The code of the billable metric used for this charge.
          example: storage
          type: string
        aggregation_type:
          description: "The aggregation type of the billable metric used for this\
            \ charge. Possible values are `count_agg`, `sum_agg`, `max_agg` or `unique_count_agg`."
          enum:
          - count_agg
          - sum_agg
          - max_agg
          - unique_count_agg
          example: sum_agg
          type: string
      required:
      - aggregation_type
      - code
      - lago_id
      - name
      type: object
    CustomerChargeUsageObject_groups_inner:
      example:
        events_count: 10
        amount_cents: 1000
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        units: "0.9"
        value: europe
        key: key
      properties:
        lago_id:
          description: Unique identifier assigned to the group within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the group record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          description: "The group key, only returned for groups with two dimensions."
          nullable: true
          type: string
          example: null
        value:
          description: The group value.
          example: europe
          type: string
        units:
          description: The number of units consumed for a specific group related to
            a charge item.
          example: "0.9"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        events_count:
          description: The quantity of usage events that have been recorded for a
            particular charge during the specified time period. These events may also
            be referred to as the number of transactions in some contexts.
          example: 10
          type: integer
        amount_cents:
          description: "The amount in cents, tax excluded, consumed for a specific\
            \ group related to a charge item."
          example: 1000
          type: integer
      type: object
    CustomerCreateInput_customer_metadata_inner:
      example:
        display_in_invoice: true
        id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: "123456789"
        key: Purchase Order
      properties:
        id:
          description: "Identifier for the metadata object, only required when updating\
            \ a key-value pair"
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          description: The metadata object key
          example: Purchase Order
          type: string
        value:
          description: The metadata object value
          example: "123456789"
          type: string
        display_in_invoice:
          description: "Determines whether the item or information should be displayed\
            \ in the invoice. If set to true, the item or information will be included\
            \ and visible in the generated invoice. If set to false, the item or information\
            \ will be excluded and not displayed in the invoice."
          example: true
          type: boolean
      required:
      - display_in_invoice
      - key
      - value
      type: object
    CustomerCreateInput_customer:
      example:
        country: ""
        legal_number: 49-008-2965
        metadata:
        - display_in_invoice: true
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: "123456789"
          key: Purchase Order
        - display_in_invoice: true
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: "123456789"
          key: Purchase Order
        city: Woodland Hills
        logo_url: http://hooli.com/logo.png
        timezone: ""
        external_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        url: http://hooli.com
        billing_configuration:
          provider_customer_id: cus_12345
          document_locale: fr
          provider_payment_methods:
          - card
          - sepa_debit
          payment_provider: stripe
          invoice_grace_period: 3
          sync_with_provider: true
          sync: true
        zipcode: "91364"
        tax_codes:
        - french_standard_vat
        address_line2: ""
        address_line1: 5230 Penfield Ave
        phone: 1-171-883-3711 x245
        name: Gavin Belson
        net_payment_term: 30
        currency: ""
        legal_name: Coleman-Blair
        state: CA
        email: dinesh@piedpiper.test
        tax_identification_number: EU123456789
      properties:
        external_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        address_line1:
          description: The first line of the billing address
          example: 5230 Penfield Ave
          nullable: true
          type: string
        address_line2:
          description: The second line of the billing address
          example: ""
          nullable: true
          type: string
        city:
          description: The city of the customer's billing address
          example: Woodland Hills
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/Country'
          - description: Country code of the customer's billing address. Format must
              be ISO 3166 (alpha-2)
            example: US
            nullable: true
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: Currency of the customer. Format must be ISO 4217
            nullable: true
        email:
          description: The email of the customer
          example: dinesh@piedpiper.test
          format: email
          nullable: true
          type: string
        legal_name:
          description: The legal company name of the customer
          example: Coleman-Blair
          nullable: true
          type: string
        legal_number:
          description: The legal company number of the customer
          example: 49-008-2965
          nullable: true
          type: string
        logo_url:
          description: The logo URL of the customer
          example: http://hooli.com/logo.png
          nullable: true
          type: string
        name:
          description: The full name of the customer
          example: Gavin Belson
          nullable: true
          type: string
        phone:
          description: The phone number of the customer
          example: 1-171-883-3711 x245
          nullable: true
          type: string
        state:
          description: The state of the customer's billing address
          example: CA
          nullable: true
          type: string
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
        tax_identification_number:
          description: The tax identification number of the customer
          example: EU123456789
          nullable: true
          type: string
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "The customer's timezone, used for billing purposes in their\
              \ local time. Overrides the organization's timezone"
            nullable: true
        url:
          description: The custom website URL of the customer
          example: http://hooli.com
          nullable: true
          type: string
        zipcode:
          description: The zipcode of the customer's billing address
          example: "91364"
          nullable: true
          type: string
        net_payment_term:
          description: "The net payment term, expressed in days, specifies the duration\
            \ within which a customer is expected to remit payment after the invoice\
            \ is finalized."
          example: 30
          nullable: true
          type: integer
        billing_configuration:
          $ref: '#/components/schemas/CustomerBillingConfiguration'
        metadata:
          description: Set of key-value pairs that you can attach to a customer. This
            can be useful for storing additional information about the customer in
            a structured format
          items:
            $ref: '#/components/schemas/CustomerCreateInput_customer_metadata_inner'
          type: array
      required:
      - external_id
      type: object
    EventBatchInput_event_properties:
      additionalProperties: true
      description: "This field represents additional properties associated with the\
        \ event, which are utilized in the calculation of the final fee. This object\
        \ becomes mandatory when the targeted billable metric employs a `sum_agg`,\
        \ `max_agg`, or `unique_count_agg` aggregation method. However, when using\
        \ a simple `count_agg`, this object is not required."
      example:
        gb: 10
      properties:
        operation_type:
          description: "The `operation_type` field is only necessary when adding or\
            \ removing a specific unit when the targeted billable metric adopts a\
            \ `unique_count_agg` aggregation method. In other cases, the `operation_type`\
            \ field is not required. The valid values for the `operation_type` field\
            \ are `add` or `remove`, which indicate whether the unit is being added\
            \ or removed from the unique count aggregation, respectively."
          enum:
          - add
          - remove
          type: string
      type: object
    EventBatchInput_event:
      example:
        transaction_id: transaction_1234567890
        code: storage
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        external_subscription_ids:
        - sub_1234567890
        - sub_0987654321
        properties:
          gb: 10
        timestamp: 1651240791
      properties:
        transaction_id:
          description: "This field represents a unique identifier for the event. It\
            \ is crucial for ensuring idempotency, meaning that each event can be\
            \ uniquely identified and processed without causing any unintended side\
            \ effects."
          example: transaction_1234567890
          type: string
        external_customer_id:
          description: "The customer external unique identifier (provided by your\
            \ own application). This field is optional if you send the `external_subscription_ids`,\
            \ targeting a specific subscription."
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        external_subscription_ids:
          description: Array of unique identifiers of the targeted subscriptions within
            your application.
          example:
          - sub_1234567890
          - sub_0987654321
          items:
            type: string
          type: array
        code:
          description: "The code that identifies a targeted billable metric. It is\
            \ essential that this code matches the `code` property of one of your\
            \ active billable metrics. If the provided code does not correspond to\
            \ any active billable metric, it will be ignored during the process."
          example: storage
          type: string
        timestamp:
          description: "This field captures the Unix timestamp in seconds indicating\
            \ the occurrence of the event in Coordinated Universal Time (UTC). If\
            \ this timestamp is not provided, the API will automatically set it to\
            \ the time of event reception."
          example: 1651240791
          type: integer
        properties:
          $ref: '#/components/schemas/EventBatchInput_event_properties'
      required:
      - code
      - external_subscription_ids
      - transaction_id
      type: object
    EventEstimateFeesInput_event:
      example:
        code: storage
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        external_subscription_id: sub_1234567890
        properties: "{}"
      properties:
        code:
          description: "The code that identifies a targeted billable metric. It is\
            \ essential that this code matches the `code` property of one of your\
            \ active billable metrics. If the provided code does not correspond to\
            \ any active billable metric, it will be ignored during the process."
          example: storage
          type: string
        external_customer_id:
          description: "The customer external unique identifier (provided by your\
            \ own application). This field is optional if you send the `external_subscription_id`,\
            \ targeting a specific subscription."
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        external_subscription_id:
          description: The unique identifier of the subscription within your application.
            It is a mandatory field when the customer possesses multiple subscriptions
            or when the `external_customer_id` is not provided.
          example: sub_1234567890
          type: string
        properties:
          description: "This field represents additional properties associated with\
            \ the event, which are utilized in the calculation of the final fee. This\
            \ object becomes mandatory when the targeted billable metric employs a\
            \ `sum_agg`, `max_agg`, or `unique_count_agg` aggregation method. However,\
            \ when using a simple `count_agg`, this object is not required."
          type: object
      required:
      - code
      type: object
    EventInput_event_timestamp:
      anyOf:
      - type: integer
      - type: string
      description: |
        This field captures the Unix timestamp in seconds indicating the occurrence of the event in Coordinated Universal Time (UTC).
        If this timestamp is not provided, the API will automatically set it to the time of event reception.
        You can also provide miliseconds precision by appending decimals to the timestamp.
      example: "1651240791.123"
    EventInput_event:
      example:
        transaction_id: transaction_1234567890
        code: storage
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        external_subscription_id: sub_1234567890
        properties:
          gb: 10
        timestamp: "1651240791.123"
      properties:
        transaction_id:
          description: "This field represents a unique identifier for the event. It\
            \ is crucial for ensuring idempotency, meaning that each event can be\
            \ uniquely identified and processed without causing any unintended side\
            \ effects."
          example: transaction_1234567890
          type: string
        external_customer_id:
          description: "The customer external unique identifier (provided by your\
            \ own application). This field is optional if you send the `external_subscription_id`,\
            \ targeting a specific subscription."
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        external_subscription_id:
          description: The unique identifier of the subscription within your application.
            It is a mandatory field when the customer possesses multiple subscriptions
            or when the `external_customer_id` is not provided.
          example: sub_1234567890
          type: string
        code:
          description: "The code that identifies a targeted billable metric. It is\
            \ essential that this code matches the `code` property of one of your\
            \ active billable metrics. If the provided code does not correspond to\
            \ any active billable metric, it will be ignored during the process."
          example: storage
          type: string
        timestamp:
          $ref: '#/components/schemas/EventInput_event_timestamp'
        properties:
          additionalProperties:
            type: string
          description: "This field represents additional properties associated with\
            \ the event, which are utilized in the calculation of the final fee. This\
            \ object becomes mandatory when the targeted billable metric employs a\
            \ `sum_agg`, `max_agg`, or `unique_count_agg` aggregation method. However,\
            \ when using a simple `count_agg`, this object is not required."
          example:
            gb: 10
          type: object
      required:
      - code
      - transaction_id
      type: object
    EventObject_properties:
      additionalProperties:
        type: string
      description: "This field represents additional properties associated with the\
        \ event, which are utilized in the calculation of the final fee. This object\
        \ becomes mandatory when the targeted billable metric employs a `sum_agg`,\
        \ `max_agg`, or `unique_count_agg` aggregation method. However, when using\
        \ a simple `count_agg`, this object is not required."
      example:
        gb: 10
      properties:
        operation_type:
          description: "The `operation_type` field is only necessary when adding or\
            \ removing a specific unit when the targeted billable metric adopts a\
            \ `unique_count_agg` aggregation method. In other cases, the `operation_type`\
            \ field is not required. The valid values for the `operation_type` field\
            \ are `add` or `remove`, which indicate whether the unit is being added\
            \ or removed from the unique count aggregation, respectively."
          enum:
          - add
          - remove
          type: string
      type: object
    FeeObject_item:
      description: Item attached to the fee
      example:
        lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        code: startup
        invoice_display_name: Setup Fee (SF1)
        group_invoice_display_name: Transactions - ACH
        item_type: Subscription
        name: Startup
        type: subscription
      properties:
        type:
          description: "The fee type. Possible values are `add-on`, `charge`, `credit`\
            \ or `subscription`."
          enum:
          - charge
          - add_on
          - subscription
          - credit
          example: subscription
          type: string
        code:
          description: "The code of the fee item. It can be the code of the `add-o`n,\
            \ the code of the `charge`, the code of the `credit` or the code of the\
            \ `subscription`."
          example: startup
          type: string
        name:
          description: "The name of the fee item. It can be the name of the `add-on`,\
            \ the name of the `charge`, the name of the `credit` or the name of the\
            \ `subscription`."
          example: Startup
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup Fee (SF1)
          type: string
        group_invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Transactions - ACH
          type: string
        lago_item_id:
          description: "Unique identifier of the fee item, created by Lago. It can\
            \ be the identifier of the `add-on`, the identifier of the `charge`, the\
            \ identifier of the `credit` or the identifier of the `subscription`."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        item_type:
          description: "The type of the fee item. Possible values are `AddOn`, `BillableMetric`,\
            \ `WalletTransaction` or `Subscription`."
          enum:
          - AddOn
          - BillableMetric
          - Subscription
          - WalletTransaction
          example: Subscription
          type: string
      required:
      - code
      - item_type
      - lago_item_id
      - name
      - type
      type: object
    FeeUpdateInput_fee:
      example:
        payment_status: succeeded
      properties:
        payment_status:
          description: "The payment status of the fee. Possible values are `pending`,\
            \ `succeeded`, `failed` or `refunded`."
          enum:
          - pending
          - succeeded
          - failed
          - refunded
          example: succeeded
          type: string
      required:
      - payment_status
      type: object
    GroupPropertiesObject_values:
      allOf:
      - $ref: '#/components/schemas/ChargeProperties'
      - description: "List of all thresholds utilized for calculating a charge, scoped\
          \ by groups used as dimensions for a single charge."
    InvoiceObject_customer:
      allOf:
      - $ref: '#/components/schemas/CustomerObject'
      - description: The customer on which the invoice applies. It refers to the customer
          account or entity associated with the invoice.
    InvoiceOneOffCreateInput_invoice_fees_inner:
      example:
        unit_amount_cents: 12000
        tax_codes:
        - french_standard_vat
        invoice_display_name: Setup Fee (SF1)
        description: "The description of the fee line item in the invoice. By default,\
          \ the description of the add-on is used."
        add_on_code: setup_fee
        units: "2.5"
      properties:
        add_on_code:
          description: The code of the add-on used as invoice item.
          example: setup_fee
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup Fee (SF1)
          type: string
        unit_amount_cents:
          description: "The amount of the fee per unit, expressed in cents. By default,\
            \ the amount of the add-on is used."
          example: 12000
          nullable: true
          type: integer
        units:
          description: "The quantity of units associated with the fee. By default,\
            \ only 1 unit is added to the invoice."
          example: "2.5"
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        description:
          description: This is a description
          example: "The description of the fee line item in the invoice. By default,\
            \ the description of the add-on is used."
          nullable: true
          type: string
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
      required:
      - add_on_code
      type: object
    InvoiceOneOffCreateInput_invoice:
      example:
        fees:
        - unit_amount_cents: 12000
          tax_codes:
          - french_standard_vat
          invoice_display_name: Setup Fee (SF1)
          description: "The description of the fee line item in the invoice. By default,\
            \ the description of the add-on is used."
          add_on_code: setup_fee
          units: "2.5"
        - unit_amount_cents: 12000
          tax_codes:
          - french_standard_vat
          invoice_display_name: Setup Fee (SF1)
          description: "The description of the fee line item in the invoice. By default,\
            \ the description of the add-on is used."
          add_on_code: setup_fee
          units: "2.5"
        external_customer_id: hooli_1234
        currency: ""
      properties:
        external_customer_id:
          description: Unique identifier assigned to the customer in your application.
          example: hooli_1234
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the invoice.
            example: EUR
        fees:
          items:
            $ref: '#/components/schemas/InvoiceOneOffCreateInput_invoice_fees_inner'
          type: array
      required:
      - external_customer_id
      - fees
      type: object
    InvoiceUpdateInput_invoice_metadata_inner:
      example:
        id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: INV-0123456-98765
        key: digital_ref_id
      properties:
        id:
          description: The metadata object identifier. Only required when updating
            existing metadata.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          description: The key in the key-value pair of the metadata.
          example: digital_ref_id
          type: string
        value:
          description: The value in the key-value pair of the metadata.
          example: INV-0123456-98765
          type: string
      type: object
    InvoiceUpdateInput_invoice:
      example:
        metadata:
        - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: INV-0123456-98765
          key: digital_ref_id
        - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: INV-0123456-98765
          key: digital_ref_id
        payment_status: succeeded
      properties:
        payment_status:
          description: "The payment status of the invoice. Possible values are `pending`,\
            \ `failed` or `succeeded`."
          enum:
          - pending
          - succeeded
          - failed
          example: succeeded
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/InvoiceUpdateInput_invoice_metadata_inner'
          type: array
      type: object
    OrganizationUpdateInput_organization:
      example:
        country: ""
        legal_number: legal_number
        webhook_url: https://webhook.brex.com
        city: New York
        timezone: ""
        email_settings:
        - invoice.finalized
        - credit_note.created
        billing_configuration:
          document_locale: en
          invoice_footer: This is my customer footer
          invoice_grace_period: 3
        zipcode: "10000"
        address_line2: address_line2
        address_line1: 100 Brex Street
        net_payment_term: 30
        state: NYC
        legal_name: legal_name
        default_currency: ""
        email: brex@brex.com
        tax_identification_number: US123456789
      properties:
        webhook_url:
          description: "The URL of your newest updated webhook endpoint. This URL\
            \ allows your organization to receive important messages, notifications,\
            \ or data from the Lago system. By configuring your webhook endpoint to\
            \ this URL, you can ensure that your organization stays informed and receives\
            \ relevant information in a timely manner."
          example: https://webhook.brex.com
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/Country'
          - description: The country of your organization.
            example: US
            nullable: true
        default_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The default currency of an organization.
            example: USD
        address_line1:
          description: The first line of your organization’s billing address.
          example: 100 Brex Street
          nullable: true
          type: string
        address_line2:
          description: The second line of your organization’s billing address.
          nullable: true
          type: string
          example: null
        state:
          description: The state of your organization’s billing address.
          example: NYC
          nullable: true
          type: string
        zipcode:
          description: The zipcode of your organization’s billing address.
          example: "10000"
          nullable: true
          type: string
        email:
          description: The email address of your organization used to bill your customers.
          example: brex@brex.com
          format: email
          nullable: true
          type: string
        city:
          description: The city of your organization’s billing address.
          example: New York
          nullable: true
          type: string
        legal_name:
          description: The legal name of your organization.
          nullable: true
          type: string
          example: null
        legal_number:
          description: The legal number of your organization.
          nullable: true
          type: string
          example: null
        net_payment_term:
          description: "The net payment term, expressed in days, specifies the duration\
            \ within which a customer is expected to remit payment after the invoice\
            \ is finalized."
          example: 30
          type: integer
        tax_identification_number:
          description: The tax identification number of your organization.
          example: US123456789
          nullable: true
          type: string
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "Your organization’s timezone, used for billing purposes\
              \ in your own local time. Can be overwritten by the customer’s timezone."
            example: America/New_York
        email_settings:
          description: "Represents the email settings of the organization. It allows\
            \ you to define which documents are sent by email. The field value determines\
            \ the types of documents that trigger email notifications. Possible values\
            \ for are `invoice.finalized` and `credit_note.created`. By configuring\
            \ this field, you can specify whether invoices, credit notes, or both\
            \ should be sent to recipients via email."
          example:
          - invoice.finalized
          - credit_note.created
          items:
            enum:
            - invoice.finalized
            - credit_note.created
            type: string
          type: array
        billing_configuration:
          $ref: '#/components/schemas/OrganizationBillingConfiguration'
      type: object
    PlanCreateInput_plan_charges_inner_group_properties_inner:
      example:
        group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        values: null
      properties:
        group_id:
          description: "Unique identifier of a billable metric group, created by Lago."
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          type: string
        values:
          $ref: '#/components/schemas/GroupPropertiesObject_values'
      required:
      - group_id
      - values
      type: object
    PlanCreateInput_plan_charges_inner:
      properties:
        billable_metric_id:
          description: Unique identifier of the billable metric created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        charge_model:
          description: "Specifies the pricing model used for the calculation of the\
            \ final fee. It can be `standard`, `graduated`, `graduated_percentage`\
            \ `package`, `percentage` or `volume`."
          enum:
          - standard
          - graduated
          - graduated_percentage
          - package
          - percentage
          - volume
          example: standard
          type: string
        pay_in_advance:
          description: "This field determines the billing timing for this specific\
            \ usage-based charge. When set to `true`, the charge is due and invoiced\
            \ immediately. Conversely, when set to false, the charge is due and invoiced\
            \ at the end of each billing period."
          example: false
          type: boolean
        invoiceable:
          description: "This field specifies whether the charge should be included\
            \ in a proper invoice. If set to false, no invoice will be issued for\
            \ this charge. You can only set it to `false` when `pay_in_advance` is\
            \ `true`."
          example: true
          type: boolean
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup
          type: string
        prorated:
          description: |-
            Specifies whether a charge is prorated based on the remaining number of days in the billing period or billed fully.

            - If set to `true`, the charge is prorated based on the remaining days in the current billing period.
            - If set to `false`, the charge is billed in full.
            - If not defined in the request, default value is `false`.
          example: false
          type: boolean
        min_amount_cents:
          description: "The minimum spending amount required for the charge, measured\
            \ in cents and excluding any applicable taxes. It indicates the minimum\
            \ amount that needs to be charged for each billing period."
          example: 0
          type: integer
        properties:
          $ref: '#/components/schemas/ChargeObject_properties'
        group_properties:
          description: "All charge information, sorted by groups."
          items:
            $ref: '#/components/schemas/PlanCreateInput_plan_charges_inner_group_properties_inner'
          type: array
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
      type: object
    PlanCreateInput_plan:
      example:
        tax_codes:
        - french_standard_vat
        charges:
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
          charge_model: package
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 3000
          properties:
            amount: "30"
            free_units: 100
            package_size: 1000
          group_properties: []
          tax_codes:
          - french_standard_vat
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
          charge_model: graduated
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 0
          properties:
            graduated_ranges:
            - to_value: 10
              from_value: 0
              flat_amount: "10"
              per_unit_amount: "0.5"
            - to_value: null
              from_value: 11
              flat_amount: "0"
              per_unit_amount: "0.4"
          group_properties: []
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
          charge_model: standard
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: true
          prorated: false
          min_amount_cents: 0
          properties: {}
          group_properties:
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
            invoice_display_name: Europe
            values:
              amount: "10"
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
            invoice_display_name: USA
            values:
              amount: "5"
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
            invoice_display_name: Africa
            values:
              amount: "8"
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
          charge_model: volume
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 0
          properties:
            volume_ranges:
            - from_value: 0
              to_value: 100
              flat_amount: "0"
              per_unit_amount: "0"
            - from_value: 101
              to_value: null
              flat_amount: "0"
              per_unit_amount: "0.5"
          group_properties: []
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
          charge_model: percentage
          invoiceable: false
          invoice_display_name: Setup
          pay_in_advance: true
          prorated: false
          min_amount_cents: 0
          properties:
            rate: "1"
            fixed_amount: "0.5"
            free_units_per_events: 5
            free_units_per_total_aggregation: "500"
          group_properties: []
        code: startup
        invoice_display_name: Startup plan
        amount_cents: 10000
        amount_currency: ""
        bill_charges_monthly: true
        name: Startup
        pay_in_advance: true
        description: Plan for early stage startups.
        interval: monthly
        trial_period: 5
      properties:
        name:
          description: The name of the plan.
          example: Startup
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the plan will be used as\
            \ the default display name."
          example: Startup plan
          type: string
        code:
          description: "The code of the plan. It serves as a unique identifier associated\
            \ with a particular plan. The code is typically used for internal or system-level\
            \ identification purposes, like assigning a subscription, for instance."
          example: startup
          type: string
        interval:
          description: "The interval used for recurring billing. It represents the\
            \ frequency at which subscription billing occurs. The interval can be\
            \ one of the following values: `yearly`, `quarterly`, `monthly`, or `weekly`."
          enum:
          - weekly
          - monthly
          - quarterly
          - yearly
          example: monthly
          type: string
        description:
          description: The description on the plan.
          example: Plan for early stage startups.
          type: string
        amount_cents:
          description: "The base cost of the plan, excluding any applicable taxes,\
            \ that is billed on a recurring basis. This value is defined at 0 if your\
            \ plan is a pay-as-you-go plan."
          example: 10000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: "The currency of the plan. It indicates the monetary unit\
              \ in which the plan's cost, including taxes and usage-based charges,\
              \ is expressed."
            example: USD
        trial_period:
          description: The duration in days during which the base cost of the plan
            is offered for free.
          example: 5
          type: number
        pay_in_advance:
          description: "This field determines the billing timing for the plan. When\
            \ set to `true`, the base cost of the plan is due at the beginning of\
            \ each billing period. Conversely, when set to `false`, the base cost\
            \ of the plan is due at the end of each billing period."
          example: true
          type: boolean
        bill_charges_monthly:
          description: "This field, when set to `true`, enables to invoice usage-based\
            \ charges on monthly basis, even if the cadence of the plan is yearly.\
            \ This allows customers to pay charges overage on a monthly basis. This\
            \ can be set to true only if the plan’s interval is `yearly`."
          nullable: true
          type: boolean
          example: null
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
        charges:
          description: Additional usage-based charges for this plan.
          example:
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
            tax_codes:
            - french_standard_vat
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - to_value: 10
                from_value: 0
                flat_amount: "10"
                per_unit_amount: "0.5"
              - to_value: null
                from_value: 11
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          items:
            $ref: '#/components/schemas/PlanCreateInput_plan_charges_inner'
          type: array
      type: object
    PlanOverridesObject_charges_inner:
      example:
        tax_codes:
        - french_standard_vat
        invoice_display_name: Setup
        billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        group_properties:
        - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          values: null
        - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          values: null
        min_amount_cents: 0
        id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        properties: null
      properties:
        id:
          description: Unique identifier of the charge created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        billable_metric_id:
          description: Unique identifier of the billable metric created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup
          type: string
        min_amount_cents:
          description: "The minimum spending amount required for the charge, measured\
            \ in cents and excluding any applicable taxes. It indicates the minimum\
            \ amount that needs to be charged for each billing period."
          example: 0
          type: integer
        properties:
          $ref: '#/components/schemas/ChargeObject_properties'
        group_properties:
          description: "All charge information, sorted by groups."
          items:
            $ref: '#/components/schemas/PlanCreateInput_plan_charges_inner_group_properties_inner'
          type: array
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
      type: object
    PlanUpdateInput_plan_charges_inner:
      properties:
        id:
          description: Unique identifier of the charge created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        billable_metric_id:
          description: Unique identifier of the billable metric created by Lago.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        charge_model:
          description: "Specifies the pricing model used for the calculation of the\
            \ final fee. It can be `standard`, `graduated`, `graduated_percentage`,\
            \ `package`, `percentage` or `volume`."
          enum:
          - standard
          - graduated
          - graduated_percentage
          - package
          - percentage
          - volume
          example: standard
          type: string
        pay_in_advance:
          description: "This field determines the billing timing for this specific\
            \ usage-based charge. When set to `true`, the charge is due and invoiced\
            \ immediately. Conversely, when set to false, the charge is due and invoiced\
            \ at the end of each billing period."
          example: false
          type: boolean
        invoiceable:
          description: "This field specifies whether the charge should be included\
            \ in a proper invoice. If set to false, no invoice will be issued for\
            \ this charge. You can only set it to `false` when `pay_in_advance` is\
            \ `true`."
          example: true
          type: boolean
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the actual charge will be\
            \ used as the default display name."
          example: Setup
          type: string
        prorated:
          description: |-
            Specifies whether a charge is prorated based on the remaining number of days in the billing period or billed fully.

            - If set to `true`, the charge is prorated based on the remaining days in the current billing period.
            - If set to `false`, the charge is billed in full.
            - If not defined in the request, default value is `false`.
          example: false
          type: boolean
        min_amount_cents:
          description: "The minimum spending amount required for the charge, measured\
            \ in cents and excluding any applicable taxes. It indicates the minimum\
            \ amount that needs to be charged for each billing period."
          example: 0
          type: integer
        properties:
          $ref: '#/components/schemas/ChargeObject_properties'
        group_properties:
          description: "All charge information, sorted by groups."
          items:
            $ref: '#/components/schemas/PlanCreateInput_plan_charges_inner_group_properties_inner'
          type: array
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
      type: object
    PlanUpdateInput_plan:
      example:
        tax_codes:
        - french_standard_vat
        charges:
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
          charge_model: package
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 3000
          properties:
            amount: "30"
            free_units: 100
            package_size: 1000
          group_properties: []
          tax_codes:
          - french_standard_vat
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
          charge_model: graduated
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 0
          properties:
            graduated_ranges:
            - to_value: 10
              from_value: 0
              flat_amount: "10"
              per_unit_amount: "0.5"
            - to_value: null
              from_value: 11
              flat_amount: "0"
              per_unit_amount: "0.4"
          group_properties: []
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
          charge_model: standard
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: true
          prorated: false
          min_amount_cents: 0
          properties: {}
          group_properties:
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
            invoice_display_name: Europe
            values:
              amount: "10"
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
            invoice_display_name: USA
            values:
              amount: "5"
          - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
            invoice_display_name: Africa
            values:
              amount: "8"
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
          charge_model: volume
          invoiceable: true
          invoice_display_name: Setup
          pay_in_advance: false
          prorated: false
          min_amount_cents: 0
          properties:
            volume_ranges:
            - from_value: 0
              to_value: 100
              flat_amount: "0"
              per_unit_amount: "0"
            - from_value: 101
              to_value: null
              flat_amount: "0"
              per_unit_amount: "0.5"
          group_properties: []
        - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
          charge_model: percentage
          invoiceable: false
          invoice_display_name: Setup
          pay_in_advance: true
          prorated: false
          min_amount_cents: 0
          properties:
            rate: "1"
            fixed_amount: "0.5"
            free_units_per_events: 5
            free_units_per_total_aggregation: "500"
          group_properties: []
        code: startup
        invoice_display_name: Startup plan
        amount_cents: 10000
        amount_currency: ""
        bill_charges_monthly: true
        name: Startup
        pay_in_advance: true
        description: Plan for early stage startups.
        interval: monthly
        trial_period: 5
      properties:
        name:
          description: The name of the plan.
          example: Startup
          type: string
        invoice_display_name:
          description: "Specifies the name that will be displayed on an invoice. If\
            \ no value is set for this field, the name of the plan will be used as\
            \ the default display name."
          example: Startup plan
          type: string
        code:
          description: "The code of the plan. It serves as a unique identifier associated\
            \ with a particular plan. The code is typically used for internal or system-level\
            \ identification purposes, like assigning a subscription, for instance."
          example: startup
          type: string
        interval:
          description: "The interval used for recurring billing. It represents the\
            \ frequency at which subscription billing occurs. The interval can be\
            \ one of the following values: `yearly`, `quarterly`, `monthly`, or `weekly`."
          enum:
          - weekly
          - monthly
          - quarterly
          - yearly
          example: monthly
          type: string
        description:
          description: The description on the plan.
          example: Plan for early stage startups.
          type: string
        amount_cents:
          description: "The base cost of the plan, excluding any applicable taxes,\
            \ that is billed on a recurring basis. This value is defined at 0 if your\
            \ plan is a pay-as-you-go plan."
          example: 10000
          type: integer
        amount_currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: "The currency of the plan. It indicates the monetary unit\
              \ in which the plan's cost, including taxes and usage-based charges,\
              \ is expressed."
            example: USD
        trial_period:
          description: The duration in days during which the base cost of the plan
            is offered for free.
          example: 5
          type: number
        pay_in_advance:
          description: "This field determines the billing timing for the plan. When\
            \ set to `true`, the base cost of the plan is due at the beginning of\
            \ each billing period. Conversely, when set to `false`, the base cost\
            \ of the plan is due at the end of each billing period."
          example: true
          type: boolean
        bill_charges_monthly:
          description: "This field, when set to `true`, enables to invoice usage-based\
            \ charges on monthly basis, even if the cadence of the plan is yearly.\
            \ This allows customers to pay charges overage on a monthly basis. This\
            \ can be set to true only if the plan’s interval is `yearly`."
          nullable: true
          type: boolean
          example: null
        tax_codes:
          description: List of unique code used to identify the taxes.
          example:
          - french_standard_vat
          items:
            type: string
          type: array
        charges:
          description: Additional usage-based charges for this plan.
          example:
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a91
            charge_model: package
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 3000
            properties:
              amount: "30"
              free_units: 100
              package_size: 1000
            group_properties: []
            tax_codes:
            - french_standard_vat
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a92
            charge_model: graduated
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              graduated_ranges:
              - to_value: 10
                from_value: 0
                flat_amount: "10"
                per_unit_amount: "0.5"
              - to_value: null
                from_value: 11
                flat_amount: "0"
                per_unit_amount: "0.4"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a93
            charge_model: standard
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties: {}
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a01
              invoice_display_name: Europe
              values:
                amount: "10"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a02
              invoice_display_name: USA
              values:
                amount: "5"
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a03
              invoice_display_name: Africa
              values:
                amount: "8"
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a94
            charge_model: volume
            invoiceable: true
            invoice_display_name: Setup
            pay_in_advance: false
            prorated: false
            min_amount_cents: 0
            properties:
              volume_ranges:
              - from_value: 0
                to_value: 100
                flat_amount: "0"
                per_unit_amount: "0"
              - from_value: 101
                to_value: null
                flat_amount: "0"
                per_unit_amount: "0.5"
            group_properties: []
          - billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a95
            charge_model: percentage
            invoiceable: false
            invoice_display_name: Setup
            pay_in_advance: true
            prorated: false
            min_amount_cents: 0
            properties:
              rate: "1"
              fixed_amount: "0.5"
              free_units_per_events: 5
              free_units_per_total_aggregation: "500"
            group_properties: []
          items:
            $ref: '#/components/schemas/PlanUpdateInput_plan_charges_inner'
          type: array
      type: object
    SubscriptionCreateInput_subscription:
      example:
        ending_at: 2022-10-08T00:00:00Z
        plan_overrides:
          tax_codes:
          - french_standard_vat
          charges:
          - tax_codes:
            - french_standard_vat
            invoice_display_name: Setup
            billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            min_amount_cents: 0
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: null
          - tax_codes:
            - french_standard_vat
            invoice_display_name: Setup
            billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            min_amount_cents: 0
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: null
          invoice_display_name: Startup plan
          amount_cents: 10000
          amount_currency: ""
          name: Startup
          description: Plan for early stage startups.
          trial_period: 5
        external_customer_id: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
        billing_time: anniversary
        name: Repository A
        subscription_at: 2022-08-08T00:00:00Z
        plan_code: premium
        external_id: my_sub_1234567890
      properties:
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: 5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba
          type: string
        plan_code:
          description: The unique code representing the plan to be attached to the
            customer. This code must correspond to the `code` property of one of the
            active plans.
          example: premium
          type: string
        name:
          description: "The display name of the subscription on an invoice. This field\
            \ allows for customization of the subscription's name for billing purposes,\
            \ especially useful when a single customer has multiple subscriptions\
            \ using the same plan."
          example: Repository A
          type: string
        external_id:
          description: "The unique external identifier for the subscription. This\
            \ identifier serves as an idempotency key, ensuring that each subscription\
            \ is unique."
          example: my_sub_1234567890
          type: string
        billing_time:
          description: "The billing time for the subscription, which can be set as\
            \ either `anniversary` or `calendar`. If not explicitly provided, it will\
            \ default to `calendar`. The billing time determines the timing of recurring\
            \ billing cycles for the subscription. By specifying `anniversary`, the\
            \ billing cycle will be based on the specific date the subscription started\
            \ (billed fully), while `calendar` sets the billing cycle at the first\
            \ day of the week/month/year (billed with proration)."
          enum:
          - calendar
          - anniversary
          example: anniversary
          type: string
        ending_at:
          description: "The effective end date of the subscription. If this field\
            \ is set to null, the subscription will automatically renew. This date\
            \ should be provided in ISO 8601 datetime format, and use Coordinated\
            \ Universal Time (UTC)."
          example: 2022-10-08T00:00:00Z
          format: date-time
          type: string
        subscription_at:
          description: "The start date for the subscription, allowing for the creation\
            \ of subscriptions that can begin in the past or future. Please note that\
            \ it cannot be used to update the start date of a pending subscription\
            \ or schedule an upgrade/downgrade. The start_date should be provided\
            \ in ISO 8601 datetime format and expressed in Coordinated Universal Time\
            \ (UTC)."
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
        plan_overrides:
          $ref: '#/components/schemas/PlanOverridesObject'
      required:
      - external_customer_id
      - external_id
      - plan_code
      type: object
    SubscriptionUpdateInput_subscription:
      example:
        ending_at: 2022-10-08T00:00:00Z
        plan_overrides:
          tax_codes:
          - french_standard_vat
          charges:
          - tax_codes:
            - french_standard_vat
            invoice_display_name: Setup
            billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            min_amount_cents: 0
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: null
          - tax_codes:
            - french_standard_vat
            invoice_display_name: Setup
            billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            group_properties:
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            - group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              values: null
            min_amount_cents: 0
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: null
          invoice_display_name: Startup plan
          amount_cents: 10000
          amount_currency: ""
          name: Startup
          description: Plan for early stage startups.
          trial_period: 5
        name: Repository B
        subscription_at: 2022-08-08T00:00:00Z
      properties:
        name:
          description: "The display name of the subscription on an invoice. This field\
            \ allows for customization of the subscription's name for billing purposes,\
            \ especially useful when a single customer has multiple subscriptions\
            \ using the same plan."
          example: Repository B
          nullable: true
          type: string
        ending_at:
          description: "The effective end date of the subscription. If this field\
            \ is set to null, the subscription will automatically renew. This date\
            \ should be provided in ISO 8601 datetime format, and use Coordinated\
            \ Universal Time (UTC)."
          example: 2022-10-08T00:00:00Z
          format: date-time
          type: string
        subscription_at:
          description: The start date and time of the subscription. This field can
            only be modified for pending subscriptions that have not yet started.
            This date should be provided in ISO 8601 datetime format and expressed
            in Coordinated Universal Time (UTC).
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
        plan_overrides:
          $ref: '#/components/schemas/PlanOverridesObject'
      type: object
    TaxCreateInput_tax:
      allOf:
      - $ref: '#/components/schemas/TaxBaseInput'
      - required:
        - code
        - name
        - rate
    WalletCreateInput_wallet:
      example:
        external_customer_id: hooli_1234
        name: Prepaid
        rate_amount: "1.5"
        currency: ""
        expiration_at: 2022-07-07T23:59:59Z
        paid_credits: "20.0"
        granted_credits: "10.0"
      properties:
        name:
          description: The name of the wallet.
          example: Prepaid
          type: string
        rate_amount:
          description: The rate of conversion between credits and the amount in the
            specified currency. It indicates the ratio or factor used to convert credits
            into the corresponding monetary value in the currency of the transaction.
          example: "1.5"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency of the wallet.
            example: USD
        paid_credits:
          description: The number of paid credits. Required only if there is no granted
            credits.
          example: "20.0"
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        granted_credits:
          description: The number of free granted credits. Required only if there
            is no paid credits.
          example: "10.0"
          nullable: true
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        external_customer_id:
          description: The customer external unique identifier (provided by your own
            application)
          example: hooli_1234
          type: string
        expiration_at:
          description: The date and time that determines when the wallet will expire.
            It follows the ISO 8601 datetime format and is expressed in Coordinated
            Universal Time (UTC).
          example: 2022-07-07T23:59:59Z
          format: date-time
          nullable: true
          type: string
      required:
      - currency
      - external_customer_id
      - rate_amount
      type: object
    WalletTransactionCreateInput_wallet_transaction:
      example:
        wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        paid_credits: "20.0"
        granted_credits: "10.0"
      properties:
        wallet_id:
          description: Unique identifier assigned to the wallet within the Lago application.
            This ID is exclusively created by Lago and serves as a unique identifier
            for the wallet’s record within the Lago system.
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        paid_credits:
          description: The number of paid credits. Required only if there is no granted
            credits.
          example: "20.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
        granted_credits:
          description: The number of free granted credits. Required only if there
            is no paid credits.
          example: "10.0"
          pattern: "^[0-9]+.?[0-9]*$"
          type: string
      required:
      - wallet_id
      type: object
    WalletUpdateInput_wallet:
      example:
        name: new_name
        expiration_at: 2022-07-07T23:59:59Z
      properties:
        name:
          description: The name of the wallet.
          example: new_name
          nullable: true
          type: string
        expiration_at:
          description: The date and time that determines when the wallet will expire.
            It follows the ISO 8601 datetime format and is expressed in Coordinated
            Universal Time (UTC).
          example: 2022-07-07T23:59:59Z
          format: date-time
          nullable: true
          type: string
      type: object
    WebhookEndpointCreateInput_webhook_endpoint:
      example:
        webhook_url: https://foo.bar
        signature_algo: hmac
      properties:
        webhook_url:
          description: The URL of the webhook endpoint.
          example: https://foo.bar
          type: string
        signature_algo:
          description: "The signature used for the webhook. If no value is passed,"
          enum:
          - jwt
          - hmac
          example: hmac
          nullable: true
          type: string
      required:
      - webhook_url
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
