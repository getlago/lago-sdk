/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreditNoteEstimatedEstimatedCreditNote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNoteEstimatedEstimatedCreditNote{}

// CreditNoteEstimatedEstimatedCreditNote struct for CreditNoteEstimatedEstimatedCreditNote
type CreditNoteEstimatedEstimatedCreditNote struct {
	// Unique identifier assigned to the invoice that the credit note belongs to
	LagoInvoiceId string `json:"lago_invoice_id"`
	// The invoice unique number, related to the credit note.
	InvoiceNumber string `json:"invoice_number"`
	Currency Currency `json:"currency"`
	// The tax amount of the credit note, expressed in cents.
	TaxesAmountCents int32 `json:"taxes_amount_cents"`
	// The tax rate associated with this specific credit note.
	TaxesRate float32 `json:"taxes_rate"`
	// The subtotal of the credit note excluding any applicable taxes, expressed in cents.
	SubTotalExcludingTaxesAmountCents int32 `json:"sub_total_excluding_taxes_amount_cents"`
	// The credited amount of the credit note, expressed in cents.
	MaxCreditableAmountCents int32 `json:"max_creditable_amount_cents"`
	// The refunded amount of the credit note, expressed in cents.
	MaxRefundableAmountCents int32 `json:"max_refundable_amount_cents"`
	// The pro-rated amount of the coupons applied to the source invoice.
	CouponsAdjustmentAmountCents int32 `json:"coupons_adjustment_amount_cents"`
	// Array of credit noteâ€™s items.
	Items []CreditNoteEstimatedEstimatedCreditNoteItemsInner `json:"items"`
	AppliedTaxes []CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner `json:"applied_taxes,omitempty"`
}

type _CreditNoteEstimatedEstimatedCreditNote CreditNoteEstimatedEstimatedCreditNote

// NewCreditNoteEstimatedEstimatedCreditNote instantiates a new CreditNoteEstimatedEstimatedCreditNote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteEstimatedEstimatedCreditNote(lagoInvoiceId string, invoiceNumber string, currency Currency, taxesAmountCents int32, taxesRate float32, subTotalExcludingTaxesAmountCents int32, maxCreditableAmountCents int32, maxRefundableAmountCents int32, couponsAdjustmentAmountCents int32, items []CreditNoteEstimatedEstimatedCreditNoteItemsInner) *CreditNoteEstimatedEstimatedCreditNote {
	this := CreditNoteEstimatedEstimatedCreditNote{}
	this.LagoInvoiceId = lagoInvoiceId
	this.InvoiceNumber = invoiceNumber
	this.Currency = currency
	this.TaxesAmountCents = taxesAmountCents
	this.TaxesRate = taxesRate
	this.SubTotalExcludingTaxesAmountCents = subTotalExcludingTaxesAmountCents
	this.MaxCreditableAmountCents = maxCreditableAmountCents
	this.MaxRefundableAmountCents = maxRefundableAmountCents
	this.CouponsAdjustmentAmountCents = couponsAdjustmentAmountCents
	this.Items = items
	return &this
}

// NewCreditNoteEstimatedEstimatedCreditNoteWithDefaults instantiates a new CreditNoteEstimatedEstimatedCreditNote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteEstimatedEstimatedCreditNoteWithDefaults() *CreditNoteEstimatedEstimatedCreditNote {
	this := CreditNoteEstimatedEstimatedCreditNote{}
	return &this
}

// GetLagoInvoiceId returns the LagoInvoiceId field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetLagoInvoiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LagoInvoiceId
}

// GetLagoInvoiceIdOk returns a tuple with the LagoInvoiceId field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetLagoInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LagoInvoiceId, true
}

// SetLagoInvoiceId sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetLagoInvoiceId(v string) {
	o.LagoInvoiceId = v
}

// GetInvoiceNumber returns the InvoiceNumber field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetInvoiceNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetInvoiceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceNumber, true
}

// SetInvoiceNumber sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetInvoiceNumber(v string) {
	o.InvoiceNumber = v
}

// GetCurrency returns the Currency field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetCurrency() Currency {
	if o == nil {
		var ret Currency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetCurrencyOk() (*Currency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetCurrency(v Currency) {
	o.Currency = v
}

// GetTaxesAmountCents returns the TaxesAmountCents field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetTaxesAmountCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TaxesAmountCents
}

// GetTaxesAmountCentsOk returns a tuple with the TaxesAmountCents field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetTaxesAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxesAmountCents, true
}

// SetTaxesAmountCents sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetTaxesAmountCents(v int32) {
	o.TaxesAmountCents = v
}

// GetTaxesRate returns the TaxesRate field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetTaxesRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TaxesRate
}

// GetTaxesRateOk returns a tuple with the TaxesRate field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetTaxesRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxesRate, true
}

// SetTaxesRate sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetTaxesRate(v float32) {
	o.TaxesRate = v
}

// GetSubTotalExcludingTaxesAmountCents returns the SubTotalExcludingTaxesAmountCents field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetSubTotalExcludingTaxesAmountCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubTotalExcludingTaxesAmountCents
}

// GetSubTotalExcludingTaxesAmountCentsOk returns a tuple with the SubTotalExcludingTaxesAmountCents field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetSubTotalExcludingTaxesAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubTotalExcludingTaxesAmountCents, true
}

// SetSubTotalExcludingTaxesAmountCents sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetSubTotalExcludingTaxesAmountCents(v int32) {
	o.SubTotalExcludingTaxesAmountCents = v
}

// GetMaxCreditableAmountCents returns the MaxCreditableAmountCents field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetMaxCreditableAmountCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxCreditableAmountCents
}

// GetMaxCreditableAmountCentsOk returns a tuple with the MaxCreditableAmountCents field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetMaxCreditableAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxCreditableAmountCents, true
}

// SetMaxCreditableAmountCents sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetMaxCreditableAmountCents(v int32) {
	o.MaxCreditableAmountCents = v
}

// GetMaxRefundableAmountCents returns the MaxRefundableAmountCents field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetMaxRefundableAmountCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxRefundableAmountCents
}

// GetMaxRefundableAmountCentsOk returns a tuple with the MaxRefundableAmountCents field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetMaxRefundableAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxRefundableAmountCents, true
}

// SetMaxRefundableAmountCents sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetMaxRefundableAmountCents(v int32) {
	o.MaxRefundableAmountCents = v
}

// GetCouponsAdjustmentAmountCents returns the CouponsAdjustmentAmountCents field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetCouponsAdjustmentAmountCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CouponsAdjustmentAmountCents
}

// GetCouponsAdjustmentAmountCentsOk returns a tuple with the CouponsAdjustmentAmountCents field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetCouponsAdjustmentAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CouponsAdjustmentAmountCents, true
}

// SetCouponsAdjustmentAmountCents sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetCouponsAdjustmentAmountCents(v int32) {
	o.CouponsAdjustmentAmountCents = v
}

// GetItems returns the Items field value
func (o *CreditNoteEstimatedEstimatedCreditNote) GetItems() []CreditNoteEstimatedEstimatedCreditNoteItemsInner {
	if o == nil {
		var ret []CreditNoteEstimatedEstimatedCreditNoteItemsInner
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetItemsOk() ([]CreditNoteEstimatedEstimatedCreditNoteItemsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CreditNoteEstimatedEstimatedCreditNote) SetItems(v []CreditNoteEstimatedEstimatedCreditNoteItemsInner) {
	o.Items = v
}

// GetAppliedTaxes returns the AppliedTaxes field value if set, zero value otherwise.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetAppliedTaxes() []CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner {
	if o == nil || IsNil(o.AppliedTaxes) {
		var ret []CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner
		return ret
	}
	return o.AppliedTaxes
}

// GetAppliedTaxesOk returns a tuple with the AppliedTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) GetAppliedTaxesOk() ([]CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner, bool) {
	if o == nil || IsNil(o.AppliedTaxes) {
		return nil, false
	}
	return o.AppliedTaxes, true
}

// HasAppliedTaxes returns a boolean if a field has been set.
func (o *CreditNoteEstimatedEstimatedCreditNote) HasAppliedTaxes() bool {
	if o != nil && !IsNil(o.AppliedTaxes) {
		return true
	}

	return false
}

// SetAppliedTaxes gets a reference to the given []CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner and assigns it to the AppliedTaxes field.
func (o *CreditNoteEstimatedEstimatedCreditNote) SetAppliedTaxes(v []CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner) {
	o.AppliedTaxes = v
}

func (o CreditNoteEstimatedEstimatedCreditNote) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNoteEstimatedEstimatedCreditNote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lago_invoice_id"] = o.LagoInvoiceId
	toSerialize["invoice_number"] = o.InvoiceNumber
	toSerialize["currency"] = o.Currency
	toSerialize["taxes_amount_cents"] = o.TaxesAmountCents
	toSerialize["taxes_rate"] = o.TaxesRate
	toSerialize["sub_total_excluding_taxes_amount_cents"] = o.SubTotalExcludingTaxesAmountCents
	toSerialize["max_creditable_amount_cents"] = o.MaxCreditableAmountCents
	toSerialize["max_refundable_amount_cents"] = o.MaxRefundableAmountCents
	toSerialize["coupons_adjustment_amount_cents"] = o.CouponsAdjustmentAmountCents
	toSerialize["items"] = o.Items
	if !IsNil(o.AppliedTaxes) {
		toSerialize["applied_taxes"] = o.AppliedTaxes
	}
	return toSerialize, nil
}

func (o *CreditNoteEstimatedEstimatedCreditNote) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lago_invoice_id",
		"invoice_number",
		"currency",
		"taxes_amount_cents",
		"taxes_rate",
		"sub_total_excluding_taxes_amount_cents",
		"max_creditable_amount_cents",
		"max_refundable_amount_cents",
		"coupons_adjustment_amount_cents",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditNoteEstimatedEstimatedCreditNote := _CreditNoteEstimatedEstimatedCreditNote{}

	err = json.Unmarshal(bytes, &varCreditNoteEstimatedEstimatedCreditNote)

	if err != nil {
		return err
	}

	*o = CreditNoteEstimatedEstimatedCreditNote(varCreditNoteEstimatedEstimatedCreditNote)

	return err
}

type NullableCreditNoteEstimatedEstimatedCreditNote struct {
	value *CreditNoteEstimatedEstimatedCreditNote
	isSet bool
}

func (v NullableCreditNoteEstimatedEstimatedCreditNote) Get() *CreditNoteEstimatedEstimatedCreditNote {
	return v.value
}

func (v *NullableCreditNoteEstimatedEstimatedCreditNote) Set(val *CreditNoteEstimatedEstimatedCreditNote) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteEstimatedEstimatedCreditNote) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteEstimatedEstimatedCreditNote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteEstimatedEstimatedCreditNote(val *CreditNoteEstimatedEstimatedCreditNote) *NullableCreditNoteEstimatedEstimatedCreditNote {
	return &NullableCreditNoteEstimatedEstimatedCreditNote{value: val, isSet: true}
}

func (v NullableCreditNoteEstimatedEstimatedCreditNote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteEstimatedEstimatedCreditNote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


