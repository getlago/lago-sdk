/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationUpdateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationUpdateInput{}

// OrganizationUpdateInput struct for OrganizationUpdateInput
type OrganizationUpdateInput struct {
	Organization OrganizationUpdateInputOrganization `json:"organization"`
}

type _OrganizationUpdateInput OrganizationUpdateInput

// NewOrganizationUpdateInput instantiates a new OrganizationUpdateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUpdateInput(organization OrganizationUpdateInputOrganization) *OrganizationUpdateInput {
	this := OrganizationUpdateInput{}
	this.Organization = organization
	return &this
}

// NewOrganizationUpdateInputWithDefaults instantiates a new OrganizationUpdateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUpdateInputWithDefaults() *OrganizationUpdateInput {
	this := OrganizationUpdateInput{}
	return &this
}

// GetOrganization returns the Organization field value
func (o *OrganizationUpdateInput) GetOrganization() OrganizationUpdateInputOrganization {
	if o == nil {
		var ret OrganizationUpdateInputOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateInput) GetOrganizationOk() (*OrganizationUpdateInputOrganization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *OrganizationUpdateInput) SetOrganization(v OrganizationUpdateInputOrganization) {
	o.Organization = v
}

func (o OrganizationUpdateInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationUpdateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["organization"] = o.Organization
	return toSerialize, nil
}

func (o *OrganizationUpdateInput) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organization",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationUpdateInput := _OrganizationUpdateInput{}

	err = json.Unmarshal(bytes, &varOrganizationUpdateInput)

	if err != nil {
		return err
	}

	*o = OrganizationUpdateInput(varOrganizationUpdateInput)

	return err
}

type NullableOrganizationUpdateInput struct {
	value *OrganizationUpdateInput
	isSet bool
}

func (v NullableOrganizationUpdateInput) Get() *OrganizationUpdateInput {
	return v.value
}

func (v *NullableOrganizationUpdateInput) Set(val *OrganizationUpdateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUpdateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUpdateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUpdateInput(val *OrganizationUpdateInput) *NullableOrganizationUpdateInput {
	return &NullableOrganizationUpdateInput{value: val, isSet: true}
}

func (v NullableOrganizationUpdateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUpdateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


