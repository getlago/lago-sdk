/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GrossRevenues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GrossRevenues{}

// GrossRevenues struct for GrossRevenues
type GrossRevenues struct {
	GrossRevenues []GrossRevenueObject `json:"gross_revenues"`
}

type _GrossRevenues GrossRevenues

// NewGrossRevenues instantiates a new GrossRevenues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrossRevenues(grossRevenues []GrossRevenueObject) *GrossRevenues {
	this := GrossRevenues{}
	this.GrossRevenues = grossRevenues
	return &this
}

// NewGrossRevenuesWithDefaults instantiates a new GrossRevenues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrossRevenuesWithDefaults() *GrossRevenues {
	this := GrossRevenues{}
	return &this
}

// GetGrossRevenues returns the GrossRevenues field value
func (o *GrossRevenues) GetGrossRevenues() []GrossRevenueObject {
	if o == nil {
		var ret []GrossRevenueObject
		return ret
	}

	return o.GrossRevenues
}

// GetGrossRevenuesOk returns a tuple with the GrossRevenues field value
// and a boolean to check if the value has been set.
func (o *GrossRevenues) GetGrossRevenuesOk() ([]GrossRevenueObject, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrossRevenues, true
}

// SetGrossRevenues sets field value
func (o *GrossRevenues) SetGrossRevenues(v []GrossRevenueObject) {
	o.GrossRevenues = v
}

func (o GrossRevenues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GrossRevenues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gross_revenues"] = o.GrossRevenues
	return toSerialize, nil
}

func (o *GrossRevenues) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"gross_revenues",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGrossRevenues := _GrossRevenues{}

	err = json.Unmarshal(bytes, &varGrossRevenues)

	if err != nil {
		return err
	}

	*o = GrossRevenues(varGrossRevenues)

	return err
}

type NullableGrossRevenues struct {
	value *GrossRevenues
	isSet bool
}

func (v NullableGrossRevenues) Get() *GrossRevenues {
	return v.value
}

func (v *NullableGrossRevenues) Set(val *GrossRevenues) {
	v.value = val
	v.isSet = true
}

func (v NullableGrossRevenues) IsSet() bool {
	return v.isSet
}

func (v *NullableGrossRevenues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrossRevenues(val *GrossRevenues) *NullableGrossRevenues {
	return &NullableGrossRevenues{value: val, isSet: true}
}

func (v NullableGrossRevenues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrossRevenues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


