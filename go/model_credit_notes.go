/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreditNotes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNotes{}

// CreditNotes struct for CreditNotes
type CreditNotes struct {
	CreditNotes []CreditNoteObject `json:"credit_notes"`
}

type _CreditNotes CreditNotes

// NewCreditNotes instantiates a new CreditNotes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNotes(creditNotes []CreditNoteObject) *CreditNotes {
	this := CreditNotes{}
	this.CreditNotes = creditNotes
	return &this
}

// NewCreditNotesWithDefaults instantiates a new CreditNotes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNotesWithDefaults() *CreditNotes {
	this := CreditNotes{}
	return &this
}

// GetCreditNotes returns the CreditNotes field value
func (o *CreditNotes) GetCreditNotes() []CreditNoteObject {
	if o == nil {
		var ret []CreditNoteObject
		return ret
	}

	return o.CreditNotes
}

// GetCreditNotesOk returns a tuple with the CreditNotes field value
// and a boolean to check if the value has been set.
func (o *CreditNotes) GetCreditNotesOk() ([]CreditNoteObject, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreditNotes, true
}

// SetCreditNotes sets field value
func (o *CreditNotes) SetCreditNotes(v []CreditNoteObject) {
	o.CreditNotes = v
}

func (o CreditNotes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNotes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credit_notes"] = o.CreditNotes
	return toSerialize, nil
}

func (o *CreditNotes) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"credit_notes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditNotes := _CreditNotes{}

	err = json.Unmarshal(bytes, &varCreditNotes)

	if err != nil {
		return err
	}

	*o = CreditNotes(varCreditNotes)

	return err
}

type NullableCreditNotes struct {
	value *CreditNotes
	isSet bool
}

func (v NullableCreditNotes) Get() *CreditNotes {
	return v.value
}

func (v *NullableCreditNotes) Set(val *CreditNotes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNotes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNotes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNotes(val *CreditNotes) *NullableCreditNotes {
	return &NullableCreditNotes{value: val, isSet: true}
}

func (v NullableCreditNotes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNotes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


