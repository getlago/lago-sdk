/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the PaginationMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationMeta{}

// PaginationMeta struct for PaginationMeta
type PaginationMeta struct {
	// Current page.
	CurrentPage int32 `json:"current_page"`
	// Next page.
	NextPage NullableInt32 `json:"next_page,omitempty"`
	// Previous page.
	PrevPage NullableInt32 `json:"prev_page,omitempty"`
	// Total number of pages.
	TotalPages int32 `json:"total_pages"`
	// Total number of records.
	TotalCount int32 `json:"total_count"`
}

type _PaginationMeta PaginationMeta

// NewPaginationMeta instantiates a new PaginationMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationMeta(currentPage int32, totalPages int32, totalCount int32) *PaginationMeta {
	this := PaginationMeta{}
	this.CurrentPage = currentPage
	this.TotalPages = totalPages
	this.TotalCount = totalCount
	return &this
}

// NewPaginationMetaWithDefaults instantiates a new PaginationMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationMetaWithDefaults() *PaginationMeta {
	this := PaginationMeta{}
	return &this
}

// GetCurrentPage returns the CurrentPage field value
func (o *PaginationMeta) GetCurrentPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetCurrentPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPage, true
}

// SetCurrentPage sets field value
func (o *PaginationMeta) SetCurrentPage(v int32) {
	o.CurrentPage = v
}

// GetNextPage returns the NextPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationMeta) GetNextPage() int32 {
	if o == nil || IsNil(o.NextPage.Get()) {
		var ret int32
		return ret
	}
	return *o.NextPage.Get()
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationMeta) GetNextPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextPage.Get(), o.NextPage.IsSet()
}

// HasNextPage returns a boolean if a field has been set.
func (o *PaginationMeta) HasNextPage() bool {
	if o != nil && o.NextPage.IsSet() {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given NullableInt32 and assigns it to the NextPage field.
func (o *PaginationMeta) SetNextPage(v int32) {
	o.NextPage.Set(&v)
}
// SetNextPageNil sets the value for NextPage to be an explicit nil
func (o *PaginationMeta) SetNextPageNil() {
	o.NextPage.Set(nil)
}

// UnsetNextPage ensures that no value is present for NextPage, not even an explicit nil
func (o *PaginationMeta) UnsetNextPage() {
	o.NextPage.Unset()
}

// GetPrevPage returns the PrevPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationMeta) GetPrevPage() int32 {
	if o == nil || IsNil(o.PrevPage.Get()) {
		var ret int32
		return ret
	}
	return *o.PrevPage.Get()
}

// GetPrevPageOk returns a tuple with the PrevPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationMeta) GetPrevPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrevPage.Get(), o.PrevPage.IsSet()
}

// HasPrevPage returns a boolean if a field has been set.
func (o *PaginationMeta) HasPrevPage() bool {
	if o != nil && o.PrevPage.IsSet() {
		return true
	}

	return false
}

// SetPrevPage gets a reference to the given NullableInt32 and assigns it to the PrevPage field.
func (o *PaginationMeta) SetPrevPage(v int32) {
	o.PrevPage.Set(&v)
}
// SetPrevPageNil sets the value for PrevPage to be an explicit nil
func (o *PaginationMeta) SetPrevPageNil() {
	o.PrevPage.Set(nil)
}

// UnsetPrevPage ensures that no value is present for PrevPage, not even an explicit nil
func (o *PaginationMeta) UnsetPrevPage() {
	o.PrevPage.Unset()
}

// GetTotalPages returns the TotalPages field value
func (o *PaginationMeta) GetTotalPages() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetTotalPagesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPages, true
}

// SetTotalPages sets field value
func (o *PaginationMeta) SetTotalPages(v int32) {
	o.TotalPages = v
}

// GetTotalCount returns the TotalCount field value
func (o *PaginationMeta) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *PaginationMeta) SetTotalCount(v int32) {
	o.TotalCount = v
}

func (o PaginationMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["current_page"] = o.CurrentPage
	if o.NextPage.IsSet() {
		toSerialize["next_page"] = o.NextPage.Get()
	}
	if o.PrevPage.IsSet() {
		toSerialize["prev_page"] = o.PrevPage.Get()
	}
	toSerialize["total_pages"] = o.TotalPages
	toSerialize["total_count"] = o.TotalCount
	return toSerialize, nil
}

func (o *PaginationMeta) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"current_page",
		"total_pages",
		"total_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaginationMeta := _PaginationMeta{}

	err = json.Unmarshal(bytes, &varPaginationMeta)

	if err != nil {
		return err
	}

	*o = PaginationMeta(varPaginationMeta)

	return err
}

type NullablePaginationMeta struct {
	value *PaginationMeta
	isSet bool
}

func (v NullablePaginationMeta) Get() *PaginationMeta {
	return v.value
}

func (v *NullablePaginationMeta) Set(val *PaginationMeta) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationMeta) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationMeta(val *PaginationMeta) *NullablePaginationMeta {
	return &NullablePaginationMeta{value: val, isSet: true}
}

func (v NullablePaginationMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


