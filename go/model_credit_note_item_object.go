/*
Lago API documentation

Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

API version: 0.52.0-beta
Contact: tech@getlago.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreditNoteItemObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNoteItemObject{}

// CreditNoteItemObject struct for CreditNoteItemObject
type CreditNoteItemObject struct {
	// The credit note’s item unique identifier, created by Lago.
	LagoId string `json:"lago_id"`
	// The credit note’s item amount, expressed in cents.
	AmountCents int32 `json:"amount_cents"`
	AmountCurrency Currency `json:"amount_currency"`
	Fee CreditNoteItemObjectFee `json:"fee"`
}

type _CreditNoteItemObject CreditNoteItemObject

// NewCreditNoteItemObject instantiates a new CreditNoteItemObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteItemObject(lagoId string, amountCents int32, amountCurrency Currency, fee CreditNoteItemObjectFee) *CreditNoteItemObject {
	this := CreditNoteItemObject{}
	this.LagoId = lagoId
	this.AmountCents = amountCents
	this.AmountCurrency = amountCurrency
	this.Fee = fee
	return &this
}

// NewCreditNoteItemObjectWithDefaults instantiates a new CreditNoteItemObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteItemObjectWithDefaults() *CreditNoteItemObject {
	this := CreditNoteItemObject{}
	return &this
}

// GetLagoId returns the LagoId field value
func (o *CreditNoteItemObject) GetLagoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LagoId
}

// GetLagoIdOk returns a tuple with the LagoId field value
// and a boolean to check if the value has been set.
func (o *CreditNoteItemObject) GetLagoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LagoId, true
}

// SetLagoId sets field value
func (o *CreditNoteItemObject) SetLagoId(v string) {
	o.LagoId = v
}

// GetAmountCents returns the AmountCents field value
func (o *CreditNoteItemObject) GetAmountCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AmountCents
}

// GetAmountCentsOk returns a tuple with the AmountCents field value
// and a boolean to check if the value has been set.
func (o *CreditNoteItemObject) GetAmountCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountCents, true
}

// SetAmountCents sets field value
func (o *CreditNoteItemObject) SetAmountCents(v int32) {
	o.AmountCents = v
}

// GetAmountCurrency returns the AmountCurrency field value
func (o *CreditNoteItemObject) GetAmountCurrency() Currency {
	if o == nil {
		var ret Currency
		return ret
	}

	return o.AmountCurrency
}

// GetAmountCurrencyOk returns a tuple with the AmountCurrency field value
// and a boolean to check if the value has been set.
func (o *CreditNoteItemObject) GetAmountCurrencyOk() (*Currency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountCurrency, true
}

// SetAmountCurrency sets field value
func (o *CreditNoteItemObject) SetAmountCurrency(v Currency) {
	o.AmountCurrency = v
}

// GetFee returns the Fee field value
func (o *CreditNoteItemObject) GetFee() CreditNoteItemObjectFee {
	if o == nil {
		var ret CreditNoteItemObjectFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *CreditNoteItemObject) GetFeeOk() (*CreditNoteItemObjectFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *CreditNoteItemObject) SetFee(v CreditNoteItemObjectFee) {
	o.Fee = v
}

func (o CreditNoteItemObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNoteItemObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lago_id"] = o.LagoId
	toSerialize["amount_cents"] = o.AmountCents
	toSerialize["amount_currency"] = o.AmountCurrency
	toSerialize["fee"] = o.Fee
	return toSerialize, nil
}

func (o *CreditNoteItemObject) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lago_id",
		"amount_cents",
		"amount_currency",
		"fee",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditNoteItemObject := _CreditNoteItemObject{}

	err = json.Unmarshal(bytes, &varCreditNoteItemObject)

	if err != nil {
		return err
	}

	*o = CreditNoteItemObject(varCreditNoteItemObject)

	return err
}

type NullableCreditNoteItemObject struct {
	value *CreditNoteItemObject
	isSet bool
}

func (v NullableCreditNoteItemObject) Get() *CreditNoteItemObject {
	return v.value
}

func (v *NullableCreditNoteItemObject) Set(val *CreditNoteItemObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteItemObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteItemObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteItemObject(val *CreditNoteItemObject) *NullableCreditNoteItemObject {
	return &NullableCreditNoteItemObject{value: val, isSet: true}
}

func (v NullableCreditNoteItemObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteItemObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


