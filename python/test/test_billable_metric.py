# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.billable_metric import BillableMetric

class TestBillableMetric(unittest.TestCase):
    """BillableMetric unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillableMetric:
        """Test BillableMetric
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillableMetric`
        """
        model = BillableMetric()
        if include_optional:
            return BillableMetric(
                billable_metric = lago_api.models.billable_metric_object.BillableMetricObject(
                    lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                    name = 'Storage', 
                    code = 'storage', 
                    description = 'GB of storage used in my application', 
                    recurring = False, 
                    created_at = '2022-09-14T16:35:31Z', 
                    field_name = 'gb', 
                    aggregation_type = 'sum_agg', 
                    weighted_interval = 'seconds', 
                    group = lago_api.models.billable_metric_group.BillableMetricGroup(
                        key = 'region', 
                        values = ["us-east-1","us-east-2","eu-west-1"], ), 
                    active_subscriptions_count = 4, 
                    draft_invoices_count = 10, 
                    plans_count = 4, )
            )
        else:
            return BillableMetric(
                billable_metric = lago_api.models.billable_metric_object.BillableMetricObject(
                    lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                    name = 'Storage', 
                    code = 'storage', 
                    description = 'GB of storage used in my application', 
                    recurring = False, 
                    created_at = '2022-09-14T16:35:31Z', 
                    field_name = 'gb', 
                    aggregation_type = 'sum_agg', 
                    weighted_interval = 'seconds', 
                    group = lago_api.models.billable_metric_group.BillableMetricGroup(
                        key = 'region', 
                        values = ["us-east-1","us-east-2","eu-west-1"], ), 
                    active_subscriptions_count = 4, 
                    draft_invoices_count = 10, 
                    plans_count = 4, ),
        )
        """

    def testBillableMetric(self):
        """Test BillableMetric"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
