# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.subscription_object_extended import SubscriptionObjectExtended

class TestSubscriptionObjectExtended(unittest.TestCase):
    """SubscriptionObjectExtended unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionObjectExtended:
        """Test SubscriptionObjectExtended
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionObjectExtended`
        """
        model = SubscriptionObjectExtended()
        if include_optional:
            return SubscriptionObjectExtended(
                lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90',
                external_id = '5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba',
                lago_customer_id = '1a901a90-1a90-1a90-1a90-1a901a901a90',
                external_customer_id = '5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba',
                billing_time = 'anniversary',
                name = 'Repository A',
                plan_code = 'premium',
                status = 'active',
                created_at = '2022-08-08T00:00Z',
                canceled_at = '2022-09-14T16:35:31Z',
                started_at = '2022-08-08T00:00Z',
                ending_at = '2022-10-08T00:00Z',
                subscription_at = '2022-08-08T00:00Z',
                terminated_at = '2022-09-14T16:35:31Z',
                previous_plan_code = '',
                next_plan_code = '',
                downgrade_plan_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                plan = lago_api.models.plan_object.PlanObject(
                    lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                    name = 'Startup', 
                    invoice_display_name = 'Startup plan', 
                    created_at = '2023-06-27T19:43:42Z', 
                    code = 'startup', 
                    interval = 'monthly', 
                    description = '', 
                    amount_cents = 10000, 
                    amount_currency = null, 
                    trial_period = 5, 
                    pay_in_advance = True, 
                    bill_charges_monthly = True, 
                    active_subscriptions_count = 0, 
                    draft_invoices_count = 0, 
                    charges = [{"lago_id":"1a901a90-1a90-1a90-1a90-1a901a901a91","lago_billable_metric_id":"1a901a90-1a90-1a90-1a90-1a901a901a91","billable_metric_code":"requests","created_at":"2023-06-27T19:43:42Z","charge_model":"package","invoiceable":true,"invoice_display_name":"Setup","pay_in_advance":false,"prorated":false,"min_amount_cents":3000,"properties":{"amount":"30","free_units":100,"package_size":1000},"group_properties":[]},{"lago_id":"1a901a90-1a90-1a90-1a90-1a901a901a92","lago_billable_metric_id":"1a901a90-1a90-1a90-1a90-1a901a901a92","billable_metric_code":"cpu","created_at":"2023-06-27T19:43:42Z","charge_model":"graduated","invoiceable":true,"invoice_display_name":"Setup","pay_in_advance":false,"prorated":false,"min_amount_cents":0,"properties":{"graduated_ranges":[{"from_value":0,"to_value":10,"flat_amount":"10","per_unit_amount":"0.5"},{"from_value":11,"to_value":null,"flat_amount":"0","per_unit_amount":"0.4"}]},"group_properties":[]},{"lago_id":"1a901a90-1a90-1a90-1a90-1a901a901a93","lago_billable_metric_id":"1a901a90-1a90-1a90-1a90-1a901a901a93","billable_metric_code":"seats","created_at":"2023-06-27T19:43:42Z","charge_model":"standard","invoiceable":true,"invoice_display_name":"Setup","pay_in_advance":true,"prorated":false,"min_amount_cents":0,"properties":{},"group_properties":[{"group_id":"1a901a90-1a90-1a90-1a90-1a901a901a01","invoice_display_name":"Europe","values":{"amount":"10"}},{"group_id":"1a901a90-1a90-1a90-1a90-1a901a901a02","invoice_display_name":"USA","values":{"amount":"5"}},{"group_id":"1a901a90-1a90-1a90-1a90-1a901a901a03","invoice_display_name":"Africa","values":{"amount":"8"}}]},{"lago_id":"1a901a90-1a90-1a90-1a90-1a901a901a94","lago_billable_metric_id":"1a901a90-1a90-1a90-1a90-1a901a901a94","billable_metric_code":"storage","created_at":"2023-06-27T19:43:42Z","charge_model":"volume","invoiceable":true,"invoice_display_name":"Setup","pay_in_advance":false,"prorated":false,"min_amount_cents":0,"properties":{"volume_ranges":[{"from_value":0,"to_value":100,"flat_amount":"0","per_unit_amount":"0"},{"from_value":101,"to_value":null,"flat_amount":"0","per_unit_amount":"0.5"}]},"group_properties":[]},{"lago_id":"1a901a90-1a90-1a90-1a90-1a901a901a95","lago_billable_metric_id":"1a901a90-1a90-1a90-1a90-1a901a901a95","billable_metric_code":"payments","created_at":"2023-06-27T19:43:42Z","charge_model":"percentage","invoiceable":false,"invoice_display_name":"Setup","pay_in_advance":true,"prorated":false,"min_amount_cents":0,"properties":{"rate":"1","fixed_amount":"0.5","free_units_per_events":5,"free_units_per_total_aggregation":"500"},"group_properties":[]}], 
                    taxes = [
                        lago_api.models.tax_object.TaxObject(
                            lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                            name = 'TVA', 
                            code = 'french_standard_vat', 
                            description = 'French standard VAT', 
                            rate = 20, 
                            applied_to_organization = True, 
                            add_ons_count = 0, 
                            charges_count = 0, 
                            customers_count = 0, 
                            plans_count = 0, 
                            created_at = '2023-07-06T14:35:58Z', )
                        ], )
            )
        else:
            return SubscriptionObjectExtended(
                lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90',
                external_id = '5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba',
                lago_customer_id = '1a901a90-1a90-1a90-1a90-1a901a901a90',
                external_customer_id = '5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba',
                billing_time = 'anniversary',
                plan_code = 'premium',
                status = 'active',
                created_at = '2022-08-08T00:00Z',
                subscription_at = '2022-08-08T00:00Z',
        )
        """

    def testSubscriptionObjectExtended(self):
        """Test SubscriptionObjectExtended"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
