# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.organization import Organization

class TestOrganization(unittest.TestCase):
    """Organization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Organization:
        """Test Organization
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Organization`
        """
        model = Organization()
        if include_optional:
            return Organization(
                organization = lago_api.models.organization_object.OrganizationObject(
                    lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                    name = 'Name1', 
                    created_at = '2022-05-02T13:04:09Z', 
                    webhook_url = 'https://webhook.brex.com', 
                    webhook_urls = ["https://webhook.brex.com","https://webhook2.brex.com"], 
                    country = null, 
                    default_currency = null, 
                    address_line1 = '100 Brex Street', 
                    address_line2 = '', 
                    state = 'NYC', 
                    zipcode = '10000', 
                    email = 'brex@brex.com', 
                    city = 'New York', 
                    legal_name = '', 
                    legal_number = '', 
                    net_payment_term = 30, 
                    tax_identification_number = 'US123456789', 
                    timezone = null, 
                    billing_configuration = lago_api.models.organization_billing_configuration.OrganizationBillingConfiguration(
                        invoice_footer = 'This is my customer footer', 
                        invoice_grace_period = 3, 
                        document_locale = 'en', ), 
                    taxes = [
                        lago_api.models.tax_object.TaxObject(
                            lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                            name = 'TVA', 
                            code = 'french_standard_vat', 
                            description = 'French standard VAT', 
                            rate = 20, 
                            applied_to_organization = True, 
                            add_ons_count = 0, 
                            charges_count = 0, 
                            customers_count = 0, 
                            plans_count = 0, 
                            created_at = '2023-07-06T14:35:58Z', )
                        ], )
            )
        else:
            return Organization(
                organization = lago_api.models.organization_object.OrganizationObject(
                    lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                    name = 'Name1', 
                    created_at = '2022-05-02T13:04:09Z', 
                    webhook_url = 'https://webhook.brex.com', 
                    webhook_urls = ["https://webhook.brex.com","https://webhook2.brex.com"], 
                    country = null, 
                    default_currency = null, 
                    address_line1 = '100 Brex Street', 
                    address_line2 = '', 
                    state = 'NYC', 
                    zipcode = '10000', 
                    email = 'brex@brex.com', 
                    city = 'New York', 
                    legal_name = '', 
                    legal_number = '', 
                    net_payment_term = 30, 
                    tax_identification_number = 'US123456789', 
                    timezone = null, 
                    billing_configuration = lago_api.models.organization_billing_configuration.OrganizationBillingConfiguration(
                        invoice_footer = 'This is my customer footer', 
                        invoice_grace_period = 3, 
                        document_locale = 'en', ), 
                    taxes = [
                        lago_api.models.tax_object.TaxObject(
                            lago_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                            name = 'TVA', 
                            code = 'french_standard_vat', 
                            description = 'French standard VAT', 
                            rate = 20, 
                            applied_to_organization = True, 
                            add_ons_count = 0, 
                            charges_count = 0, 
                            customers_count = 0, 
                            plans_count = 0, 
                            created_at = '2023-07-06T14:35:58Z', )
                        ], ),
        )
        """

    def testOrganization(self):
        """Test Organization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
