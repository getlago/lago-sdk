# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.invoiced_usages import InvoicedUsages

class TestInvoicedUsages(unittest.TestCase):
    """InvoicedUsages unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoicedUsages:
        """Test InvoicedUsages
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoicedUsages`
        """
        model = InvoicedUsages()
        if include_optional:
            return InvoicedUsages(
                invoiced_usages = [
                    lago_api.models.invoiced_usage_object.InvoicedUsageObject(
                        month = '2023-11-01T00:00:00.000Z', 
                        code = 'code1', 
                        amount_cents = 50000, 
                        currency = null, )
                    ]
            )
        else:
            return InvoicedUsages(
                invoiced_usages = [
                    lago_api.models.invoiced_usage_object.InvoicedUsageObject(
                        month = '2023-11-01T00:00:00.000Z', 
                        code = 'code1', 
                        amount_cents = 50000, 
                        currency = null, )
                    ],
        )
        """

    def testInvoicedUsages(self):
        """Test InvoicedUsages"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
