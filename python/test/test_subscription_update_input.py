# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.subscription_update_input import SubscriptionUpdateInput

class TestSubscriptionUpdateInput(unittest.TestCase):
    """SubscriptionUpdateInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionUpdateInput:
        """Test SubscriptionUpdateInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionUpdateInput`
        """
        model = SubscriptionUpdateInput()
        if include_optional:
            return SubscriptionUpdateInput(
                subscription = lago_api.models.subscription_update_input_subscription.SubscriptionUpdateInput_subscription(
                    name = 'Repository B', 
                    ending_at = '2022-10-08T00:00Z', 
                    subscription_at = '2022-08-08T00:00Z', 
                    plan_overrides = lago_api.models.plan_overrides_object.PlanOverridesObject(
                        amount_cents = 10000, 
                        amount_currency = null, 
                        description = 'Plan for early stage startups.', 
                        invoice_display_name = 'Startup plan', 
                        name = 'Startup', 
                        tax_codes = ["french_standard_vat"], 
                        trial_period = 5, 
                        charges = [
                            lago_api.models.plan_overrides_object_charges_inner.PlanOverridesObject_charges_inner(
                                id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                                billable_metric_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                                invoice_display_name = 'Setup', 
                                min_amount_cents = 0, 
                                properties = null, 
                                group_properties = [
                                    lago_api.models.plan_create_input_plan_charges_inner_group_properties_inner.PlanCreateInput_plan_charges_inner_group_properties_inner(
                                        group_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                                        values = null, )
                                    ], 
                                tax_codes = ["french_standard_vat"], )
                            ], ), )
            )
        else:
            return SubscriptionUpdateInput(
                subscription = lago_api.models.subscription_update_input_subscription.SubscriptionUpdateInput_subscription(
                    name = 'Repository B', 
                    ending_at = '2022-10-08T00:00Z', 
                    subscription_at = '2022-08-08T00:00Z', 
                    plan_overrides = lago_api.models.plan_overrides_object.PlanOverridesObject(
                        amount_cents = 10000, 
                        amount_currency = null, 
                        description = 'Plan for early stage startups.', 
                        invoice_display_name = 'Startup plan', 
                        name = 'Startup', 
                        tax_codes = ["french_standard_vat"], 
                        trial_period = 5, 
                        charges = [
                            lago_api.models.plan_overrides_object_charges_inner.PlanOverridesObject_charges_inner(
                                id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                                billable_metric_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                                invoice_display_name = 'Setup', 
                                min_amount_cents = 0, 
                                properties = null, 
                                group_properties = [
                                    lago_api.models.plan_create_input_plan_charges_inner_group_properties_inner.PlanCreateInput_plan_charges_inner_group_properties_inner(
                                        group_id = '1a901a90-1a90-1a90-1a90-1a901a901a90', 
                                        values = null, )
                                    ], 
                                tax_codes = ["french_standard_vat"], )
                            ], ), ),
        )
        """

    def testSubscriptionUpdateInput(self):
        """Test SubscriptionUpdateInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
