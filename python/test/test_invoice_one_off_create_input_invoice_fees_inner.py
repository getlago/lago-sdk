# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.invoice_one_off_create_input_invoice_fees_inner import InvoiceOneOffCreateInputInvoiceFeesInner

class TestInvoiceOneOffCreateInputInvoiceFeesInner(unittest.TestCase):
    """InvoiceOneOffCreateInputInvoiceFeesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceOneOffCreateInputInvoiceFeesInner:
        """Test InvoiceOneOffCreateInputInvoiceFeesInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceOneOffCreateInputInvoiceFeesInner`
        """
        model = InvoiceOneOffCreateInputInvoiceFeesInner()
        if include_optional:
            return InvoiceOneOffCreateInputInvoiceFeesInner(
                add_on_code = 'setup_fee',
                invoice_display_name = 'Setup Fee (SF1)',
                unit_amount_cents = 12000,
                units = '2.5',
                description = 'The description of the fee line item in the invoice. By default, the description of the add-on is used.',
                tax_codes = ["french_standard_vat"]
            )
        else:
            return InvoiceOneOffCreateInputInvoiceFeesInner(
                add_on_code = 'setup_fee',
        )
        """

    def testInvoiceOneOffCreateInputInvoiceFeesInner(self):
        """Test InvoiceOneOffCreateInputInvoiceFeesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
