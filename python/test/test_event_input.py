# coding: utf-8

"""
    Lago API documentation

    Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

    The version of the OpenAPI document: 0.52.0-beta
    Contact: tech@getlago.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lago_api.models.event_input import EventInput

class TestEventInput(unittest.TestCase):
    """EventInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventInput:
        """Test EventInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventInput`
        """
        model = EventInput()
        if include_optional:
            return EventInput(
                event = lago_api.models.event_input_event.EventInput_event(
                    transaction_id = 'transaction_1234567890', 
                    external_customer_id = '5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba', 
                    external_subscription_id = 'sub_1234567890', 
                    code = 'storage', 
                    timestamp = 1651240791.123, 
                    properties = {"gb":10}, )
            )
        else:
            return EventInput(
                event = lago_api.models.event_input_event.EventInput_event(
                    transaction_id = 'transaction_1234567890', 
                    external_customer_id = '5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba', 
                    external_subscription_id = 'sub_1234567890', 
                    code = 'storage', 
                    timestamp = 1651240791.123, 
                    properties = {"gb":10}, ),
        )
        """

    def testEventInput(self):
        """Test EventInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
