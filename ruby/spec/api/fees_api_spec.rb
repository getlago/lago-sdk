=begin
#Lago API documentation

#Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

The version of the OpenAPI document: 0.45.0-beta
Contact: tech@getlago.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for LagoAPI::FeesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeesApi' do
  before do
    # run before each test
    @api_instance = LagoAPI::FeesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeesApi' do
    it 'should create an instance of FeesApi' do
      expect(@api_instance).to be_instance_of(LagoAPI::FeesApi)
    end
  end

  # unit tests for find_all_fees
  # List all fees
  # This endpoint is used for retrieving all fees that has been issued.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of records per page.
  # @option opts [String] :external_customer_id Unique identifier assigned to the customer in your application.
  # @option opts [String] :external_subscription_id External subscription ID
  # @option opts [Currency] :currency Filter results by fee’s currency.
  # @option opts [String] :fee_type The fee type. Possible values are &#x60;add-on&#x60;, &#x60;charge&#x60;, &#x60;credit&#x60; or &#x60;subscription&#x60;.
  # @option opts [String] :billable_metric_code Filter results by the &#x60;code&#x60; of the billable metric attached to the fee. Only applies to &#x60;charge&#x60; types.
  # @option opts [String] :payment_status Indicates the payment status of the fee. It represents the current status of the payment associated with the fee. The possible values for this field are &#x60;pending&#x60;, &#x60;succeeded&#x60;, &#x60;failed&#x60; and refunded&#x60;.
  # @option opts [Time] :created_at_from Filter results created after creation date and time in UTC.
  # @option opts [Time] :created_at_to Filter results created before creation date and time in UTC.
  # @option opts [Time] :succeeded_at_from Filter results with payment success after creation date and time in UTC.
  # @option opts [Time] :succeeded_at_to Filter results with payment success after creation date and time in UTC.
  # @option opts [Time] :failed_at_from Filter results with payment failure after creation date and time in UTC.
  # @option opts [Time] :failed_at_to Filter results with payment failure after creation date and time in UTC.
  # @option opts [Time] :refunded_at_from Filter results with payment refund after creation date and time in UTC.
  # @option opts [Time] :refunded_at_to Filter results with payment refund after creation date and time in UTC.
  # @return [FeesPaginated]
  describe 'find_all_fees test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_fee
  # Retrieve a specific fee
  # This endpoint is used for retrieving a specific fee that has been issued.
  # @param lago_id Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee’s record within the Lago system.
  # @param [Hash] opts the optional parameters
  # @return [Fee]
  describe 'find_fee test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_fee
  # Update a fee
  # This endpoint is used for updating a specific fee that has been issued.
  # @param lago_id Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee’s record within the Lago system.
  # @param [Hash] opts the optional parameters
  # @option opts [FeeUpdateInput] :fee_update_input Fee payload
  # @return [Fee]
  describe 'update_fee test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
