=begin
#Lago API documentation

#Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

The version of the OpenAPI document: 0.45.0-beta
Contact: tech@getlago.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for LagoAPI::CouponsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CouponsApi' do
  before do
    # run before each test
    @api_instance = LagoAPI::CouponsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CouponsApi' do
    it 'should create an instance of CouponsApi' do
      expect(@api_instance).to be_instance_of(LagoAPI::CouponsApi)
    end
  end

  # unit tests for apply_coupon
  # Apply a coupon to a customer
  # This endpoint is used to apply a specific coupon to a customer, before or during a subscription.
  # @param applied_coupon_input Apply coupon payload
  # @param [Hash] opts the optional parameters
  # @return [AppliedCoupon]
  describe 'apply_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_coupon
  # Create a coupon
  # This endpoint is used to create a coupon that can be then attached to a customer to create a discount.
  # @param coupon_create_input Coupon payload
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'create_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_applied_coupon
  # Delete an applied coupon
  # This endpoint is used to delete a specific coupon that has been applied to a customer.
  # @param external_customer_id The customer external unique identifier (provided by your own application)
  # @param applied_coupon_id Unique identifier of the applied coupon, created by Lago.
  # @param [Hash] opts the optional parameters
  # @return [AppliedCoupon]
  describe 'delete_applied_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for destroy_coupon
  # Delete a coupon
  # This endpoint is used to delete a coupon.
  # @param code Unique code used to identify the coupon.
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'destroy_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_all_applied_coupons
  # List all applied coupons
  # This endpoint is used to list all applied coupons. You can filter by coupon status and by customer.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of records per page.
  # @option opts [String] :status The status of the coupon. Can be either &#x60;active&#x60; or &#x60;terminated&#x60;.
  # @option opts [String] :external_customer_id The customer external unique identifier (provided by your own application)
  # @return [AppliedCouponsPaginated]
  describe 'find_all_applied_coupons test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_all_coupons
  # List all coupons
  # This endpoint is used to list all existing coupons.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of records per page.
  # @return [CouponsPaginated]
  describe 'find_all_coupons test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_coupon
  # Retrieve a coupon
  # This endpoint is used to retrieve a specific coupon.
  # @param code Unique code used to identify the coupon.
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'find_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_coupon
  # Update a coupon
  # This endpoint is used to update a coupon that can be then attached to a customer to create a discount.
  # @param code Unique code used to identify the coupon.
  # @param coupon_update_input Coupon payload
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'update_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
