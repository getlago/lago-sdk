=begin
#Lago API documentation

#Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

The version of the OpenAPI document: 0.45.0-beta
Contact: tech@getlago.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for LagoAPI::CustomersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomersApi' do
  before do
    # run before each test
    @api_instance = LagoAPI::CustomersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomersApi' do
    it 'should create an instance of CustomersApi' do
      expect(@api_instance).to be_instance_of(LagoAPI::CustomersApi)
    end
  end

  # unit tests for create_customer
  # Create a customer
  # This endpoint creates a new customer.
  # @param customer_create_input Customer payload
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'create_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_applied_coupon
  # Delete an applied coupon
  # This endpoint is used to delete a specific coupon that has been applied to a customer.
  # @param external_customer_id The customer external unique identifier (provided by your own application)
  # @param applied_coupon_id Unique identifier of the applied coupon, created by Lago.
  # @param [Hash] opts the optional parameters
  # @return [AppliedCoupon]
  describe 'delete_applied_coupon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for destroy_customer
  # Delete a customer
  # This endpoint deletes an existing customer.
  # @param external_id External ID of the existing customer
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'destroy_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_all_customers
  # List all customers
  # This endpoint retrieves all existing customers.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of records per page.
  # @return [CustomersPaginated]
  describe 'find_all_customers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_customer
  # Retrieve a customer
  # This endpoint retrieves an existing customer.
  # @param external_id External ID of the existing customer
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'find_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_customer_current_usage
  # Retrieve customer current usage
  # This endpoint enables the retrieval of the usage-based billing data for a customer within the current period.
  # @param external_customer_id The customer external unique identifier (provided by your own application).
  # @param external_subscription_id The unique identifier of the subscription within your application.
  # @param [Hash] opts the optional parameters
  # @return [CustomerUsage]
  describe 'find_customer_current_usage test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_customer_portal_url
  # Get a customer portal URL
  # Retrieves an embeddable link for displaying a customer portal.  This endpoint allows you to fetch the URL that can be embedded to provide customers access to a dedicated portal
  # @param external_customer_id External ID of the existing customer
  # @param [Hash] opts the optional parameters
  # @return [GetCustomerPortalUrl200Response]
  describe 'get_customer_portal_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
