=begin
#Lago API documentation

#Lago API allows your application to push customer information and metrics (events) from your application to the billing application.

The version of the OpenAPI document: 0.45.0-beta
Contact: tech@getlago.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for LagoAPI::WalletsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WalletsApi' do
  before do
    # run before each test
    @api_instance = LagoAPI::WalletsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WalletsApi' do
    it 'should create an instance of WalletsApi' do
      expect(@api_instance).to be_instance_of(LagoAPI::WalletsApi)
    end
  end

  # unit tests for create_wallet
  # Create a wallet
  # This endpoint is used to create a wallet with prepaid credits.
  # @param wallet_create_input Wallet payload
  # @param [Hash] opts the optional parameters
  # @return [Wallet]
  describe 'create_wallet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_wallet_transaction
  # Top up a wallet
  # This endpoint is used to top-up an active wallet.
  # @param wallet_transaction_create_input Wallet transaction payload
  # @param [Hash] opts the optional parameters
  # @return [WalletTransactions]
  describe 'create_wallet_transaction test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for destroy_wallet
  # Terminate a wallet
  # This endpoint is used to terminate an existing wallet with prepaid credits.
  # @param lago_id Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet’s record within the Lago system.
  # @param [Hash] opts the optional parameters
  # @return [Wallet]
  describe 'destroy_wallet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_all_wallet_transactions
  # List all wallet transactions
  # This endpoint is used to list all wallet transactions.
  # @param lago_id Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet’s record within the Lago system.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of records per page.
  # @option opts [String] :status The status of the wallet transaction. Possible values are &#x60;pending&#x60; or &#x60;settled&#x60;.
  # @option opts [String] :transaction_type The transaction type of the wallet transaction. Possible values are &#x60;inbound&#x60; (increasing the wallet balance) or &#x60;outbound&#x60; (decreasing the wallet balance).
  # @return [WalletTransactionsPaginated]
  describe 'find_all_wallet_transactions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_all_wallets
  # List all wallets
  # This endpoint is used to list all wallets with prepaid credits.
  # @param external_customer_id The customer external unique identifier (provided by your own application).
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of records per page.
  # @return [WalletsPaginated]
  describe 'find_all_wallets test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_wallet
  # Retrieve a wallet
  # This endpoint is used to retrieve an existing wallet with prepaid credits.
  # @param lago_id Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet’s record within the Lago system.
  # @param [Hash] opts the optional parameters
  # @return [Wallet]
  describe 'find_wallet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_wallet
  # Update a wallet
  # This endpoint is used to update an existing wallet with prepaid credits.
  # @param lago_id Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet’s record within the Lago system.
  # @param wallet_update_input Wallet update payload
  # @param [Hash] opts the optional parameters
  # @return [Wallet]
  describe 'update_wallet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
